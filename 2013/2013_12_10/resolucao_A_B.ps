%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: resolucao_A_B.dvi
%%CreationDate: Fri Dec 27 18:09:19 2013
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: SFBX1728 SFRM1095 SFBX1095 SFTI1095 CMMI10 CMMI8 CMR10
%%+ CMR8 CMSY8 CMR6 CMSY10 SFRM1000 CMEX10 SFRM0800
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o resolucao_A_B.ps resolucao_A_B.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.12.27:1809
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 845 2013-11-08 19:01:48Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.19, 2013/11/08
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def

    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 

  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 801 2013-07-09 18:10:41Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.04, 2011/10/21
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 805 2013-07-11 13:18:11Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.14, 2012/09/18.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def

/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-circ.pro 0 0
%!
% $Id: pst-circ.pro 3 2007-12-23 16:23:22Z herbert $
%
% PostScript prologue for pst-circ.tex.
% version 0.01 2007-03-23 (hv)
% For distribution, see pstricks.tex.
%
/GetNode {
  tx@NodeDict begin
    tx@NodeDict 1 index known { load GetCenter } { pop 0 0 } ifelse
  end
} bind def 
/ZeroEq { abs 1E-10 lt } bind def /EqDr {
  4 copy 3 -1 roll sub 7 1 roll exch sub 5 1 roll 4 -1 roll
  mul 3 1 roll mul exch sub } bind def
/InterLines {
  EqDr /D1c exch def /D1b exch def /D1a exch def
  EqDr /D2c exch def /D2b exch def /D2a exch def
  D1a D2b mul D1b D2a mul sub dup ZeroEq
  { pop pop pop 0 0 }
  {
    /Det exch def
    D1b D2c mul D1c D2b mul sub Det div
    D1a D2c mul D2a D1c mul sub Det div
  }
  ifelse  } bind def
% END pst-circ.pro

%%EndProcSet
%%BeginProcSet: cm-super-t1.enc 0 0
% This file is generated from `T1uni.map' and `glyphlist.txt', `gl-other.txt'
%
% LIGKERN hyphen hyphen =: endash ; endash hyphen =: emdash ;
% LIGKERN quoteleft quoteleft =: quotedblleft ;
% LIGKERN quoteright quoteright =: quotedblright ;
% LIGKERN comma comma =: quotedblbase ; less less =: guillemotleft ;
% LIGKERN greater greater =: guillemotright ;
% LIGKERN f f =: ff ; f i =: fi ; f l =: fl ; ff i =: ffi ; ff l =: ffl ;
%
% LIGKERN space {} * ; * {} space ; zero {} * ; * {} zero ;
% LIGKERN one {} * ; * {} one ; two {} * ; * {} two ;
% LIGKERN three {} * ; * {} three ; four {} * ; * {} four ;
% LIGKERN five {} * ; * {} five ; six {} * ; * {} six ;
% LIGKERN seven {} * ; * {} seven ; eight {} * ; * {} eight ;
% LIGKERN nine {} * ; * {} nine ;
%
/T1Encoding [
% 0x00
/grave
/acute
/circumflex
/tilde
/dieresis
/hungarumlaut
/ring
/caron
/breve
/macron
/dotaccent
/cedilla
/ogonek
/quotesinglbase
/guilsinglleft
/guilsinglright
% 0x10
/quotedblleft
/quotedblright
/quotedblbase
/guillemotleft
/guillemotright
/endash
/emdash
/afii61664
/perthousandzero % PERTHOUSAND ZERO
/dotlessi
/dotlessj
/ff
/fi
/fl
/ffi
/ffl
% 0x20
/uni2423
/exclam
/quotedbl
/numbersign
/dollar
/percent
/ampersand
/quoteright
/parenleft
/parenright
/asterisk
/plus
/comma
/hyphen
/period
/slash
% 0x30
/zero
/one
/two
/three
/four
/five
/six
/seven
/eight
/nine
/colon
/semicolon
/less
/equal
/greater
/question
% 0x40
/at
/A
/B
/C
/D
/E
/F
/G
/H
/I
/J
/K
/L
/M
/N
/O
% 0x50
/P
/Q
/R
/S
/T
/U
/V
/W
/X
/Y
/Z
/bracketleft
/backslash
/bracketright
/asciicircum
/underscore
% 0x60
/quoteleft
/a
/b
/c
/d
/e
/f
/g
/h
/i
/j
/k
/l
/m
/n
/o
% 0x70
/p
/q
/r
/s
/t
/u
/v
/w
/x
/y
/z
/braceleft
/bar
/braceright
/asciitilde
/hyphen.alt % HANGING HYPHEN
% 0x80
/Abreve
/Aogonek
/Cacute
/Ccaron
/Dcaron
/Ecaron
/Eogonek
/Gbreve
/Lacute
/Lcaron
/Lslash
/Nacute
/Ncaron
/Eng
/Ohungarumlaut
/Racute
% 0x90
/Rcaron
/Sacute
/Scaron
/Scedilla
/Tcaron
/Tcommaaccent
/Uhungarumlaut
/Uring
/Ydieresis
/Zacute
/Zcaron
/Zdotaccent
/IJ
/Idotaccent
/dcroat
/section
% 0xA0
/abreve
/aogonek
/cacute
/ccaron
/dcaron
/ecaron
/eogonek
/gbreve
/lacute
/lcaron
/lslash
/nacute
/ncaron
/eng
/ohungarumlaut
/racute
% 0xB0
/rcaron
/sacute
/scaron
/scedilla
/tcaron
/tcommaaccent
/uhungarumlaut
/uring
/ydieresis
/zacute
/zcaron
/zdotaccent
/ij
/exclamdown
/questiondown
/sterling
% 0xC0
/Agrave
/Aacute
/Acircumflex
/Atilde
/Adieresis
/Aring
/AE
/Ccedilla
/Egrave
/Eacute
/Ecircumflex
/Edieresis
/Igrave
/Iacute
/Icircumflex
/Idieresis
% 0xD0
/Eth
/Ntilde
/Ograve
/Oacute
/Ocircumflex
/Otilde
/Odieresis
/OE
/Oslash
/Ugrave
/Uacute
/Ucircumflex
/Udieresis
/Yacute
/Thorn
/SS % Germandbls
% 0xE0
/agrave
/aacute
/acircumflex
/atilde
/adieresis
/aring
/ae
/ccedilla
/egrave
/eacute
/ecircumflex
/edieresis
/igrave
/iacute
/icircumflex
/idieresis
% 0xF0
/eth
/ntilde
/ograve
/oacute
/ocircumflex
/otilde
/odieresis
/oe
/oslash
/ugrave
/uacute
/ucircumflex
/udieresis
/yacute
/thorn
/germandbls % or /germandbls.alt
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: SFRM0800
%!FontType1-1.0: SFRM0800 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm0800, tcrm0800, larm0800, lbrm0800, lcrm0800, rxrm0800.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM0800 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-203 -320 1554 938}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B948894BA0E437691D4618A0FFB62E3630B93DD190EBC8F306BB78955
34955AD847F95B1923B90644A4707B718BCB527F8D5F617EC559C70A91900E72
9A9D881D02E289B0B0725B43F5FE653ECE8C5F062BD2C10F4B9B0ED3938F84D7
FD5D3725C3F438E46A270FD43270689A5F30B1FD8CD61E7CB544F07FE57D719E
17CB8A7A146AC514A35380CC6D93840A2DCFBE40307F2FFD8AFC0E54D066DAFC
025AD2A93593551D363563A2208329634F6BD80400775EA44ED4F59B0F767946
25D1A692A6C9197B50C369ADC30DACF14BB7FBF9EFA9AC4894FE3E0A6B3245B0
7E7353569A285310D32E52C36FE2A2827319227E0B024A615243399486706FF6
9E76827C1ED6ED10CA2C9E369D5A507991070CB699F666AFA47FB9EE3D968112
38D5F4624378D9B34F8B00E280EA3F61E4CB33EDCC35F0433A4EF6D267C08A0C
5D5A95A531D8A0E1DB1394DA5F72EF2ACE4CFDF20871C679418FB1B481CC5EAC
C1733601DE79FE5D9B793234D4DE58546A5068CACB9EB1D82644358DAE105ED7
BAAF89A47AF526E481D3E105141FC7EB61A5E5602412613D25A39EFCD8AC6ECB
1ED92210690BA38F6A1E1D49AF1B6C8D7904633F0CA55E1E951E9BEED4339DE1
5C97307776C6238E3C3749F55276DE11CA2924C4F3C52A4C8BE676AAB9B3BC35
7EB7894A97EA267B69183CE85021A72BDBAE52CDE0884F0F741273DC6DD1521E
4FCA83B9D6161FF6264618EEEF9BCA1C3563427A1D706E05A7DDA96A49070CD1
E4926BF605989D230669091B143BF176717AEDD8DCC4148CD76BCB10F893048F
2785F543E067700D5DA5BE413542F0125D3EC439A3400DBAECBF2840EC65EBAF
F185F16CFD4621575F7121488968EF48CAE68E37EF8928500D51ED2B12B53F77
651229E66C594784DBA4A4B689CD69E8157A86D7A280DEF90FC98CF4B23648B5
16354CF979E5268D7DC50677B8103A38861C324354EF7FE3F384168BC46760DE
A07559CA60EA821CC5FE7FAE7846103266B08E065423965F9090FDD5C2B27200
E233FA4EA43D258292F85F18DE5E329E274322BC4E616E14D4D40BE9C8F4863A
CA4DB3A5CF07C63F7EE7498D322D05B9CBDE5AD4651822DDC1FD05D89872A024
0E51B650320EB2BFDCA8626B374E1BC9FF47438B5D8041B73BF7110CD42D0090
715A76DBF57784BCD075E170BD76A210E24E75EF1C06A550EB524BE9015C637D
7949AE7325B646D3235BC0FAE817CD9B0E7DF0341D9894B6CBB344360E2EC10F
83DD5A880BB8BCDBC1AC89AD84013A936A061ACBB08CBCEF3798271444A4F0F2
888EBB407E92769952925D1409C9935843DB6DC3B373E90FBC9681BF82DF9004
064B733884BC081F33CB0494636CF6396DA6F74AB46C994880FE8DB2BEFEA90D
79785E058B61290D596559916D3DE1AB50B44666E964AF37894ED2930E7A529C
86EED296CA41673A87B47C57DCC973E9361460D672AB53871FBA3B8DE90965EB
0E986C6419E69BE2380291D3DF41DC8E6923A275A78BF3A39487DAE189F59BBD
E3BC4B083F270378D817B8C93E8FFADCFAD18E698874BA19F3AFC8D55A86745E
2476CF7848189B89472591250D6FA4E19621C9033F77A19FE5E16E54F7ECC508
43131BE8F85C95571926E52BC728A6B725F764ACD772DA0F5B5B75A51703F105
CC68C429E2A6F87A9E3426A7AD11CFA1E496BE684860C4F0BC34696C7B9A1711
7BB508A85E34AB0C0FB1B7A54DC535F127E668C52AC87547318768588D9F1AF7
817E9035702BCCE37694D9DE63F9774308744DE7A39EEC6842B7989D92A53ABD
6CB320D8A5D279899F037CF980E256DEE1190C3E0D55F6C8C1C85165B51BB91B
B31F7CD8462BDF509BEBF99F77567D125E058B3DFDABD7F3AE4C9667CCCA8D1E
224A5E5F7FB2C6F34650E1D029AA6FCE353CE61BC3C72FA3BC09B2097B978FDE
27F039A3DA6DD531736D493A471D9D1EC5806367CBE26E49BE5FE2C233957E3B
6130AD7C452C3EA405779D85218E73286B89660EEB977F5BFC46DC3E72345816
52203A36250AA25E8D0033D6F90BF7E49BF6FC4A658735295CFFA03C793E02BA
C19B34639E97578C0D12650AB9D1B93019A8F20C9C57A1F7D25211936BE64E01
A4EC94702850D1453A1CC4AF6E4BE17E9F347D3885D824CE570B056B6781A583
899A9E954CE4EDD91447945BBA8D5E4F7C322EDFFA47D4543528947EAD371A7D
2482954E1CE0BB20C6CF59961E78B7988948EA26D929E3B69B892AA5CE7D9E28
E40FA24AC56A8C4EA485601EEB09D689D7A1EEEA6C0E7F38B995AD99810B38CB
7A963F1A743580231B6C054B4E399BD636617F0D0FF901BF5F6B6ED82A54E165
B2108E24D2DB224E360B00EC19E4AF3D1CE72564256AA1475909CDBD283CF661
5D460026747763D2683A5F0693055F843A125DD10A68AC317CC09A904BF99BA3
BD77DB5B0DD8DDAD33982F465B37C1E0A0839B04E508540C9F6C3FE524F849D5
B16C48FDBFFB4A0185E38C3F440C40CC117BACD43A400DC83E5BCD4EA689975A
0821BDFF7240CE081122503D8FF291CF91CABE77C55ED01005A995EF801CDA2C
70E9E5D3EEC2776D4DDE2FAD5D75EAF586A0B96BAA7B9CF1B3A173A65DA4F87A
4833091115D1DD42E374357FFD550EA3F638B6DB8A95ED91541B494EB36990D5
94FE0B054B5CBFA9311067643B0AE1CBECBA6B28CB2754AEB1E156AF7B2B9A14
6914A24764CB10357090BA856A229467D5A8493B3D41B290CA0CF7FC44E016AB
DBA0325F3739665F4BF41EB8DBBF2E83B5CB17DA3756A2E8BAC52020266AC2D7
0049FA1259A20CB3C1B576B86721924EF1C33D6AED291F0B78C20D31272B6243
1692CC6754D488DE309609D1A0A76151A94704E28798B4BB88F67843A7181748
09E3C057C10FDA8B73C4851BB481BC86FEADDE5507E1D03D9328B94D7187048A
BD8C42B329EAC163090F32BC5951CEADC025BC2EF2880E068D61F2BF6D3BB779
ACC6EA36CFBFCEF3010CC15E87B571D03FF3863EC8FEE76891B6C4DB37769D02
10879CB10B2751443B3B63FAEA058D34CE83B43BB3AE1CDEDC650432EF005302
3D327951BCCE1C4576837DEDD0ED2C921C6515BFF9EA82A203B9F961ABF60091
C4361F282A454471E87C9F573B373001D829EFCB270CDFA3C9E1FDC750D18950
EF78BB34EE165936400C5D25554FBDE7BE9A167600E197E51313D6BF89706FAE
2CEC255B464BFBAAC228F6DA74F40329D759678998E81F55C4A13C6E697602FC
F0DA3B4FC19AC4852E85E54F8962B8362F11AC3266AF9200CE48C6D432EE5B82
87EA53245CB99911A1EDDE0C8F140CB009A24A80270037C9B5E5165C091C7634
AA0D0F4EB6849A46E40D4187FC3AE9CC5D9F226359B0D0DA1D46AE862E3CD89A
4A2DAABE31464F61D974514265291A040EEC895F2DC2559950A95D9DFCDDF54D
97903F398D641228656B1C6735F2E49039836D849BAF9B9B896B0731C1FF1492
EAC9B7DDF89A5C8FCDBC73818015D417881B97610D28CFBDD27408496D4112ED
9EC7351899D34F29516A9A921CD052487BD40ECA55FBE489055E3A5183E69E7E
92FED95B594EF891BF88A3C88F54091C8B09B0D8F00843C50A677CE4C139C352
9B6A2C1D28C57E273E47018CF40803C9F86F0A39EC155772279185C480C5E2D6
D9762A876980EC5C1667F4079291013FFD73C1478AFA47B404339CA53C24F853
4740F923D56791014712DB44F4E48C40974BA685F6B14095B00EADF943EAD527
0C6CF74ABE5E77F61EC499EBFF2D61AD8305E8CA86A0C1C87CF745E42FF722C0
14332A43D753F408AFD44C3BAFE9DB95A33F847CC1B654146AFBC5585C31DA3D
C9A1B579AE0EC40A50B8AC03FA7386312E1A3B3F056DA0F4C1EA5E5E98E65EE3
D70356FBAD00FD2399295680D789E7E8106F17F6FAC761DE0EF85D21028574E9
026CE5AC5D356F8216E2A47955C670C8CFB01373D149BE1046EC41C4D5B5325C
879B537E40FEFA20CD9BCB7BBDC577DD7245E5D0CD32F8264E500E620F5E0077
9C4B8C3E34B413B86E93E436597B397093CE3DE0BF7854BF4BBC57F2640EC8D9
4D1BA7D1860345F16D952F90189A7D1D26430C36F9AE35389CD72F24BDA38EF1
E6B37F0628DAFEF4A5BDD7E87C30237949DCFE714DD62049358D5B204656BC17
2C22CDDAA0A9E6CF8B200FB6A5BCD1D7FA7DC234E2DE78FCD63100D525A93099
A987EA3EAAB111D6A8ED73DC9BB8A2138E2DB585CAA704B514056CA27646ABA7
858456FD04C4F2A86661022E895E3B5148C71E277746251027299F4157B453EE
4D694987D9A8FFE06A91CF2710D0AA88B3628DA918750549B097D66ED51C0D93
FEA47CE5CB2855D5D04C6797C6E333DD05B0A2AC1596FB208C3A9E0F965DADA3
336F4A36124153ADC64547BE6EC9520C293DA5C1A28004A653E838F10384B1AA
42A4FBB1B797E515060A13B56F7403534DD21B9A7B9FAC342ED3D57B09EF8FF2
68AD500AF828107004F29B0A4EDAA172F606D73FA13BAD6C4B40463590309D99
8C82647AA4048EBB0EAB7B5DC8670EB65678605BEF51E9EE02C0314E434723BB
02264F5463B4F1D4DF3A6B78BA2115AF58CE22EB72B4319287500ECCA91AF765
5F64D923DAD5F6C5F891F30DD3D978A78A4ADC04F7B7D597A833A2F9E4F0C531
6B02FA720537B62B855A9B507D65A681EE24C0373A7CAC1E11045AE0ADA08924
CA7598B052AB49A505288845D076775A06B2C9AE0D77A6E1DC69B7ACC83B3CBD
BE51D9A09F7E911AE0E16CC9A63947644BF695C4F6455A44D423EC88667444AB
64E102AD0EB86CF9F5A61B558BA31DA45EC8D45A24347DFCF897F0E26E2B6AE1
0549065D89DFD724C7CFD903DF37C69606B202E4A68D9C414D945360D56B2BD1
21C7FA9DE9F6CD6C817D32A1564F1EC6F3CAC961AD34663704C33DE7810F15E5
1C3BDA710D8E94FFEB09DC80A91008FE54E68297F1C2FB992A112EE203D4027B
303F4B34F54D26187EC086ABA17BB167CCD897B6499CE160FCC123EAEB131B17
067B364E0F74479C802C06D1D7D60464DEB8883F578DA552F0FFF55A7EB42F93
A3B94BB4737612E8A5E76C356AF16017A1C429AD3DFBE56FD6072ECA39C37DE8
DFB217422F43524E56F34C98975F0BB6CEDBE9245CE99910FFE6B3F56AF74EA1
CC5E93917B12E576DA9DF54B71254ED9DCE3E7E23FB72C2692041C4FF7B8B53D
B76C15B5516B778534084B0429E17A7941960A13E886A3459E58C36D52E684DE
B0DF7F70C5AABD62E7E821D9E0D61AD14F9E58F70E9D6D45BF22AE570DBC57F4
2D505546B746C089077C837925205CD1C224231CABFA5423693F95B763670B84
052E965C2BDD7D3A5AEABB9327D8B0187CC87BFF9995B871E7A5907AD956E5C2
A57259E74D68BA89CBE4E1D937837115D43C0AA387BDCADF536B11AE9DCEAD87
AB0AC5F00FCEA695B1356FE9E9BFC9C2FFAC2E5B34CDD28F1B7979FA440D2EA5
27ADD604B3E76E22CFC5D73737E09161BC62E8CCDD2FF708C1A551628EF05A78
F03E841887B573C1E165BA8571A368F4F2D951A732B62D92014636836EED733D
4F8EA2E408C716213F9F08DFC297432F8E8FD690F7A9C20C8DE516D18010527F
4DEC36C39A00E79A4F868BF0E582CE58109B35E97C70B11C523B8422A46CA549
4FA17062F1F013C21D9A52D0849BE7D62644BDC929982E59B5D1E4C701F55F00
D5751BB0F0B7157F9CE16949FE28D3DD0C225D70044471257FB2FCCAD1D156FE
F121AFDEDF2364C45EFFAB4130E61EEEDA3DFF2E9F21E742A62844220A3F9572
E2A90BF144345D8BEF193FCAFCE5A676DB280E0041D12C0AF8F7AF0E606A892A
549D9872F089F845B9CEB226AA7B91461705456D80CF4535A435A85FFB6B177D
37103CF3F5D3866456521120EB03235FB9C69EE955D8FB17FDB11EDC2AA3765B
6BDE4348145BD76F8CBCB04C4E1699F8703CBC338DEA90CCD4EF93EFBF521827
4F42A9F8CC178C0EF4F2964CF570AEA1F61176E5ECC2A0BD0EA85D9C7B241BF9
B39145CF2956D98239588E6778F8D57D937E6154EEBA8AEC5D3FE3D8A87EC7D1
C1563FB857DD3FCE55392F3646BCA9E0AE0F1C1EDFEDEA2AB4D75AD98C64950D
C5A7D345AAF0BE0B7D809DCF0A2DC2C3E42350E8968A04678D8B6A3D12EE5861
0495094F16F122D847AEAE2F548DCC1A9B6F94F049EC80FD59A6323AAD6C18BA
46F7CC9768F7215AF3B925A2031B4749456C3B23B2B7887E421AC66419D0FF4F
D4B97340CE459B572A39E9048CA3F935E03DC37B2AEBFCD0C916096437E30472
A11FDF0ECD6A5EEC8E9AB28AEF0F172C7429021B4EA191A19A2C0893D627A8FF
933FE588F6BEE2D753DB52D6AB1E849B048CA599132532DEAB0C62F99D65B8C5
39A9873239B1DE538B3EF6DC3734B564CB22A6C524EEF39A217E7EC8D1D19EFB
8C0C2C9EFD1B45E1FC4061204CC6D61EDBB365357E0621B4D4BBE9539523E1DD
B688EAE879CC20EE43E42D95660514299334543C4E09F2FC0B379F3A8A84E3BB
231F9B2BE9D280EB0197008F8A021346EF208122D8CEA36EF66A325D2580E174
1962C9DE36EEDBF77E49C52836CD711A0D13791C051AE216A74A3522DB975F94
A66F8D6B0B9DE5B9C06E643E3745472909A5ACA57765B686249E3AD8F82BE607
41A3DBDD25B2599B59AE941D35D91A668109838CD5A0EE2B513334620FA67E84
3536D98526EFFB7971E9A565B536FA6AEEC6C8F575CD62C2FCB8F10C3D754C13
412C5E8D94F9E803A1F4E8CC696A5361621A729529B3BEB4F49A32CB8A923939
24C7266EDCC8F1A91300222A02DF36EE976A2BAFAB6B810C22FCDC5659BCB61E
AD7D6B3BDF0910A04F5F90E3593CD86F5106A3925E3DF2BC5B6F7C73EC6DC357
20722C68B6222DEA596B555980832FDDEBA8A2433DE9741989A69743A0569753
D2395A6CF749580DE2DB77CEFDFDC72ACB861E9F83EBE567449609F8296CC1EC
F1B999219FB9F41DA2FAED4401056DB1EC0003BEDCDF0526BEE85D9C03F39351
397F263F795462BE63F877393D9248E23F0F6DABD35EB11730B04D83EF46898D
E50AFA5717C2CBC99AC099C5D82445483470F28AF65F29CB086189B3F0B26A32
B2EE0DCCA899821B38A2837E1EE83871D79F2C3381DEEEC6913AE1C757643010
A062C336C693A19F91898A1A9271B003B0E9468D71D10AF765D23741D9345284
58141EF7049987C866BCE050AB47A610711B5B00B5E6FB4570C6991D14C98954
64ADCD83FAA3668E52F131331AFDA08CC184B5B3C23C056FE864C5F9F9F51F34
BDD076DC4D0360DFAFE7AF4B325533C5AF117044D3FAD7A91815032D5974DA63
859AC97006C42B01C6659ADBAD688E2C594847E28D80D144D5F13E6DF6F48B29
D161A061F6AB3B26112571A353CA3ABF6723F69EA0AC1EE47A565E2E79991D7A
EF5934AB115D6082DECDCC0F37FB5A2F90A57149A835B02533C33FE3FF8AB334
6983921313882D3DC00BB1E1C78B21F1544E638C657ECD7B21C52C9BF21F38A0
AE17F2BAEFCE229F903C60869AB7A8C9A072E1BE2DB864F271D8FDE082F79CDD
10C445DEFA0A889E7BC38E876DAECDAEE9D8BC58DD3D51A3493E9D165F3ECC15
528EF2091BEB17541408460E9C62E68CA7CF44BA2F2BD08634D4DCFF0A034F25
77471DCBD7390CB5FE2334C6DC0C4B3EAD5002C34191D7BC783715F2184F8A62
832F3B27071788B0E5F425C51EEE7F3A13DF5E22169E6172D8B4C0F578F473C7
535C1E50F0A68A014F9CD3F203539F73FC7C36B47F98527042576845F1BED0EE
A915C8E476DA4B7C3CB25528690BBCE0DCAD715D1C06273B79F979AD55FA4B03
229AB8A7F4EFEFF6C02E50DBE636709B2BDC523385B3B4FDFFC81474F9910303
E63D119B016C1640790CE64065B0C8FD7CC27C680163004CB4D8D9034DC3736E
F8AB525415629F9DD4E29F24577C84828F1C8CF9FAB8BD3B084EFAF64BA95B49
08561C793970867679E74137C37865B918483F83D3EA9BC1E04FB8004DDA1C21
A8EE89433C3FC79640E4231F44580FD4C979795D17E7FF00DE5A75403B921887
EE01FB77BB5DC0E1FF5DA571CE07817F7C029E12E372E4F60FC2D853932EFCDF
A5D6B2E57ACD2BA626021FA4EB30FBD046CA69714EE281A6E412FA202D41DC88
A30D3828EB29E0B1B09F778700C60738496FB69C1F8EBE330CB1F79FAA16EBB4
F87D7A9042CE0AE98F7B031B33544ED0385218DF0AB5250B8DC67707D212115C
D3DAB1FC6FD1C795EE6B7C38F6E6BAB707C50FF6708F4AB5B05C531CBE6D9487
4D9A773A493AC6D7E603D54C4AA3D3129850ACD990092546AF937F0BE8B41849
38115CCBB705EC77D5EBD40F53AC32B3787C6AC58DA9E0710110D11D657C3164
6B0A7D837FFD39C34957647FF03FAD50F50E48CE98CC038B3F745E070077E0E2
6F3A507A7AE702F2DBF0DA3F76BAF674A02769B470B1FBAA1C9530B9230A0ED3
0CA3A26EB40D45564C087A81A7E7AAE047DD7717EBC512E27416D07BC29895E5
1B42465F8229CB7EB6AFCB9DF8A89FEE180D6275CA7F8AD8E29688A7D2747C45
51F5907B66ED0334DA656192B11D36526A253B4A8488E28072C803494CE144E2
44A685A96C920B73E76CA114F58EA18E52D96E3D479A93105C7086E749CC13A6
D639BBD9DEB0B3B90C044713601CFD9A41B2BD4799C81A3D08DF54D34CD5EF68
455F45E4C4477C2F1A4D03B20E1E0B6E2C4B790B1B7F7122612B94F486DF1F57
DD9CCA0C1514431FFD29E5428076E6C539FAE1F3DEADBFBFF99E4C521B0A17BA
09BA7EE31303011DABF41CFDD0ED59380E334B5D6082EE7B1EE4628DFC6EE853
DE286F4A63B6CE732F2DE4A09B4F6303D038DAFC2D85C2DB3E90F28DA2622ED8
6245B0AEF9E9770B09344274B026E8C2A0F1A167444F3450BF2F2BD08634D4DC
FF0A034F2577471C1048E25D7209F2B130058C89FB3950BDA1DA75B8FEADF1FA
C6D1ABD4D268877C3A39A406F291165819DD08869C8D9B02969B7695DC8C5FED
F6D24DB6E08556D677C9E904DA457CFF726B8D814882ED93D44CE02071F86A1C
AA7FA8790AB4BF309B6067D2874D6183EC1AF740E9F39B15DF7B8CE078CBF4B9
75D06C7DBFCEBC475522DF5E61031D8DC1977CD10AD1275DCD28A933A933830B
424CC14D250106005A22D29B3311A007ACCD1E1651D49DE799BEEBB5C0AB14FB
9BBB33C62EF20C0C8B8C88ABA5D2A333972193D9CA47D35D907DAE068C755A7D
1DCA5D48CECE6A199C9A4665ACC1CB1BF1F33881825C3555B509168898F0B386
6DB303E4EA0493ACB34C00FA915831646A79B08F3A9EEE2EE0D9466A73C8773A
11BC6360F1E032C33DBDA2C4DF497307B468F57E196E99046203A3C6DAC444AF
0DA00720B44304A89475C3DB76B3AB76DF147143802AAC8B4ABBB04CFC2E8466
72347D4196A3BE1E974E0F025141EC51FF8A52DBF397A226E0879CE486356E0C
DE2C6B2D298ED89ABE2B26CE562FC970E16C32B258AB1D8A85906A93EEBAC763
AC363660FDE9600E3C0F40F8EDDC97C6DEC8A061FD347082724CB5A62A4BD7C5
BD454939901EFA90DFD8EDE2EB16458E2ABCD48E1A201018FE91AFD0B446441E
0D4C268DD0D21545E65619D94CF3B90397E5EF6993C8FE629653120586E42BA5
38782002AEB51A61A4E0CCFBE2BC4A87CB00A1CE8C185F80EBE2D2DF92F1768E
499699BBAA32DCA323D2EB4E04B744597C49AB980E868D345D393443F2B9496B
3AAEAA48288A3818DFA674366D1C15F3353F8619187874775B6F2B4DB399DF27
EE91141379233D7264327A0AACA7DF986041483D15289E27200220E95B17FA17
C0379D7B3161E3F62D58EA0C8272E4C642CEC49329623722261BE754949F63D2
DB64A3360EF109006B7D788B4525A509FA6BC1A0CF27D6184238E19570DED42D
AE1960D2AF1585D27DBCF129915AEA5D9229D85D73A352E1EDDB2727A58BF356
03C68C9663E470D434EC8ADFDC1B5F336851879692ECA3BBF93973555C08EAD8
080518943CC10B613BFFCC3B2C4652C278E04C5FEBDAB0FF3829381D0B19A972
434D6643907C7D1C49D5C08B62BE72FCC169B466DAE292DEC9C64D26F7396C4A
67D58EAD539B7D18F49A36798336F7354F0984D612DBB455D064B90AE93E80DD
8148F792D200AF577494DCD5256C2DB61766B8A460BF18E59C5418E306071FD6
C49B0B2FDAC03B50336C56A12B0C99EB25654D7609EDF4C2991AA96DDF4972F5
BC869C62613C80EBCBB4F483087DAE840A2922682DD82B7D3D622DDFA16383B9
18ABCDB1DA548C672BF31C0066B22D0D4CC28F6357A5B8242C71D28409D99143
616F98533E0B61247A3DB556F13637B868EC7DE4ABD7EF81D7B87282AE964C45
28E9DAB51BECE2EFB222307D9E63244F68CA1024D9CCAF0BCF8594E66ED37EB6
FB4E5E6E11F28E715EA8667CFEECD0232F9124DBBF37CF292277B6A994E8EFDE
C11D882A9F6B05A19B4757DBC086DCDE225B9702EEA5CAF47A026B5831CFFB33
D2EAF999F032F85BF385A16CF4EA8F994E54FB3169DA2D3A10A636DF15C69A9C
DCFDADDEE3DE810260236766F5C2817E8A751B5C02332508A0D006317249B8B2
76F7089F213F7275BA69DCCE0B561D394C8453B16D2D70509F138331B411668B
D8D498C18ADFCEE1CB61F11A8CE54A66490362147F7532DBC90698A22D9E9AD1
363888E094376635CD70999822089200AAFFF9232EB783245B5B8BC1E36922C9
6AD6DFBCC8BF5553F811DD16F3D031D10C0815C2E0305C77216B564458322ED1
CB601CDC915A99409C3E7865A3E2BE808C8E508E6005FCE764BACBB2437EEDC2
F1B728562C17408ED1244595F85A709F3A49CA746D4F1667E042A63D5F68E6F3
346C09B1E2FC8491C7FD0A86A653BAF8D824F3C05627944F56F5F105B128E260
3B088DF5CA45DA10A42810296DAE4A8CDC5A76DF1739464D43E2A625C70E3980
D169EBD49421237F5E84C46AF3D1A185AC932C8D17BE4E159D11328DF9A57ACA
A5F62A9C56C5260F3A0DEB415DB6D55C5B5226F4590AA858588A1F79CC9DA248
CC7AB51CBCF92E3F519A36DF860312500277C82964CE1CEF73BF89C86381A1B3
B7EBA2ED4275E283CD196BB8FF45986D96B7A038BEB7408A2061914D1A646A3D
066246468D8C8DFB8BB0E0798A8BA38411ECCB0F59B4BCB11CBF0A27FFEE1B6D
E181D826EA07BFA8D0E39FD8BB62B3039DC126314700F7B0793BA21271F81B8F
C3A863FF8967E35D5E22F0387BBB80F86D0E95B0819C356918CA7B918530B589
42E503244857F3C816FF31B1A57DCEA9747733BD3C0DF71184DFF8DA3CC78C34
2C687AC27DC0E8A5B4027B87DDA9DF64613DE4AEF006E38ADA0085E2ACA8BA2F
5D97726C153EC014F2559DAF8AB9E26B6E50501A97CCC6B82C21C593C2475F1A
0869B3D22D9CDB1E64E737AF47A894EED0629511814B81C3BF0A43E9D0EF916A
1C5DC25801263EA2630072210F29D243A5B1CCA2C28B4108155D9B9E6F4CE186
73A6BB92372D3FAB3F49E5BED1E5F8CA76F8684FAD6502320FA5C140A1675ED8
953E25AD511867AB01326A7FD92ED772AA7F59772088A03C9F859A3463B38C02
170EEA1D0323EAC264DD824FCCB58D386D4FB4DEEE7EFB16C0B63DB0F8D3659F
0ACDD0489C50D8D3FBA3E0D91465975363F9DE2BEC39E49ECCE85EC28C58784B
9F4DA7356154D4BC31F742E62AECCA641663DB68862CDFBA97A8CCE5279A170F
2579EECB56BA2FC0C0D6DE7B16F96CF8AA1E10482BF3A42D36F3CF6DB795C9A3
0EAE512023003CF3CF29553FE07A7BE120A21C63CE90EE04B3E46F6E109C8190
BDF0C24A518AA4D57F35D454521E715BE9629ACABC8EAFF7A9ADF511BA4A7DA5
DF2151D0796A89B6F0A72A9F666430A70EC98990F652BCA358529E56A7B8DF3D
9BB2161ED65E7A7DAD9AB28E20DE65B5AA436EFD81B2EBEEF4CC55BB3ABB0E37
660C7C103D44284576BDDDE9AE8187B3C39A72F38FEA88B0E62DCCC856673F26
1B5076C4E761934A709D42054A1D417A92396BBF26987017353D3924E8AAC5E8
C14B65B3910C1D7EEC7B9683382181261CEAC4C114FDA640CB30724F8A9F0E77
C5F82DFDD90063425D1BCC302910D3C459D34F065697E44CE71ED9EB0871E832
7B9E5DF9D6FADD3B82F130C37820BAB43D4BFF0291CEBBD8FB50CA10C095A470
76B9DCF838A6DBEC4F57A45B6D4315AF193EB08FFB2407FB95EA1523B5F18637
03E0FC40165C8E612E33411CA18AF05CF767B05CC1FA9C75A42B747A344BF703
8E23A85E719B15A7931111DAF68D4E43C05966166B0C0BA4C762262751C75A6E
D50CC0932402AA5C039E02B7C7F7C4D839A0AF98F5DC7E7DC308C555F0711548
0DB9A8DE55BCC9E99C2E7C903AE045907710690FCEF5AACA19048F62509039E8
A408B6B7E9190325FE92C4F80CD1038C4F5F6196E3998762B6C788B98F89B305
B1BCA2F3984F8805F37335669160CADB900DC43E641030AE88C47B68F13821ED
0077F1BAFD0926FF42AD5D6F2465D18F2525D85FA2343F6B6AB5BB14CAF071A4
F8C642FE5E99634D5C36CB28A3D428B65D3149CCAEE98C148539195A483D0731
A0735099D7C4C1678904BB643C64672E270C4656056C518B5F7BCE846BCB71FA
3AB877A528B1A29624B70E8587D274E4B63310DCBE91563855D38CC067F08860
25E035338A43353642782A51E5AF9068547244661C1612F6E01D909407C93A59
7CB7328908FFF45AB24C8D70D7DD605CF44A1BD510C114831F70B3F30E64CB7C
DDEBE05E2D86A081B450460264A6DA55B6D391EB9BD7AE2C424487F79655D922
48B5112F3CAE37191909922EFC8C625C655CE74885A5EF434F585F218A1665C6
320EFB421B3D8D6969B773A633852E76689E15BA0AC79D2E293ABE8E8C8AFC77
59077B37CF09EB1A03071201F9544216D392A4051318283C931EB6D0468342BE
7E3E46DE0F0F68271310A9521BC5100E13D8B191298B1DE626D0597E4A08807F
D2C7518E6B3E2C20F6F8CEEDFAF6EE49622BDA78F2283BD6D5775CC032F9273C
F745B2C71A10D98C425B9A7D23F2E85FB8046BA34E3CBCA440F97FA94CC1ED27
0802D490D64DE6223B1A696FB5177115F747F33841FFCF7B7ED004EC3DF25244
03735A4A81F46A0C5A28D9DF31CA0AF4D7262ED21FE703AD75FFE8029ACFC032
BA9DE9B31D2AA1EC9C6062832309BF16B8D17833436F1E9821878BB5D9C12061
28E3277AA23984CAB31DDDD09B1BEA2675775A139D3872C292B4FB5440CD229F
47B1BD06E56ACA7578309881B2701538F8154BD64483769D2454E772DE956ACE
0CA995B7BE5DE654E6A9A622039DCF4FFAC0375F35E83F0D2E534E2851F5DBF6
C900FE5C74969A1FC9577241477C48996BC28B9240C3DDA8287F52E363FE1C95
9650835366F6F4FA2F411727257B24A6C4C3FB7CC27BF8830742BFBED2FE3D45
9B38498E54683FCE2AAF594FAFA4830E0CC40799D7FC06D16F028A304E0EE9C3
F7AAEE728DAA169800A7CBDC61EB37D9894796706AB51991A5E9488531D696EE
4516374E0870F0EBF5ADBF86CBD8298AB199F7319EAA17CC7621928542FB3DD2
AF1E6F9E14C2DC924DA4AD92096160F3B8F2684A274C2777A6D776291AC5A5C6
8E3509FF983F014EAE0B8679FDB61D008D845D3F92FA9C291458C0FF846CAEBA
5FBEE789B15780D15AA38F8C76151D09B42AF159D3299B3A3D2B55C1741CCF68
8BF21BF963A15B1C0F4BB3B9C60C10A7595A3FDEF5A78A41E4B9A4535BCECC1B
E9339A4EC91FD5BEB501577A8E383F1773175398FCC5D646DCB9085B8909C385
00C171F9F70F02A59BAEC0A47088CF06C6DDBEBC18AB27295641C5D505522697
B5C12A395D7A98F43D3A8B67E6AE0C75EF4D3D57E3B979EFC7CF2554AF326DDF
82AB025BABA8198590105723C71963F36FEE8A46CB792EC80BAD44B460B6D4FA
7E3AAD009DD16C817C0BD591F2C27230D296649068788BFC549777397882A8DA
A878269AC0F294B09A7A018A70BC3E35C62F5FA084C9855A6989B1633DAD2778
EDD7D7FBE6B122CA79368A13C6477E31978CEB2E24EC8D3A142400299E1D502C
4FC51AEFECB5313B7941E476C754EB95912C06B8B2769C12E49ACC3207FA46B3
20AB68A367D1FC762965DB50C74E0AA12A6D589BC4018439FD1AED305462E6E0
84CDAA2C5668DE61906A2CC906D0EA84B7A9394334A1B0BD174CA5E3CB789AFA
D4ACE7A841372669782346BEA550C889DF3D8AC3B654D95E6C33BCF60A4541AB
ECF54045EADAF14E5188E8E41BE6221CAD483B74064D2F2DCD1DEDCD3C5C8AA1
3E34F209EA5444059BDD7460BA7D25DD0C442231EE468A916F68A80C5C4D2F74
9380E9287606502C3AA9B4FCDF139D158B9CA2FFB554F4B8C82D4870FAFC5768
D40CB8DBC9E2B7DCCA756B93B0FE723311D7C48435E9DF64960C069E1BCFBC71
B93A7743F87828B2C1384B20144C33792FCA0736EAF6D1A0FA8C521E3FBB4391
106BDA51F30439ACDEC76F7E7C9B49B1ED5744859645A143B9D6E1C391DEF8E6
1760E4CC4A71CE34FB84E19D8164E7D4D0652D03E8F108B6F6BC35F3BE1C60A1
C1B29CF8744ADC98CEE2A1576B5BA3A0E3D46024840992684E5EE17335B09423
4F65613C6B2859001347C36E5544A1F2558032763DDE83D9B0AE98DEF3FCFB7F
5FC10CBDBBF19FC743F1F168B5A21E570847CA5B1F6DF2AC047ACB40DFE10047
11FB3CF1FC1228C0FF3458DD2256B631C83838CF0FC1EF6A04D49707E0BA12A1
6D57BD744460924D387C5E11DFA4E1B0A96B24304329B6F31534FE4580490316
EDB5D83A44CFDB8248E24AED2400613EEFF3CAC48795989034A8F4B5255D3C87
ECCA5068B029B9A5B81C218AD9F5F128473C230271F974004FABA30711326555
6B973A721E8D455209FD8EC51FFF6467A70BDD9F99F7867DC91C1996951A2872
AAE846B56E2B44CD3D3F4F74861FE74B66434207F479BD4067CFAD35B06D51B4
C363F014AA5A4FBA627D541C90FFBAAF1ABB7D7D60B800A21702A8DDFC846D39
B79286A62C77E0583769805EAA463A19297F71EB9CA3FDE365C359679764FBDF
BC0C34193E943D298137952E2B1ABA1511176AB680AE19B67646A7E5079C9E4A
07D6973812E5070283BBB4E58AFA6CB89A6F5A42856625268519160CD1F82FAA
BEE416359896AC77604316D2161EF5CC543A01205B95DB6751F7C31C010E1B1D
7DAFBF5DEF6D5D125D110FA68E8F337E069E8080C292CE8F1F0982334E7ED48A
41E5E2CF3B2C145A102BA8A11EE7DE48ADA7BCAD5CEE84994EC8F307C058B82A
7263B1104C2314787C93884718FC3859F4C3D7BEAC97904055B312C837B7DC70
ED384953AEE9B1DA9006F075E27DC133ACE8E6EE5DD2C4963A6D174775158573
D65BFE4D1D27CC71AC137FDE41F8E658E88C81FCB0DC0DBB23DC1C93A5009DA5
115C8C5DF99534BFF3E2182424A77483CEFDE9D7A8A0DB44E978D0D952C1204D
23A4632FC3A74FA35139B3BA214C10462874E1565B380CFC3D995A0DE2DB77CE
FDFDC72ACB861E9F83EF3D738FB5DBBFEC0274A4A55773952F4CFF1A1E93B994
E844FA71C191326CB87014576A6FC0F7DEB01D457704F17C4A3FE2B2C1F1CCA1
38B25CF357BEFB2E11071E652BD255F4EE8B28304D089766888A5254BD7D6B6E
1FDC0974B735968B71C08E56A3B492CB9413B431882627F9AE3E7E279FCECD3C
4EB3825BF40778BA6A3B9045E1F2FC3FF4B6C8C00B13730A38F61783EEBE2B63
72F2D2C74EEF3DB84F2893F32F42CBBD069BC218F54FABD353D1BE1FA5202AC0
316645AA6D4003C0F19EADD2D9A644BF7386246EC4439DE66560CF6251D01EB8
C9203C3F857F70978D581044BA548623A7C56FDBFF1B2D1AEDF467FF675642AE
DFD65B657E7523CFAAA79FB8C0A77CDCF8AE3F62D3C7238F9920F86E67802498
0A870611BBB8C427C9B1765D566A31FDD06C33B0FA99F31039CFF52C80BED1A0
B7301A83488025D9A87F485E08487EAF0ED9DF8903E38F103A3673AF8F525763
D9CCAF5E69D228F84A288944A5351021DDAE3311EDE6DC1E63032946B0FF1700
DA32544AD27F09499AC5CE6853F0DF9F77A83C9AED8D56214814808CA607EB12
F346C4F3BE0DBE995843622A94326F1813FEB1616FBBFB71015C6759AD245445
6C6920FF6A6829F9BA02401F2E404F1D405F80F2BC8A661D398ADDD534B33046
7DB68B7EDCB74D153EE03A61F051AFA2C2C79BE670E3694C791F703F8F37C76D
F7F8B8508F98E9A12A1D9C280381E0223EA3D9F4C16E56A0353FCF18419B34AD
6BFC134101D3EB5752CB0DE3FDA9CACD0F08EC809A5D189D8755082E8A712E68
7238B599E5C00AFD83A8D881462EDDC6B95E0824E257080B8C62DFD2579443E2
F31E8F7E237B969A6B000E45882F88D8FDC2FA2DABE2FA79D170DE44B561B8B0
E3E06D5F77F5CEE8F998D4E68066D9B85FA614A5D35BCEB6715743F0AEDEFB06
4A1C246EC57EF3D0C666BDCBA12A38A89BDFDCE9007F73A55F7A99286DD127CE
A81A0825B59CDDA14C39DC5B57A0261EB63108D1E7756432C4420B870792BCE5
BDF0FBE0A4F6CE9AB1CAFA17CB809A6D182F863631036229F5BEFBD6314D9051
C9CC94A7607287636FBBFB71015C6759AD2454456C6920FF688D8AE6B1688FF8
D24296EEF6E6430D2353AAD7EF7327B65A190E11786E7A1D49B044E2B941FDE4
9FAE1826CE1209DD13BB4F41E8F52F80616852BF40CE8672A37BD8F14835E08F
481CC225614424F18A9D0309255C89DAE6860EBDF62FE4F7FE74ACA3475BEA12
2C67843EC0E92D44934D5EE4F6B4E7DBDE687C919880FC2AA37E46D93E36A720
8D3C2CAE9C6B724979F30C2133CFC117DD697003F38EBD8995B586BC4EA54403
637A2F8330D9AA69057626DA202C6A35909BA142FD1BCCDB90DA0450C8EE17EA
56B73B3F2FA64DC535F127E668C52AC8754731876A3BB6990D85053326D162DA
F1605BF29780A9C760E52CBF977E65B543BB5338F24FE65D599730FBEB28F434
6B25047497982E145E65B6C29F864B0B956379062972DE5B529A75EAE920708E
E64D64CC0B3C92679835F21C7DB073092C631D48E012493449D31C09C1A37C79
13C1DF5B2820B94DC7FB68AED1DDB9FB647BD36DFD0B4BD7B93D8642C001EF26
2AFC952337397279F2A450703C7F63A9850F4933C31574C5BBA9558052E79A44
7007FD17E77361CEDA0216C5533A586CCE30DC709AABCC6FD75F548E5439F285
9516B936B786187031FAA07B652C85B1BF089B20AECE5EF5807B87D70847A6E0
9D5B9078409AD56FE7168DAB603FAD4A2CA44A994B9CFA537210156CB85A8299
09CCD1A6F60DD3CBADB57E636120B2442BA15E7B856101670E61C76E429F2DDA
DCC81385ECA76CD7F47E7E7CF7588F63C830D27912FC1AAD8485FF9C2E549538
1B62556E5A595BF4AB8C1D7BC2CF85BF81AA916A9E1383E4B0AC21EA268900A7
59F59A367615FC38D27B6F0E4FEBC360DCD565D40CF21ED0C8F3D018A690CB31
C60DD99752265F4BF154223735BAAE50978B97EF69C179AA5D0571CAEE57E841
A4A04E6F8FFE3B37122A41040A4EB7E1E4413A5C3071D204F98BD0FA48BABFB5
56FD7B71210C4B9DAFD77C8C07C6378F3B986DDDA740BEBDBD569AA14FA5E3D1
DB282862376F6BC9160EE283512614428FD7B9D81D9AF18CB636FFEE11DAA9B6
6B4D67989CC3845BC0EDFCF123E6F1101CF4FD664CF4A15B6E7BA80F1CFB288A
1DFE9FC9B7C3C2BACB269329C468F87092CC4F3BC0315D96AEE5A3435D9554C1
2847B030236ECDEF1A0FB2B6C0E4DB2807334A5A0435A8561B67237367203424
FF349C17154D40AF22090580A4CE7CE922E05D991DAD3D1B58AEF4C107B33C12
3E68109B182548C8373C12AA0AB340A8F616A1BD6B4FC887C087738776104AF4
5BFF928E0A767E0F7D1C1144672ADF31BDA828130145F296AD96D8CCEE543713
BF89B36FEE919899A888602875CF2814505DDE3A9324B5BC879E776141D8D464
C94C6EB71D5311987CE12AC76DA296C6114C02526F32CC3461C073EA8D996C06
8B5E4EB092E3116FC9A653D05B8C9D27B18406F3911A535613CEEFF45CB2EF54
86B2CD1F56ED14F9826F4AA8FF66FC0EC27ABD973B2B6DFC2770A7D8EDD30119
33654ACA4A3F4DD9B7332A5DF14A55D1C83E0B0FDF092588AF26BB034F561453
FC99AD6A1D8F4A42F9E8F6C860B3946D7234C573CF22BDD93FF8AE10EEF71913
8C0ED2F0A3168A2132D509438C43FFD6B0460C6F0D5A9381CAA8F2E75E7FC0EB
FC8964905715353EBF1E5141247665FDEEF6F9A5C2C378E3751C507D1AE15B24
F400933CE902C7D6081513D4F08A8B68DA5FB6A7D297BACA29EA0B2B5B3D0AFE
C337F8146236A2D143101407EE0A93E8487D1118FE4A3D877B221B0727107B7C
F39ACF0792285755E6C27CA5E8CA5023439ECA07BA1E04A32D687A3DE4528C9E
61C9F6B0BEE479CC20EE43E42D9566051429933451AEA57CB25C3298DBAEF34A
797DE1EA022C568922EF20216A1C2B070D067F8F5DF8B0B90883C3BE63E6A064
E9064DDBA73D4ADCAC5A6B264F2F3C07D7961AD86A0F83CD90EB02341C57A9F3
F02AF84B81FC646BA90F9D16C2DF4AEA2A2B4B88AF0EC8AC16DFA02352F35E90
2FD0BB89B5E469FDBC4831EF0C42746426543291AE4D20A92F06C6868CF3CDC8
FC4B015B0F27E9213B76B889D24DD978EC9D4D8210106F8717D02A15FF377670
35C9A38266B1323F8C06851524D166C833FABED8AC5755291E80ED90F60FB936
D456F64E1101B509D788F77E2670DC99F0EDC247FFBC5E643738D35C479F65D4
51B1FB3B6D835C03028505E00C568B8BCEE6893958105CBCDA556231D05D72EE
995D4BDA83DA74BC9584EFE2C8EB83AAFFEB4F88249B78CC14B7733E8FE318E6
7BFBD6145BFF862ACED68744CA4DEED2E8D997822EA2943E294683BF18F81C16
720F86AD7A5038F219950F42B3A0C9CB2B02BC1D326A4411D15C94D21FBEFF1F
24AEA14306A1E792BA906FABAB6A8B85F385A0B99D6CDD4BB496CD6971198559
572108D31A1DEC72768535C1EF883AF97D367A659C518CA365182D5426CB93FD
B7C209B292348449F6B1018EB03A7818D3DA9FE95DA6C6C5CE8D7AD15A03C479
7F941CD76B8E40B30E0372C3EDA6DBB24BF9C6EFF8B80E1A4B6559943F2F8838
01AC1CAE2FEE058994002B267B23EA6861D1599D032CA4B5D7338A9AD24713F1
BD36548BC2451593D6A4668F088F4A94F4B4BC0B70569B43D2302EFDC971E54A
AAB576B153164D0DD292B20C201591C706892F07FA1A9D168D16183F8F477747
952DFE02C75E31663090ACE67ACD3F260DF92178FD14D5230AE71FD9E0D73761
76AD76F2D54DC1F48FE08C5DFED4386AED68381DF68BA8B60223F26D37E6038D
976CD5E7C8C1346A82FE7E392162ED08B429D50DD54B6E608DA69087B5660C77
E21C56B2623C583747E93618F6D3A8F8BED50C5A1E70ACF40ABEB62F02A341EC
5660888068E3818EEE8F728D5C03150A34E227E052E0F2966C76AB53FD4A48F7
F3BDD4A848B99AA372FAD830DA1EED42C2DE9C02A7CEC86BFB905A29621EC753
3BDACCF00A77B30ED0A53B7D44E35848B9E2F6E508F5C093509400EDC6B8980C
0B1B86D6804380F4B83A9DC075BD6DEE4852F671CF6991E5F379BEB0058C7577
429847E1B3535C2D8B577229206D1FBBBE9E8DB6107A1E22511974305A4A0DAB
5B3A2E8B488C1CCC46CA43DD0F406AF2578E5E92BBB9DAAFB148FCE2FF635E17
10CDD3BB57673F35CFFDFE778890E54EF2D24C8F163F27D1BACEB015F7A2E139
B51BBB3AF83E4593772A3485843B3FFF6BFAC4F8BC8D2D4339EF9A7A04B18920
5EFA2CC6955AE49A18DE8F35F7F61F7F19595BDCA2F57D33E98AF7D16B7234B9
0D1C02EFBA4FA4C6F74F774B32CDE02B1DB87FF8AE88D8AF98E9517ADE201E45
91E02B7E50483BCF1B30EB13316E97B74182B57014209F2988B1A29C001000F4
883FCA11E00380CA62AD0C71CB6F2A2D3428AD814DF36D640995F9D109A1F88A
8A077D04EDB44F4260042C218D7B4E8683D70D95D49FFAAD963C89081D45A02A
CCC27DDE4077DDA82F018B959DFEF24FDB120D3E4457B5539A862C934388DBAD
6B482AC5C79ECACCAA443D12492C845076074AFBDDC51579E49659140DADD4CF
4312C69BD000000C082671EBC2441DF1AF5B7D01D9C5FD0C0DCA99CA43611484
6D16E0B1AA145976701D841CCA2AACAC1B03443B0C4EAD08203A72A4F7E29133
F0C37FECE9C4118211D5BD540EB1C86A5C17CCAC507F811C8E3069339E1837C1
E8A4D341210C9C5070C181790E1C4D9FB14B1A16D4D3E6B652EABAE0BFFAA06F
4E257FE8153ABA62BC407510DCF73DFEC94E00EF85C03F1699D29B1AEC2660CE
1334505A748ACAD8016B6A93B38A378FE152318207F4271AD7D17C6D3306C75E
329E17E7E3D38AA8304BFBB4791C9F59C5DACD729608CE8AAF3A48C72A9D4ACB
C49BC30D6E0314C43C14066C3445110F07E168B896D44D778EC05077AF91DE57
23F0378537FCF5B7317A12567DA35A98EA724F250022AC169CFCCAF7B4E9DAD1
7FEEDB6C6CF00D11366B11F0BD623C583747E5ED7F722C72A8B3658327026CCE
185EA56C7A1807AD83DFBC5571780A658A9CA196A7DF72CDA5E859F9EE1FB162
E0F9CF61E7A46D73D213A0FD4C65D149051CF35156326D0045683C7598990B52
88EBFA21BBC853979183F17049826D9B40302ED11A5385278673A5EE756D0C8C
5ECA66C5D873DD4142E9B37B8EE78251337FED0002DA888DE0377EEAE2BEEED4
178079C0587DAC3A4A3FCCC1430894152427FA059E8EE2A34BEB5AC898AF4679
5C4CEAB1973609A7312EE7E49353AA576092ACAC92B3CE8B5778C23321AD924F
D4B900A66B5FEA2F450511B5FE3EA5089D4F00F81A74AEADA43D105E0B3F0A43
04C223348F3A1FE8426CA4881EF3502D2C64AE26D3CB39150243AFE6E66913D3
A89C015DBD9CFABADE0A5A2972A7E738E9BFCDD4A25153FD322F816ED010912C
535843111D35D9B27BED801BDB5503ECA5CA374B6FE77453FD049DCE73B35D91
124EE5DCEACE5208CE4F2C309D3C37BCA9179DAE71D90EF63D1ACEA0B20D18F3
C5AC2AE6DB4A621D93D7A794780F058017C29881B54E0DBE180E7768F2C06B08
D0760887BBA8202D4300D632F970C69B609B8D31C7F251CBFCE0DE5BCD4AC79D
364D4A8020B6B6C9CC5164A73ED1AFD239A83596E15A4ACAD605A61B35EA4E15
2C4401A01F8F10AEB74037CCE936BB4B132A6AD36C8FF28EBEA5C491CE804253
B327A84845C10182E0E28C047035F06D6640451EA0058FB1CC910212B9A20775
26AFDE04A55A5033EA9830563D7DFC7EE64FE2DAD4D16F2D75CF9AADCDF962A4
F9020E18A4962CD2A95F2ACC1192E8C6C5599A52096B795473A400A446BBDBFB
4A344F0A7750DE1347634DB1E0B60DCCBA6F56FF9135CC8D762C5CFCD305CCDA
1C509E6FF0655E808CD60C7222F2BF8BCC44C1C6CDE0641D676CD12B007E63D6
B4DEDEBC54EFD5548C48E8086544A42C47BA44A22773D7627ED7538635E3445E
9B589423FE8E386C646710BCF518CBA3513310B17221420768D115F624275313
8DAD75E6ED86EFEAF68046A618D8F66D6C02564218F156B80B091A806C68007C
D2BEBC4C0C54576EA7559E6B6114267FC316F7F38827320801C1CDFD62D00D04
CA55D14BACB6D5617B9C8D02C484E52237B4D55F4B5C0B2DFE296E2060B87D87
78243E1B81463516B0C2307ED79A77C91FBE59FE620066D1CC94A17D8FC53F00
CC9311EBF8EC8BB323449E5ACAADBE434C82F2B3EB1E58EC9CAE2A60071A4F9F
9DD7B96D56DFE0D78349A371111B592701C030CDCF2110282FB5B08E60F3F53D
6F94D7EC62C6127EFFAE49684F7FE29C06AA252F6A1902CBCA1640DEAC93A32A
7B354235172F43AB0D25A1577850FA2865E8CDC6BED5F210C353A093D34F4694
3284BB9B94815C160E79ED1AE1CD8442A33969833540EAAA147F6F5F5CBF6DB6
096393F16CAF82508892C933DD816D036E4AA1220BE46CD3847EDFBF3D573786
A71C5C043AAF9B6A80E3D138E8875AFA56EB54BFFC1C0AB9426A33F429BAC87C
214C6B719779DE0B3FECF5C432539E4C1D48A1FCAC3511A660F50942D10BC0ED
AE833A83965A33180B0AE533FED1313B56A166754B75B2FA84A4AC48100FAFD5
887F20BCFD5B5FF7FA2EC08BAE7DFFB0B0749E05027D5493A806A353E32C09E6
36DC545BA4C441F00C27AC4300721A6A065268594454B47BCA5D4E87DEE3F0D9
508FD4C5C91A1F5EBB6FEE3666A20F945E912D1DC81E4FE82C3DDB12746D24A0
6101AE55407463C1BEC4185C3ADB1255CB2544AB011BFD45172AA76A0DAC3029
12AC116396F07385CC339F73A23D98F1A4DBD8E6B23479E59C1D51ABCBADD6B7
366B109921EBED2CDCEF7044B919D374B1B567BFB06BB54F225D5BDF6B04188D
10AAB2EA25AAD16221FAD53C4DFAAB48052CB08D1429ED57075A0881FD3E7308
928E7FE5E328E98DCCE6BFB7400891BE51EDFA7DC56713C738014D8AFD76914A
225E213661F2D5FA0DECF0483BF1D56A2A519C5DE49C03FB7B41E2FF12883541
AEFFBDE8E57D7B22831413BE2260CCA650EA76783734B8827E24BF415C5EAD57
0AEABDD35A39402BE04B092D9A5279470A9B39F1E893972D782A86C04073D133
95230C70E57DA1B6D714E3230F4B050403FE7B9B555ACED0B6A0A6544647364B
FCA732C57DF5835A1564A7922C399BC707F7BC678B5768092105B7DC4DC91CF7
78CCE8F5F43C95667F45DE38AD2AD8BD6BA920C96532659C1C21134DFE6C89DC
470EFFD7D7B317B3CAE75E44A41A25535F0867405783A000C044B51051065EB2
7E6FDC60097A495C606F6B8B118849D71583EC77EAE6F2F7DA084E55272621B9
E861892DE53E6410EB7034B750DD5CDF6A8B3F316747504600188BA3C746D65F
6CEAEEFCDFB6DD89591D6ECC9A4B5593802277457CD318EE0DDC1493E91C7EB0
F9309D8B4881FEE3DAD53C4017099B7B5FFB13D6B3AC539802981F4836521E1D
7A02FE441DB3F37344713A087F73B8356AACD5499DFB0A80019A93A7A16EFD59
B504661C758EB09AC6491468078639FAD988828BB9F0F8B1710AD9B605F7DA4C
9430378C06A1247F01FA19163BA355DA6B7615293B004E276F31CEAC75F7A956
32A11938D2E2CF588003BC33A7696722D1D56F62B51590F653410435B50B535E
9EFEA0EB3B3AAAC624096297D4BD902484F51F12AA9C940334EE7FD534C1A954
4120BA817AB49089506849AE18177D27092F47C4F5C8A8967FBC3DE4F6A1EC06
3077F3B79975EAD0EBD59EFE6227CE5386FDFADFBA8AA5ABC54D14E4A52251A4
DB12737AE27952B654A51022569F18631EF329CDAC12F5658A9CA19755592CF5
FC08EEF9DA3ED165947B449F2E6E98B871E7A5907AD956E5C2A57259E7468323
A73527E0F3C9033409F62DC4A7E0653C78753D4E164909431DCB3105E95CB821
FBF06FC640E80E266500A2E411C90A03F75E5E1FA97A821C7699772E4E916430
F6652616A6C0FF0B351AA04074FBFC45E14F15C95516880128C5AEBB8A63CDBF
D3476161478043CC7F8A03D617796C8D750304E9F7C88C9BD03A8A1E0D6FD61C
7B1A017A9BC0C351387BBD8503D5EB2A1D396813D3F5590941AAF99F6432BF32
A3DD099DA1BF5D6BE8953DEDA20FF38F87CFC9E754546F80A1392B097E5F9DA4
82AFB2D1E1A0E970036E913BC971FB1E0D4BA0042A777AD11B356FF44BA38A4F
A209054D956203D11C268D9F07606A620331C5B7284570E3532C2BFC6F8B736F
1020E9AC4AD9F204654BC2ED094FF7D35EF7FD123562D59A5DEC2B5353AB2469
59DA5E341576E55814B0AAD492FC6BF2A6C387A54E22E4FCD83A8CDCF9F836D1
4F344D89AEC8278075E21E1E1B54562509372C7503216C935A67EA70BF2A427A
048A87D99DF7775414D07B3F5927ACFA908B1242F4437CFF674765716D333ED7
A4E4D9BC9D4370170AAEC3391CCA17ED4ED3C6C3FB7EFCAD36FFC51063A6982B
D70BE67F94C624497DA833AA4511588A5FD2AB4701766F293B24C5A782071D1A
C2D9EBFFB4FFA7FAF339AD78B986088C79A0CB275CA8BB73BA8C3D531D43BE82
C544002DFB4E5FEC52F5FDCC52E0AB134571C29B5213874D76D2B42EF765509C
5BA89714EDF745BCF8870F3B5FCA67E1F553316A73B4756186B5665FBEB77109
603E4E2155395687DBC340E54000DB9B9C9B512A591D614A6417F9DABE6C645C
EAABBEDDA6BFEBFF29DB281C38A5CF2BDA0F60F794E41D60C4B79668D0704585
B969251F67BEBCD4324DB69FF28FE190E74866564C88941DE5CADB6CD43A9763
71ED103CC1FF63B0105CACDF9600C75E2828CDDD3107095FD062D11B7556D085
82DAA4518E446B176D90DCC693301BD702B3602546EA6208DAFEADE6308DA494
A730D3B7C9D4BB8F738CE8E686759EA4CFD8A075E7A85E60FE1D91A600E115E7
02E2081D81F9578FBA89B6C81ABFB5DDD86C33761660B38AF16D19ED2717AB03
262A0D5DD09DF9EE9A45B9C4F085608765C46EBB21067B9558341B2F7D3BE67A
44222AE28007D3BA078E2133DF96416D97216425EE05097285E48A006FE526E6
12B7F12E73771203C4014295FBA2F4AE017B85915CA903CB0DD2C0CCF494D014
87E6A39FC0971734B3D2F67CA7FB84C5EDE850CA254A979DC5B9F5E00A6149E0
CCF4B93042CAD9B3058B1EEC4E362DF5A1EC53F38273FD2989718F20667CE26D
5EDC6F7554955F6466EF878BC73E1429872A8978E6ABAAF9BD6FE180816DF002
F7F9A87B9193D2DD4FA34A791B132DE1686CE9055A3D9E42CDBA2647F86CEE09
0BFE475E0F7B50A348BD2987A45AE742E0BE130A58134ECF85BA12C5AB16B32D
0DFCB53605BA141E4F97BAAC1CE5D20931E0402700BB5659EB4FC9BE78A90A8B
C6988ECCF62B7BDFB527FFEC0C70548158CA027DD2D2864CA163298CEDA82252
48B4CDD5F286FBDB1E35CD63D325CA75EA397E36FED572763D8DA3C65B7B7376
69EC0272C7BE8C8F6E557C11FE30B2EE7C0D58859EB49313B4959076DFC6B634
B92086ED9CD83DE07CBF1A677AA0472FEE0515965CC63647DD551CD50DD06EB4
4056E9AEE33B5F3008EEF55D90610C81EC06CBC23BB207A966DDE41AEAFC1F0D
8498CFE6DF4CEF7586E9A6CBCE3AA4F38E713EF90BE637054099C139BFD6EA57
AB5B3BBC329BBA2F2750B03421C5F46B783BF500D73C814C41855092105FC831
888005A06BFB17FFFE25DF4FADC7E1A2C37BE0D3AF2BE977DE9B339E2DF04135
470271A688840482F4693013856541404FB4F24F7795EDD8BE8C10F306648DA8
77C1E3EAD40DCF97D1BED93A6A5CE6673DC971BE539DCCF4CC1B2FDA688C040B
F99E708A364F2DABF1E48F38919CB1BEC39D549089FC76AF6A26BB80E9A75ED0
42DDC9408C44554E7AE3E1B98CDDF83CE676E5CE54F19EC597405DF8D55B0BB3
52025507554EF59D7176287650062417775EFFF14EF9F48BC15D9DDCC363B209
A518C223EECF558E6418C80F49B8212A294ECBB6E6E9D6FB03E01C3550443F34
8DEE26669203514A46E1F11BD1DF3F1210C722B233136F9989303481B529E3ED
6EBA8A247B6CE16FFA09A3BC00863EA9C2205F45290FBEAD55C2431C86343467
0C798327CD9A4A713FCEC32F4CBA16573295FC6E4D7795E8E9B8B1F735002940
A318A5AD159C55168614C05CC6EDDB916079CB8D4080209221A13865E8967422
15AE645B8BF948B8E3B7AA0FF50F0BCDD154810310CB0C04063E0051FEA4082E
B3348AFEBA93505EB382C85A878F409795AC6119CCA9A7F95C1D64CDE0250990
0B86C49073A1F6B1B9CA71D375C658E4A9FF93E845D6B864055C22677DCCA2E2
4F94FC4034C49A513385607DA9C643C3546D6908E7E6B631495125A070FA497E
5760A5AD17EE5B4B024816735A4D9CC39C8F087A77A965C6861A52D64C779778
6696B28C7AB13912E045D719A38F17FDD7BCCDD5EAC17A078FB718D3771212F3
E45C6D29B2C93C0C768F27F3AF133C7A39715296CD5939B26A068ABABCD651E2
9D403003971F3AA3883640ABAF6B7589A831ADAF438E48FD16EF420C1D801AE1
C9A5E1F4A586928D3AA58A2C0944530CED9C760AE4E87FC05BFD281310037E23
E8E33DDA861DE2988E091E308D1EAF52FD6C8682CED47035093786E20557776C
DABB96A9E568F4B42E306EC7F3C25BACBF1148F6C9EFFB1B3DB782601038F129
8F5DB434B7EC51128087D8117A41501D2B0E50AC18ACBEC6FEF76B826F1DC80E
4926145A45E69345F45E585CAB4068CBE4F6B62E85135D3599488D62E4949895
D672D38589CC4EEFED8BB03DEB4FE16848CF3FC5DED7AF0E9B3870E1A0848764
B759DDC5540CAFC46578A69834DB8B78F23A29BF9842C0D709676184C9B1DD34
F6BD7A439B0FB7E858AFB84FB52812D3DFED47EB8F441C345A584BA502566EED
75728D604133A44AC91D982CED26A2EAC4C3956C802BE56A16BD45D506E7D3C9
1255D744135F82BA9F5DB07CF13FBA26D6EF2E40D63D1DAEEDC13B980EDA84BA
D797B3D3E4435804B6BE4DDBC6DF4768664BF14767F034AFEF769B86E08B5ED6
823AF1C31B704A259584D64437097BD8DBDF192400C26EF0ECDD2EE04C02CD20
2A35676C071F4EF3E84242BE39FCB4539548F9971D3E261B05A21F72B102FC19
5EECC0AC031B299C36D800606CA851CD36EC9A4203E3A2EE6A02894A286B5570
00AEE5E45C2A60BB4F53103F1F59D889B01954302704B78593886985C53B4439
1B05EC32268B13494173114823A05F2A3FDF571D4EE45BF11DBDDC2FD90D3289
CE88598FAE9D20329CBC5901CCFFC49FDAF4F610635C0F03483314B5B48FCC31
90B02AB80069F7DBCCED8901F90F6CFA216D30146F44BA7523E0B02EEA6B9666
2A1E6871FAF6EE950215BE50DC846374B50FFD382487C9FC3DC26E1B0CF0C469
2B77E9A6F17A6C352D3E2A349BCB0A6E8943A4B01D70AE168F6AE6F7D76F4904
9B6A79670C7D913739C8D7F1E12D309A24545D7DF5E6D6F665336ABD72DE4EB2
F6EBD9495E12E8F0EBA2C58BA2564AFBB8C7DB2260675F6C03DA7C9EFCDC6AB3
AC1CC740523B09DA00185831850FE284B3553D7495443EBB3C7905C686D6EBA7
9E856FCD48F7895AB2BE43926FEC1266786659050E1A326A44637E7DC22A1F01
61B6017F17589B4083D95FBCFF2B7A4C4FF2844675CD614595140649BF0AC5BA
7C001F0BB0F9428E7A631E3D63522B994CCE7E4FEC9BDC538E6491E4F5F16730
2D8C5A752A1FEB041810C6DD545F7F4764B61F3090AFF572C7CCFDD71A37921E
69DCA4130419B8319BBD9C8DCB0C944B3B21C4238B95EE33CA9DDBB6106307D0
92DCC56A228452203FBE61E030D13E089E9CB6C0D61EAA6EB4FFEFE39C7BCC7B
3AA99B6390DD9AA792E4279209E41461EF79FFE6850055376943FCA558E7A7AB
D86471DFCE34761BDF081F4D7182BB1733373072F975D7E809E9A6A9F68CADA5
6B23B2FDFB9AEA7410AB69F0D1798271EC6C80127A01211185A5DC3338C02C4D
84CA6282AE1BC3355989AC464FF6C8C380A99E72CDB59B84FF584841E420EB97
4A671D66EB4518FFEAA8246F01BC415C188C0401435583581EFE46736DDADCE1
18775515EF5AF7BF31F66AE160BBB5A8BC8CC6A8B767BAAAD0453AA97B57B64F
2AD9AE2DBC989667BE5253ADC946CC6DBF224F35DF0AB0D6CE94A091A27E7846
225D8360A9C4B9597A18028953E3FA2545677C82DD02CFA5A865BF53E3E4B137
4DAFE46B1D881F99019E16FCCB4D4185A3D58A974363A327607590DDF5573EF7
6D0F789274C1929A48E60B5E01AFB56EEEB1C77982ABB8EE6140B1475A4C3C3A
D7868AF7450F875573E4A2C49A8D1ED5E03464B6C6AC726C4FB5B21513A1EAD9
2E128E80025FB50EB5F17F745E24926C9AEB22AB8DF1DC47C464CAE16A2936DC
ABA1363E367FFD26820F3962CAE33276313F87B7DEE1B172764ACD56B6D724F4
A403284E8596260D5CCF8D046FE9E5FE5CD7140B5A04A493F01AE656C8C859D4
DBDD66D4F4B92ADB5C85FC83155285BCB265139170DC8FB4294B006D7B9AB663
E0B7FA1F3C18CC3DE7D205BD8A7EEB8610112403E278DA27B2C434B8A26187F6
7389A2F4578042CC624BEF6191519B639D87A7C3B79417EF2E5BC52B6BA67335
F672BA95A862A44FE3BBB4ACB7E22D96FF5E90258AC6772DB8C85740D4066778
4B9E7E03CB5C00D65201704EC283C9E176D68B2B719B2DE05BA12D931801B439
3F1CD83C6BC0FC1D8AD4E0F0014B6E2C299D09FC25C30C7AAB3C4213DB20CD3D
C9CB06762991F88B99EF1737634F7C143D888EDAE7F29A584793883D4E4E5B82
40DA800B43B95CFDF125C755D468EA82C601010A005E12DD1A7642E98F9246DE
FDE0F026FC3AD2444E275EE916190B1735816CAB8DB67D03309BC7977A6AD511
32D6B6B366063CE605C921BF29E9ED694E7FE2E5D964019491A77D5F75F9665C
9675A81ED724A3A96B8A8E037FB135822E257D173EE0E4027169EE4AC1F2C37F
BFD3429425E2698279AD86998912BCBBD6669F2D35081411E816D4314D7D98BC
777914F71AB25DD4E037DCF90962F96C215CE9B0DB507EABDDF935F7E02F7BF8
CF10ED161779F8D65A983F58356771D33852AD5FFD1B83E2308B297BDB4B4F11
18F94E0AD8C47E64FD0161DC032555DAA7AE122AE40E4B7C6646A2373AB54FA6
3EB9FEAACD1CE8DBF69138A2087B61FD69F81F2135A3973F350FBFD52A177BE8
4F2C538C0FE29EB9329198F992D364F27F9AA276CF3607455C4084E011708468
F9415B871987F1313B154F6F1D4BA0F264AF303CC6D8482BA97A70F8048376D6
04F360F305808CEB9BD6E81C8BD23E55BB557C491E30D11813801BFDFD7066CE
80A7D861AA9E9199E7BD065BD7A4D4F900D3EE5E20A00EDA06D6961CC682212B
91C491E7C217D43F798EE0DD3FC02D26B276678CD22D5AFBBBBA9BE6E31C57D9
DED0B9584FEEC69A9270BA85FC78746416976328E1F0D3ECA2B6DEA0D5D1E699
ED753593F2B6373BD245CD56BE466CBDAFDBB39AC05ED705F31F61454C212C7E
5990FD5EBF2A369760C80B1EB6B11B97CDECCFF964614F5189F4099812BCA4BE
5D18E9324C7A1B5C7DC8375A1D2E8D121D9ED238BD0B4877FC616A31EAC3BBD5
18E584D66DFF49C63AD27FB1412B31C3A26BD62E86B71EA5E2F7D9EB25188955
63B3A0FE97C127E56F43FA17D9C7EBA09ACEEFED51A3B369367EF9ABDD2EF04B
731C2E42C49C0A4DD6352297A6E0DDBE1F83A608D3DAEF997FBAAD4A5C6D89D6
32BDC18FF3F513C770CBADF11423B3B816D2F6DB237AEB20EA1640E482661861
58BBE63D695F8C6BCF806723F69EA0AC1EE4799157F1EB2A24A96E4DD5EFFF05
EAB31373A2C0BE22A6DD5371DE9A17C93C1493975ECB1C229B147D15BA8E8F6A
9A0E3B2EDD2479BDB819823344A8CDFEA8E12F86F349B5992BBD4C67AD7E76C1
2BBE702DBA7B2A0513DB3970BE678C6A2C8A53DA675076CA51E132AB9A280157
277771956BF97D2622BAA739E00B1830FFB959CD0393A637B54C28520DA17EA8
45B4177BB9D3460686BE17C03039FFAC9E780E08D929BA68CB280BC4A26EAC47
FC77FDBF6CA0553691D71741E17BF28A232881193F94381CC27D5B121CB53DAF
2B9DD719D1F028E50B78BDBFAE343170BB26E9AB02510E13EEB4CD700A18523C
251EF566B2EE653CDF19E3320FB2F3F923340F615AAD0F0A4B46B7C8E8021AB9
C18B8B0632C03B3786CCD124015E57CF00E0CF2CB56EF8713FC445BF9A3C9B67
2BDE3A1F121CAA245285F3CE2464D643609765FA2483D0A57EDC3E3B23192A9D
DBB0098B1C760B7B223E8CC1FAC66EC42AE06CB105C75D3907657040CFEC0BAB
A281A8E08BC2A126D53BEC613F231B21DDE50B137D55E6CBCC02A7CF52D406B3
036903685FE99B1AC3D09CA55C413A60C4ECC1EAC608B383F47FD28BDB4E65FD
5EDBE7DEBF439624DC6440F77DC1FFFC745EAA7B6CF7197C1ABE073DA9C82127
BB7A7EB8343439747899D3E3C5B59DD35E6AA6F670148D68C8074FF697C3513E
C40424136EB110E562DD0EA6DC3058BAD2B90ED9C83B976A0EFF109B0A72254F
7F715E4F5C66AD34971E8F6E313CF53DAE1D380BBE5F6D4D8BC27BDD128B3C97
402FAAD9AF7D5B0B498D8F69A5390A77DEF33A0F5B13BA48E23C0B441A62ABD7
AD0A146B71300387CC80129D5673F9CE7217DA6D1C278B15BFD6D9085075B765
C4B27D78B0F32F100FF3E227E6E8233E0AAB70F35B6BCCAA9D6281EAE1B0780D
E1AE1EDC4B28E6B129DF2D1879BCF0324AD84E79EECE0CA6E00B28AB31C90620
B86AF9A98645D94A537048813A8C83D01420FF19C1E46544B68B00DDF0DEC2FA
7CEEE9F6FAB42919E993B37CB39E2520BABF0BCA42DBAB2903D99A475AB27D72
3665C39F60B966A97BB299077B4271DC37246FAECE0070F39FB14871D39A21A9
43BFB4571C5B9E80EB630E0ED2957DA514BE49C9C839236354C7A6E18ACB2335
298E989B7DD4F3B7E1F40C9254AAF10B41A973807CE6AA29EA223F7E45CE420D
C0014C31E0B3FAEE7C35C7F5382032115556826D55337F0A7AD5808DF2BD0CC5
295172EA8865EC301281991015194CB291A8AEFBA6A0E6E0D19B9C94617BD37F
7EC6AAAC44A72F1ADB34AEDFDFE26552F12D5C5756C195F15647A24F3331A8F7
6AFF9A12621F65FE0C408AABA24FE37F60068D1D6F4AC93AFF1EBCAB92E16046
1D3B14E2D25B65A782B5237A7E9282A4615AC6986F95502916560924F0A1DF7E
529DCBC63EC97C83BCBB7415616B12928EDF28EAE703EE1EC7A23452E63D41F1
FEACC5AFB134B0FF9DDC4D1C84876ABDE96436B40FEF047F9695D7826995D70B
E623BDFAB27833FBCE73FAAED21367B35E8D35B9475E5A35EB951B9944B05E14
F5C3ABF59037E61BA6BAA8B0EFA1718D9CAC3C539AFA85E151FE9013545D0A52
496A2BECC809E1E9165BAD21FAB00A911AF83F2956F02F954D87E0D2241B3519
6D4EF9E35EC4E32FA969ED5177B8D87EE306B4DD42FCE895A7EA8BD30E784EC1
19D36E0514905D0077D9E53AB0B092C5FB2430CC6C319154593BE9CD38178621
69A950EAA43B43B5E5538DA59CB8F44FE903B4BBE9FE2316E52F78FA7810420B
408029AD01A1E9D59BD000000CB7CBF3ADA9F61FF3013041CBC0A97F3D21A337
5A628FEE133F77915205FF3F6F0ABA8994E9B746688DF90EEDAAF622F3B1F0F6
261FC6D0C0FD5E76AFA1688064B037694342895840BC99D303EE87927ABF8173
9CE6758BF6CC8775463949A6FF3ABBAA653FF9212EB9E74C8E49471FDDD1939B
470A6281CFE3CF95A08003B36C5E4D67A2658C2DC5DD398C9675BCFF3F01759A
BD270B4CFAB6026E4300129D06445B35F4DF5C5BF1ECD5C1ADACFB0DFD481EDB
3BFB25F06B4102AE3D6CDA2C62ABD22641750C57326133AC7753D6129FD59A61
E1DB7C62A870DC934849FC42F4963F0054794ABFF75C5E04BD48F8F544719BDF
D098A5469C58CFA9D9FF7412C1DE1E9184D72B94DDE72FE81CF8ABDCC1CEB988
95509E3F8A8E2A6F7924860E414ED3935EF4B71B6D14481EBB4368953B39A764
2F0E3A4D02179F27F7FB31A853572DFC0DA7F2468E5B4E62EEEE0FBE536C9538
954CCABE0CB64BBF542F7C89E01D82A4F1FE115CFFB49A83B8EA7FA353BFB400
48B03B8B576B24042573058C7CE30D37D2F47989D191067B45C65F7142A4B222
0828573B5052F7C4FE22B2E7E2DBF473BF7B4F00A2547F5BA91C89FDACB7219D
8D8A04D9F5C82BF95EDD4F53CCE8B30148B64CBF0904543C9B47B20BAB3A5C6B
084D4B72DEBFC1EE962AAB91A3AD9007878B8F4E3D502599478AC14F99B1B6AA
CB43C7BFA44E47B32A8D7D6EA2B415676EDBD2086D58C48761D350090BDC74F4
A800865A1D21F0F934835BC73697C1E36E9ED9B1A8C6771BB3C678CE55266F60
134219034FC1653D8D592FB6B872617B8CDC5B98824C45DD8879B02243D43AB3
57D737069505972211523C8D536AE56628D5B45534F009BF4F2390A4EBF2351D
BDA97DA62B21CAD1ABFA3DAF4B87CF82B7355D2EF5A7623698CEF15ED4E7EF7D
BE09A4CBC1F8950086015A629D905697A467C3BA8EC505E26821EAF5895A7720
F5937659EAF397F806260C79E4941801F90E51EDD7B35EC53D9AAD1258B89FF0
BBF5A61F2BEC9CDB121030A9F09E88605608A2C43D55770E669F3C806D76A0E9
AE3F49AA6211EF82ABF4FB42BCFC714AA34AE3D964A40035BA77D0752D164FEE
8C60772E3CE11CC68D4C63441A9C257DA34568EAAE7F9969A313F64043F27181
C57FDF8E618656711A8B412DF24FE0386D710CB21FA5B6A46A53E5F64CFA9AA6
E666841441C4E831008A0329D7E0292F7FE99728198C22BF9BFCEB22E5063F13
6CD42CEF28620CE3A6DC8226B3E85C207377D996F2DCD29EC8196AB6373733D6
86A3D197152F8E7B1996C85DBC90414B17CAF3212C7D966391823E46F6BC57F8
8F13F51F0D4391B6554FC5657837531E608E409240BB68D971ECEE6EE05ADFE3
8C488CCF956B37CB7C7A1C41F82A53E7ADB36B03E6A0D256DDB51A1E65E460B7
3BFD285E42AF875584DEE132E19E57FFE2A44F74C1B6A8BB33E1CE2ECEBD1628
B178ABC3BEF15365222E512B0A3895F55198AED9E96064F3CE1DAF6CB8830315
7FAA0D9AADAC4F768A3D7369E1B06BAA08E430BD77776B17A47D56F0AC4C28B0
B80FF629E111E0D8418160FD698B79952E1CFD81ACDA9D34E6FA3AC76ECCF223
F84C840CF3DF7528EE67527BBB8B2D84CE129FA1C7854589374090A52D87DAF5
779D8DC7C107B5DF0D4899BD7B4A77D2958B6C6D951DF91A58424B3E9D43BA79
67C76752C6A2B4ADF95412F44CA4624AE75B1341EC7779A95A2C920453A0522A
5456A06281E003BB57BFB136256234A2CE1D189D91E2F4AEEC252CFB6520A173
792A108F6D5A371B20ADA94D54FD6691111BE3FD4350CBD6D7C0FCA5F57A49E8
84FBE400EF35A9DE001BB91AAC87ECE211427C252A75A169B46228690E681A82
939F0945108EE8B54F3EDADC6482DE0B3358909FE11026A742E6AFC3AC9CF34F
33946607588860BA203BE4C37BA1602833C27D04FC6CC444A628AE68B00FCC5E
3475AC3D0ADD61C1CF5DCA4E94AABA0EED9A7E3589079A450B751471C464065C
90D32598D17ECE421AFC3182EED7BA4233A11CD9F6CB94F3BAC77EBB5F97DA41
81646D2BB48A141B8DF8E347C9C95800B25EEA4706EFC7003EEE3B5008584C74
78968F675C0AA9121F7B942EFAD0966DC7561DA88800BD67C2DEA6839CC43DB0
0F7D552502F2D6B081BDA80C6E90B2B4A60C4A462A4C2EF05D4DE0593BC9AD88
D877E412EFA6F46793C18EEB4E1D86B2B87CEA6C43F243E57876E4BCC9EC03FD
6E8EC69CFF30998DA8482C3D06184C51623D98685DFF714A9D8AF53D0826CE2B
5C01083B68915B843C189ED768CC7512E5539F9F1F23C0E6C736E696041681D3
075C2ABD31E24CFC0BD1840A0B14AF68AD0740689671D9990E6A7EE6119451F1
FDA7B0944AA51A46788FC833B96E5B0EE8AD702ECDC73980F4C8F2C71AC0103D
7B3B6A19B0BDFB526790F16C776BED9D0BEE620943798FA7A621E5094BC01979
B44B6963C7F38DA27213C620F3883E924CDB65E0D1FE7039E68009CB4E97F66E
6648966652BE1428E23CEC51B093B0964009BC94A321DD4409F322CB4FF321D3
2E699C1FD71B6CE202E6107BB49B130557AC6E4E8BCC061441D03B67D877C07A
355377D349B1CA16E892E5F6E9CF032D7DC4EBA40FFCE6EAE29008034EB0CD0E
0CF7BDC9B53F46F232ABD661BDEF134C3B83638132F427FA0995549F4B3011C5
FA104A453517FCD86622F18A16F60FD1F98E8203FA9BB38746E749C36802CE51
94946564B832715EFD1B1A992C4377702B6E492A8D8EA1308BB675CC961B06BD
07713D92F7DB50B5904B40138008762DA18AD485B34AD154095C25031D57BA89
12AE3A70FAE1D84E1E78EFEB33ADBF7B4537B7376B72F0AAE34EC638202FC058
F3CFEFF4A20FB8CA1C3EE229E074A4DD34F08BE0862679750214141C26F91DBB
295C15C38025E2F4A52CCA92BCFF8E61AFA3889173674E47A2B48E77FAF9DA8C
042EEB8EE8B768517EB7EB84A945046858952233B307601B015AA4AD744BDC42
C277C87FDFCD63FC402D1A35FD021873C144FCCEC201C8DA8D1CDB7C5B275F25
356E5267452DC6DED80DA2AA5D1082B88A4184D383EFB71487FB6AD0526A9DF9
9279B9E198F4ADA2FF6EC39D550F1BA87AA8F5440E78895B0D2F62628D831399
2E8A60B15593BE728035B79E44964AA86795B072D8251693CC4ADE4EEFE19916
E56A5665E9C3C56431B79826BD6F1383634AC419A57580EC608C038A47FEBF80
9B6AEA3F561AF56E0681A154E422708FF8749FB0B66ABA1FD04EAD71E9AF6D1E
C8C18444DF802CE6187F568C1B4BD802481095C999BC32AC65E5283761597D82
5025B93661BEB22DA01EF40446D2686E61C454DC527264EEF78310ACB5709305
28AED6B45EA46ACA455269891C996A45E2DBBBBBA03814C14149E68F7A406660
848766D0D60CDB3E35AD6A088AEBD51D27BF5371FD398C48929DD202C9B74A6F
97776C0A41D33E2EDD166444F9F95F644B7DF104315215A12B869AFD6868E645
8A0275BAF9B4899C39146C895788F09F4838A3B73017C748055D7E37DAE7B689
950AC43117135D12C0617632C9B257BFFF24FDCDE05B2E12144A3D341C461025
13BA6BEA273A58E6D58E53446E306E2112CD011BC86E9C35430DB009EDB3412E
4E563D00EB76BCB309063C51D56B9C74E7C4771722434E0C448AE44DD510AD8C
7FD2E9A95F66D1CD3E48903DEBCC52E01C7E74D584DEB1A338D90AA2BBF7FF2A
D019FEFA197B3F5A061757DE1EDA11659A62F2B90167669204C748D286609112
C5D1BA45B981B303D772190049DC5C662AC5C1C49AC055DF78B67E9636ADC9BF
EA04F1C3E1E647431D642F8062F5C9FB0B6571FD81775C21B74BEFD91411F8CA
BBC015D545BDBA535F4268EA4706BDCDBC9E3ED8B24C84859CCFD2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
dup 12 /vextendsingle put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 34 /bracketleftBigg put
dup 35 /bracketrightBigg put
dup 113 /radicalBig put
dup 115 /radicalBigg put
dup 116 /radicalbt put
dup 117 /radicalvertex put
dup 118 /radicaltp put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A21C69E7495DA267D5C198848DFADA31AC9F5DD453B1D
3838DCCD32AD23C7D890BC859BAC8AEB18B09AC71832190E5EDEB99DC3904AF8
BBE407F5EAC1D1B0A1D662D1A896874566CBFB46E98286E82BF892917848B9BD
B70BCCC4F83DC06ADFBA741F9A9E0FDDD9189DE5C3F2A05C77BA591FED2312CD
D8FBDFFB276035A428E531D41C53700C98D6923FFD65A2DA9A78A3E50FA79BC7
833A2232444D1984C6BA33B510A06972844DA0B1D64C4F19C062E78A80E6349A
2D7766E0C532F6379318EC2BA20E6D7F08218DE26A4EF133445FCBE32C6B558A
B17BC588B97C88D00E6CE7B2BD1AB594E30DF9439D6D10788549E98B9F00B8E8
1CFD0B6C01BE36737D48553958BA187935BBC37D30667CA210B1A26ECB7F079C
243F54D0CBC1334A5D8671EBE5D75804B1F704B61DD097DD599331250FEF92FA
FB254F95E0543A770367BF37A6F0870346C692B039B8505DC0A9EF4B3A8D6437
647F93896AC5A4AB46B484585B1B3EC6398BF5A698ED07D949C30D2D8C12FDFC
BC09B14C60427B6F7596A229B55438563CD3EA6E469629D7271AC8C0F5DA378C
A90CE6B4373525A6B2208E86BB809674241BA37A9D2D2BB03733F236804FC8B8
BB46D92AF0BF13E8098E8D8E168C96CD2232010DE0AB2043C7EBB740B0706071
58014DBCE3237D3BAAC941BC4F1C4ACE56A1CDDB0A53E1FDE6ACFEFA0C61F8CF
B0CA7092EE24A939991C2BC56C04E4DD37B893842FF3FFB44D1643C53DD769DC
75F932B093E229B2EFD329CB15CCED719FD3EAAA080D50FBBC97C5EC7FE1F2A2
6AD551C62D6DBD0AAC9BD038451A882900B9DEFB9F891CA56B70D3355A1D80F4
53FE60FAC91CF33C026ECC982AC29FEE1142F974EED0B65CAF7AA2F4F525A278
62CFFD9781E828FB4511396FF64F3150CD077E50F2D25A234A878914292472F4
4F47E4CE07D2095CEC43724BA1F1E3F04B960FD7C1D926D6484BE0C7847BA123
F7D308C88E9955E16020E6192A825A50D1846AEAEB1628D4027A859855C93699
80DE046F4B342B44E7BE2595773A7F93DBCFCB7C418BA13B1448439209DEFDF2
86E04ABE3DAFC83A246807ECAC3DF6191EE72D079705C0E2C862E1C0A76BA3F0
1EA4EA871C22A905166B35F503A3877E53E0A135D828DF09229A4FBAEBE9945C
96085432A644C737CFAB0919880660E937B694F26909D23E436D794EBD678DD8
F62377A87A8DA04ED64D89DC930115B3EF3FAB1B1E87E299BDB4C52BC0C522BB
D35C0F6C9A4D34A16B4BE81F4CB016C73A562748ED24BA1F14E31A48AFBDD26A
F2D989A9DE85252D1DB255D4618E368E7AF462478FBE1A2EAE8CFAAF47A45E5A
4E2683CE016F2C8CCB10D6ED9EA2F6F9E6D0C76320DDE0F35BB18612AAB34B95
3E9179C2DFE177BBD17C1410568F9F2FDA4CDDE928636BFF448A14C1E383FF33
58AB802E492EC2DDC0033D035B1D8AB8305B1E8E7312E3FBA9954BB661B4F458
B57DF08580DAA405A1DB313F2AEAFE868AC4F3561514FFB0F401712D0E233D04
49EDF84E35D22C23586C6E5387159DF885B5325C6FD197411EDCB81FBB9CF107
226EDB01D9BE632CC831F497DBABB82CA85DB98C4CD26E159DB536E22F670153
C12D459B911C7D9A33EB1B358A5B99DF63004A1D2463C14B5EBC05CF54AE7D1F
FAF0E95E488613D3997D2F38B45FFB855E3FF7A5B40216F832A9F68030CEA89C
162B25138E87F27044B8172489C50FD7847BFEF01315332BE714E1E98F492009
64FD924800220E922AEF593F0912264FEED4F7ACDC5292507D16A88A2A05F143
FE44320866DD2E0F259CDBA7A3ABCF904F33218EB4C1A81C2A555F162F150894
687E884C622C34520A5DD6DE53381FB2854608888A5FDF8D988E3F94C4ACE17A
B0589CAD3EBC5A879DEF1C093712EE15BEEA7DF31265276322AA62A95688E2E6
936524B6E52F38220CAB8208BBF10D08855C7764946831BA4633448646B4C702
B8740A1D1C4A27AE6A824D12FBC69712F5D4F3E1A671522DE9882F2C6BC439AB
614E57FA7706786315095AE0B4D23A504A0B304F9B7FC665EA5CA073D7674D12
751057ED15AD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFRM1000
%!FontType1-1.0: SFRM1000 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1000, tcrm1000, larm1000, lbrm1000, lcrm1000, rxrm1000.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1000 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-189 -321 1456 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F267FE330B57DF626EBF73D2779A4A6B462AE6E5
19E5878939A488F2FE1094A76925CD24DAD4573AD3CF34E426708CF06E7EBFFC
BEF5595408106E2189F418D17AD510ED5B6A528E8902AA3A5F0FF52AE3DEAB07
32F06B63E28BB88229E046F4FF8A356BBDDE82DF2A197F2E26CA00D5594725A1
83A89A36487EAAE1AC312C929CDCE50722FA6C596C261E4D78D6C6ABF77F5CCE
0E410ED74287A0F201140F8D9674A7AC585D3CBC72CCB824F9E1CEBD08AEDB3A
A4015CADF471F7ABD9B0F0AF73A8274FD441BC1988A61799856E4770155341D6
516CD0E25BFA59B67AB7E0571DF3F5BA70AB52137D9E6A79EFADBE70CA05AC8D
991D0895C8FFC747FBC0E9A7212BAE6560B9E2B64FFCC58112E64A3B4CF7ECF7
595F51C34AD1342F5678FE1E62EC5A389CF04E82B5F832914B91F921F30A7E32
CA3919F57A2D9DE844CAAAC0DC751C255C9916595E8C9532E7A0A84A0AEFCACD
83EDE059FD06EEE9951473180B517F25F609F347DBA012AE9F004DC3C771777B
BE812787C3C50315D67254A384EB65F260943C6E16B2CDC64E15EEEDC67C5544
8ADE9981A6867405E46222CACCEF79F9DC8674268BBBE1EFEC2187A75FB7FBF8
CB2DB2134848DEA2F9CED443DCF561E7272B38F830871B2A5196A787924EF556
4B7E9093ADD414ACBC10147944D216D35003A04FBAAE3B24CE5E678ED3999320
7EFE54927511F03B92E87A055D27E006A2981731AFD80889663DB01695456845
3F095FBD8D2C6FF35AD5F21FAE46CBBBA6C32980D1990823C01E2F52BF077E67
99589E81900487A2273EAC0824A354D97423C814D951066D083A64DDE6524952
F356B4399BADC5BCF4C85CCF00AE7E5AE7C7FB7E45977F7DA14915258EC7C7E3
2DB1DA8B9BB3C2E69ED8A267500638CAAE75F8F6954E412C3E88ED708CC47EEB
701A6D026C56A4B495AC3E1E883C56A1D8AF76865138859A8194514795031C28
83E274A3C1207D5DA20797DD4E14A49792B406531B0A607197A0BEF6433D515D
585A3F9321558D70B55472D03CF47E546D7841D0144DB4E3F6B169F1CC6B12E3
CD2C5D33C12CB4A48732764C47B5D319073B2168F243CF29FE98F13A56BCEC37
B8BD241C03C96381E72E04427C53E7090689BECE6EB15C7DBA10681B03E7D826
2E570BB564EABA5317932589FA35F5DEBB62DAA73303959AC0E5C87D9BC16BB6
8CE59B3694AE3A484048D30AD5B57549CD21067E75327C0F864BF4035C26BCB2
EF155A25887E0C5F1C963EE2BD777E6FB6059ED25395512C5367823D1575D04F
9AAD1628DAB29785406CA23373D0BE06E4C49607918EF68B71960883A6DBD009
912541CDFFF31361E2E768D5DD2BBE26EF389DD4D870EAE09B62EC173561C0C6
32FC2E1BF5CE9DD8634611FDF0523ECFF6072BAA34A427A79730AAD3CBC7EE74
0CD58BD8CFB5489ABA2F75C4E676C5E99F052945950461448F3DA9EB1A47F2AB
39A2C772661FC2B4CEB53784BDECF18850544B362BBE9F6864EC7978F14D1AEF
B4EA6AEF37854A04CEFDD4D9C35FF0DD1AE800D364B668DF5F6E1B445F9C0A12
3D12BE782B9C5CD8F660F1880F19FE0EEEAC84933C7F2F997E9925C2AEA605AF
5FD70D18EC28A96CC8CE2A27D097080BF26EC34A4473C1618DF34060043017B3
ED93E1B0ECEA2A062397B4FCF53FF2986C690886D716F334248CCDFD8508705E
BF4006EC9F84A4CA17F3C690C6272AF549BAB6DBA0D64874814683DA17825376
C970BE871520582B40F2E8516290DD4760DBC2DF2DEBF0BC70A92D3B64D1FDF7
23DCAA91FC7E546D78EA8B7EBA3B72784952D7B56E016E19CC4D899762EDA276
00862419D0D5E959FA0B553B3535E17C8882E98BC46E16B786DEEB65F796BCDD
8591925370C04334189EB06A1907C8EF7DCA58EEAB331C85FAB4AAFAD875F8B1
D7A653B661CA54E95EB4454981FD0F0738946702CFD847C6E92CC31FB277C8A7
3DAED3EEF144598408D6142D7FF5D962F67C8070392322B60ABEE429FB069948
5952B823D7893239632144E3313CD15986DF18AD30E6D2416965AA09228A89E0
6458891195361D05DD7726AC8204E2C98C994B3AB9A56735CE9C54D9A82D9A43
BF16B10552B1E7F828145DC333A77FFBB7146C3DF516043325B54EB538A5A263
74D28C30A9DAE214BDB6F1782CFC4A772D88EA78D210C09BAA5EC8EA6C88F5BF
25B18BCE35F8096A6545DC35DD4924475D461E19ABC24A484E85EE2997CBD2D2
F88264E312205B73C40211B5C9CD35B0E541C1F43D68281086B9DDB21D604056
A76989A7A1DC74D0311D3A273FAAC4DDBC9B3A58065861CCDC14F10FC7822BE4
025B4449B37BEC07959F1920EB0B6ADF80FA22D5E117C2665FB96C8D5ADCE25E
F354F584715228B2E5CFF7D506E9D890A8257051AD06FB20E02969AF99B1453D
FBEA744ABA70896338C5598E759FF48783B179396DD40DA8F8095372C05E1C5D
85FBAB0D040975F34F3540FA7AA367955FD781A3E84451F583A144B980D5334A
523E3B740631F4E8A5BCA21C499818774D156D747F34AFD5B49E226096B1ABB9
17C38F2DC709C6544CA74327452822CBE54DEFE1F461F65667F5674D81F82F43
4EDA756B6E27A3A4CDF627BF5E05D1A6D919FB54F09D3BF2C8B414E6731B4BF1
8A50A81C8BF6AB4A892F90EE1B261542210274589614C11AB1D3E9EF88750C9B
B169C81123C070925E3F5BEE5AF007203960702EA7E5E5737DD19890B0F20CB1
BF9E8B07964DD2B592E10EC37AE2049EA3DCD9FF16557D69AABEC7E1D1A3E631
3664359DE08A1DD6CAF629346C4086912C057D3D597766C94041DA68A11043DB
CE901C843227E33B2032864B71CD533AFD2FA79F0837E6A489D9AC6A1F466E20
761E53E3FECF5AFD35B66A64B104D2FD8D5FFAFAAF0DC9A6C9F828FC71A679ED
CE72A107A2AF89A540DB08BD8F2F1BA6CCEA809D8B8ECE117A801836F65067C3
C49E40A87508B5822E61313F29015CD414029555484DC15802F43389D35B5D03
B6C4CC858A513ED0D518F7C007660D60FE4D4E2F3E299DD0A7F38E89B02770BB
F21C3E2F72647BF8ACB31B3BC4D0FAA36EB76D3F800FB336555654D54A062AF2
68E91B8E7C9AADBBB63345F3270A599F3D1481FDB7C56C4F15066AC59BDEA4D2
AE7E6D248BBFEF50AAAE92FF3576F119E1AF4BC7D48517C85BCF3DA38235241D
BDDD37DD43FB4027DD39AA60FBED621CACB672261524625EDC04141878563F78
991C235829091594E7B18E462B56F956BB29E99BC4580559F9D159D0135EE295
A611265668EB5E8C6740E09773393CE626A81FBCE9CDC0009F296A934A7C1CB5
20350278C7FB48F1A84E6786CC7A4E70B37A6E527F9E87D222C039C2D127DBAA
378825DAD3D54EE6F50EAF0F329905DA0E15E6784884E26C60BCAA38656AE2BE
8BEB2B6E60053339A768F1A1EFE629D8501B147826CDF9D1CC9700D217F0459B
96E06B2F7DABD244EBF5696733EA9C1C39719331443C40E10BFFDD60E95B57B3
7CEFB826F9CECF5AEC67DB1DDA336C39F09225CCD8B85C5DB458FEE67CC292B4
FB5440CD229F47B1BD06E56E030CB9D04568EEAFBF44C7E263002D3987578457
698A28F152D46B95CA9D1CB1644FE2BC86699C06D5F14F854CEB69CFE87031BE
3A61C81B232BAED7A6B30C9DA7CD53786523D847AEAE2F548DCC1A9B6F94F049
EF2CD563295AE14351F1CE1E424122267304E9366D4D6661DCFB4D6F0617E1A8
397AD6D938115A4619F51C44EFCB64E4352C1D5667FDF214B3B94A26D9914C34
4872DBFC2CA48D37C2C5511D90BEB9D192FF7B00CE081BE31529F0288E231ED2
A4048DAB5228DFE3E9696FAA926FD98A1B8DFF2E6B0DB9CDDDB699AC9FCA2116
10F46A7700403A1963CF42EC8E64AD4BE97BD8F0A189C24257B0CCCD87C0B524
01C15C880F631D60DD4F03ED40DA2DEE53F301BA889B2ABD919C5BE2F0F2AB98
3178C0145FD2EEC34A650FE1328C834A381CAB2ABF9122B7E2064A376465EC9F
C19929F34995728F4B225616FC555EBF9AD7BF3162E93BE25F45D0EFAD4132C8
EF819A26CE5B7ECF9C53F5FC6A5B91EA86286C0403E5D98B791F17CD07C713A3
CCE5728A2094A3E6DAA15EA84E182A6A8999564A4E0535C5FA1238BC95994C16
27D63C5EFE68F653DCD4039DB729F3ADAD09EA3A0EFF866B0004FC21FFBCD613
E05F4F6B1A6AC6DA2A532BD79C6B8A2122531BF23E9A79C7C92FA42B27CCB188
95F084CB8BD753C3B9C713DB56D08E75819DCEF46669AEBD163D1F39C43B31C2
DB4B6C5724EA082C8B2FBE4B59158065B771309820B119078ABB982AE1C82B1E
3557000281C40EC1BFEB6B1676B6104B29E1BD3261E213D1D17DDA9FA0B23E6D
EDC147CECB18584053AEBAB9AD1CDB7A3E056E8449D591595159BF5FA6EF0149
33D3711A2324176C3FCC91D61A550A2947F60FFF1F4590845F500211A1BCEAC3
B264A0AA4FCC3D5CAEA4B4ECD9BDB91E392195E9275920F27A27D792849CBFE0
2D3C6472D9C07A7C308A814BF892AD5EC136764AD863C8DF39C4E969E8BAEDE1
6F206873F9848181D625F002C84FDCE0C0D9509A901A29EAE8E075C94163254D
5326245ACE938624B6CB92610B1794169AF2C8AB2536A447F39A3E9529034060
F76EF2FEA475AEC43903937E25E5C2E11B8754D3B2B88609E8816B17BC193039
B3AA271DCDB6F3E640ACD20983B1A188A0D352CA017191B363F99E42A2C30A36
B89E9FA44FFBF740B69F81A073749BD92300731D8BD5AA40B9524500833132FE
859D29A22A6CC15F4998B835A0B93EB9731A8E32560259CB241746E913B99D23
5365B51BB91BB31F7CD8462BDF509BEBFDD1207C6E42371E898D8D6FE65C9392
5D9ADBBAAEBEE06F0A0A36E584A86BF1BD10D2FB66C7E66D36F5A15B20077A78
B66DD734663ED2E5D54A3C67E34280C08495EF3198ADCBBDEFFFE0A19F4FB9E4
6B2A9DE768BB2A04C634D782434BE3E9D96DD5E71B9B5883616094D05338B926
45C49F5B790895B7191BE4013E016C53146BDF7112DCFE34DF426B5A07D8049D
5A17102D7DB84C82459151392BB7D2D3AF5BD01CB680CA4750694BFC7C071834
E20C0EF6540A82FB89B797E33917E401F02347B5CE65D99A38C4418DC5B9825B
F40778BA6A3B9045E1F2FC3FF4B1CABB08806D9BE9CC7CC4A1CDD901074A7F27
C59170BBEE101A6BB71B3C3FE0F42DD76D4CABA2909881D871C6B84CD8468B69
228C1C229D5B4BEB894DAC343737B9E9E6D04043909C135200D249CA0472980E
67CA361211495F425B02E9D3A8757BDEA4E71E716ADB0CEE0E95DEC08A13061D
24AD69B4355D35A799B58F047E1887DD6009C90FDBD2876F3EBF56A72088658E
5AE6F63445CBEA800EACA18CD14FD71402EB35028B31B84090A2C9F4D3AB4095
0DE8F214DB1ABF8B7CEB9381B8F8D46486C6108D40C19312CEBEDA54E25487EF
37BDEF71F3CBC48EF1AC9B45C0CB2E56263797ECF5A52E88B2246C1843A27A9F
0845EA1FB2D13573DC8F7B8C17AA8BB4EEDE885827CA26DEFD56279C687C7C22
4643720D3A7EE90502081339CDBD43F41F39952DB0C2F3F8DE2AC0C6AAF67D71
0ED2AE60282D97FF314F27F38B70C87E5D562CB918B0DC5CAA1FDAE208491329
6F4A3AE55C041E338B9C127E4B1E0B5AA0AC40A980C7C9DB23E160159D52D286
06969DF8AB547B3BC68CA891264E308B71B7D3DB7BA7F63B5BB0705A055BFB4F
FE29397D8ADF21B501959BF7AAD4E6F7706C03BEDD767E6CE01A7308B40135AA
F261F9896B2790CB1474F35AD451C122C0C55BCDB22E1F984B7221176BE295AF
7F8A7A7DC7D39682CE223D36D905BA665CDE09062DC1A5CC0B61F124571E00E8
65016ED8B7510097FA31399D88AC1C36D2FAB00E4452C03090E36EDF4ECC829C
AF55E46F84B2E3960DAB18D604CC0EF2EDAFEF5C81AF3DF3C8C65321DD0ADE2D
4AFED05A47B215883CE4D85FEE540C9AEA4BACD0CCAA0160F1AE3073D0A99767
C8091EF1C0443EDB7D619D84375B74D5B7B11A47CE2EE8505578BEA826E96D9F
4F6393D8B65AC24E6A05255647EB850426BBF0E79FD4CBE333FBCFADE275EDBF
E0CE12B86E11A2F422D5F6957C2FDD24CB36B40048CAEA999DEA79F9758DA5AD
5CB45781F9636B8C153F0EF062F7495F9D9DA1ADBFC6D3321C58B26D2A03EAB9
51FFD58E4935051A619C47961F8106A1C33CB42EB0ECB4FE7B4C41EA1754A222
802E54162EED974283EBE6AE805C97890743B0B8F87ED5B96D62C1858C899168
D0E6F9ED5242BBCD56AE97B10E7697D41ED3A847160EB87FE3614C5414E57B04
A669DAE36B3010FDC551ACB5FB6F4462FDEEAB2599B01909EE55639B94877DC8
734181777CAB9BF9C20DE216B332442A54B6AEF078F1DC0A88704723A9A49A55
8ED192D052BFA0F99922FB399A4E977EFEED4CC3FE915E206DC0006BF19D8EF0
CFA47B7E901938CD789B2CB27EF9CC649834D787D56DAD4D58BF616503DEB0F4
3558C799C5F48B975B89DB0BFDDAD14287110FC81A5CBFD0344A398BDCE559D3
342D945FD3FD8DB012D08B4F134EB3D953FEF3F84D75975DF04A371B8BE52C13
7A8AF44E2EE4DF2C12FEFED6FEFDA8F593B475FCC119196478E0411D2F84078D
169EE4CC5C411A0F6868935546163F0D95C371AA67319B6262F32C89826E5EDD
3B95D9C95BCE1483052A0A4BB1B7408A2061914D1A646A3D06624640D3B0A171
2B6862AB7675BF17FB58DA0525DA48B39AD632271199853F5FC7B85C89BAE313
08D380F1EFAE206818C7BCC1532ED2D6C072CB6EC6A7924FCE4E3B9815B8D3B7
7A596FE3C36F5646D347BE048488706535E4CEE8B7A7AF5AAA1B1E22C2614EFC
317D9DF6CF2BCCDD68DEAF24CE13EC8671211B2FD6DC2F7220D4DE83698E676B
03B30609AAD4BAB5D05607BA7DBF4E63DBFD9635B2183C82466910EEC2A2BF84
375A5B8302EC7F5D9D95BAE40430C7A17A9C5C5673B8870A488995AF9C835FF3
20C47FCB83408D70DD8C5737C37C1C12562304C4A18A407BC99A25AE5009940D
60B68C7C72E6561998F8DDBD4376E5D24245A38BED4FAEB626F3215D2958A284
AFA22FC46B3883938BB1554C404639F1EA6386DAEA19A187F188EAD26407402E
9645A501287A1230186C1DEE5D73CE412523EC60880FC421088D56F247AA68F9
204F335AEF967585E6A22648D8CEFB68D5A2FCF2E420A4E8C8C33D8120EE9245
779D720877AA4578761465CC4776A6E23869591F1D6511AA5594BAFB29F04614
DDA706DB211FE52D83B627145EA7EF36982B7B6E4CB4255F6219A96D071E6A47
8075E259E86546B9AAF187B985E0705E38E75618BCA30996874FD118F0483AC7
BB931494D07E54E4637E7C286249A0B6EB6D66CE90D66F73D2F7FFF65EED1F71
404AE80C589C79ED8930C2051E760943C7D7DB86ED622EF19069AAC5E4FB941D
2BD6B32B6A3727A8AE10C28EE5CE882798084F6F41750699BC2902CF9310069C
8E1597CBD98AA8A163CFEC2CE14EB1A1A27141F28B353C8AA87466BB5C0B20BE
7E3CBAB4858A8F8FE58CADB350E8DF2EE564B9157CA6960BE1F85186394E0A12
D3C29958966B6E920FA0D6BB6144AE886420A41628BC567F9A346481718FE0C9
DB925F8E9B02070F155FA393C7F4CBBF8A7D8CE337C7202EF9B3F085828B4C1B
5BDD57983EAF058CF06EE121A7675E8F0AE43962FC14A3E498EF318F55957B10
60C966DA3E64AA52E3B043C69974C847113B09C57DEA2BD2F609BAC5725EFB60
A0B46592AE731096DCC19988D82C722070327FE0080C2F6E3E78B0F92809B287
FD559DE76210B93F60CAB52CDFB1749EBBA968096F1F47F1A85B488F7D5D4CF6
3A68430565703923B20AA27C85C5FD91B4F417CA9B1F2E36F2EB01AB06A5C073
23B55F840A1E7673EA58F190043BB54BE5514A69BFE3BF07DC22660A7FD15BD9
C2FC037D536E519182E28743825823F6A8236C5E093B735437323525054A3840
BEF57E30F730DF83CB017D091F21FF313C636C0115BCE7B2A5437B0749170D29
45846D51AA0AD0B9319AA1A94C3E24F32B0E4E362A41F29F80E00C0F4D344C55
4209CF14C64233DA7E3F61477095D537A796741EFB75E53EB49B0AC20CC543F3
B8E7EF44C3BB72D146BA8BDA1AC294C8AA458C3DAD1EE47B0C6134D130D4AB33
F64C30C5A95D86E6609FFF41E198C5882ED58BE707FD277A265345EA604C3B8E
664792578A1C9B8F56EA12F6DB87D45D7133E72A58E0FE79C07C7ED4CF091A6E
8D7EABA87EE747733F75CF9D56A5302F74E991B6431E34152899A64AD5B57AD3
045B1D3C1A653D9AEB2B491FF847669EC26A00528495C382E17641AD7F4A2230
EA39D15855917918D731C0127D5465D200A6C1051FF7305CCBCBEE6498B2382F
1AF6663002D84396CF3A8E8C84ED30885ED2BA0DAD33B3C4BBFE15B913A83809
DADFF4907C425B98496F7C7C1E474D48E58E0D1104F261B9D9308ACACF745433
DA63181543D68200B18B6D3BBF431217D2EA7D143DCC7EE93FC09C6408CCB7C8
F2AEF4DD99DD79D8389B53DCC6B1F182556DE91614CCC4AB6295349A00D02F1A
BC8833FF7033A588A77E89D752A58E1D271FF6EE621B77F5441CDB0906809440
D2631E0F71EF0386A643B9036A6684F0EE91BB163CFD1EE42841B2BF6B99523D
FFC5E4EDDD6FB7648FA5E8BDA6B276A5BA5C9AD2EF62FC194C190E6C42C712FE
4BBBB398FF3B91A2AF7515618AEC56D5BB525DB74FE36BCAA1ECABB9724E973A
64D0A7E85831C494156F84B77C8EBFC881A6E89192772F9D266A48FE505C189C
065B95254CA358D5B5913E1528E90B34C83623F9E159D652111D4EBDF7E0C878
41CC9958B154E3F439FA2662EE346F698186DF6558A577564D701157CAAEEBCC
A69CB23E3EDE41D7B4AC39526B89BCD30813F121F7B9E3931DA4E527ED4B217D
FB9A070D3419710D61352036CF6EB61AEAC0055420B08DFDE19F6A91CF52A33F
F44BDF6284C1280A05B1E4D84C1C31136B477450DAC59E47DE705EFF58779E69
E577D9BBFF1174981F88906F7EC8FBD5891653D2DBEED47DA4DF2EC6BDF08EFE
F9B306E2010364840A93CD5FB68E738F6DC8DF39C4E969E8BAEDE16F206873FB
7B9C521709D1D59E6D5436660D5056FFD4102E112900203797B1BB9DFCB57C5F
991B50BD86699C06D5F14F854CEB69CFE870331D5B1A4018C5B1D1E6F80934F2
25F840CABA67C1D2969041B103BF60C2FD9C5DEB0BA61764AEE839C973BDD3B3
DEF8060D7DA50802145E00AF29A5213CDDEF22E1DE92C01C0B4F57C71D65F0AC
4EBF2F99A472956B379CE511DCA3517E8687B2AB183A52F3375B3E306C33EF65
22555056CC0F680A66A8146AB8FA3E741DDB30D4BE9876488AFA9D846590C46B
B614AE3C72C7846B5E158A504B31CC049C5A0DF42EB1166D91B00C285146170A
54E59A4347F5DE7D508B5D2E4B9D042B2A49001DA45CF8A86C92D88C731548AD
0BA2A4A8D7C0E1A50428F390A9E7BC90B9F6C793E55F2B423B99B07C8DDB7BB4
94ABA32D71AFF3C028D5DD9E8B217E936D4A9039107F8E39D130F15FECC354CE
0EC019227C28601320D89619CBB7D41ED979314ADC58556D47D9FACF4699F4FC
6B3FFE84E13DC5D77E4E88DFCF78074F5379A0716AED4A6C6780715C5E152957
FD1F94EFED513D3802CC7434A5CA181F14238FB896D5153A2FA1454D6FF2B35B
0031AFDEFDE65E02A88C26263D938D43444405F96C229A706DCFCDB7E13FC04A
1A6DDC36E4FF07A705D413BE794175328EFDB999923FBA260BF7120B5FBC66E2
E3573DB6FB5CFF59992FFE32CA81A204E34B0E2798FA749A7912EC54861C796F
F7270575C6C15CA38FA9F717F9D0612D479F012D4C70BDDE307595E900B6C146
7DEE92F791A053919AD4C378035D381C5841D0B5653373DF45656C5B9256CF53
8719621A5C5E9822E8CDA2D34A2AC26D8F09F7658763641336AE17AD69422ED0
8538DB3D73584B25D6FDDD4599B64D7AC036C0571DCC990C60FBA08F662EC71C
1C08A2714730E2DADE5CA80F9099AB9D5A7CE16D8CA9CD459BBC76D60B17186F
2927124AF871F01022D80008454099144B935F17F4FDB573A92CA29F968D3585
E6C2D3FA95BF8D915F9527DC7B8E6F61A8109F89969CC25EA7A63059751F13D3
676C5FFA550C89C466EEDBCFFA56600C60CCDAC7CC76448D1C3738994C150997
CE8E7D63282D97FFC312E8871AF5587786FB95B04D273EB9E4CEADD1ABED0C0F
6BF6DEFA35AC380B41079083CB8EE2EBF77506EAFDAE7D8522A5EE6D6E26B388
D5DE781E47B8E2AEA91CCD93A6EAC75F7E6982A3C4D81AAA31A9C60ED3C0A337
DA3140F57CCA586970E048F92986F5141213A7518FA7668CD5A95DDF1AE09BB7
70425A460311FC7BE6B59373586CA15BCFD8D4D3130BB9BC156B0C58E975ED94
2B90C55E594CF8195422A5F38F6D6C005EACE2A415C691C0AFE53259A59D1A8A
D7A499EE5A1CAFD40FBA8779FDE1B0ED350E58ECA8C11FF75A63950D1B9DB8A6
631974ABA413D04B0DF29095C409B980D358DBA51227EA065FC4E335E3704AD9
5E94271C4496607F3463BEA10EBC03138A142B491DB2565E849B91F91228BE2D
67D5CB0D8872411DD48291C432964347D332A7D8762978D068E3BA5A5AEDC2E6
BE6AF459607FB35F4CBD9F35193BEA99852BEC1A10DE7101F1C68576FB4154A0
5918FA239B603CA9EAFFEE039CDB84E97754DA8EDE2058E48BD0DD2A17B7A947
BCB0833D17805B28F070BB63950EC9D4700A17EF7665429A667391C0AD4D82A9
33AA00DEC37A7ACB0D80454F16B84ACCE6EC17846C3EBE62C485528620DCC921
B6F04433DB54F5C491DFA028C9F1CB6735D3C2DABD92E565C591DE2694A95B69
95E959F4D0FCCDC74D45A5DCBDE532C9857825C183D796BA656B5C8514C1B857
8337EDA90BBECB880FBDB0F2DAC9B6E740B77393BCD34AB433CE0A78370CCB23
4E1A25E42512E4336F153BBC207581346B2254CFE2AE6F4E4B0F73799F1178CC
62530769A9D2ACD58AA7A9FA98FDDC266C60883F7589AA6ED1E9B1DDFFD43D7D
DB29E7C5B5B7DF7107BE1079CD757914AB4182DB5579BC2D060177A2C96B9E0C
969945A795E6FD08B08DD8D648D7FD4B50CAAC50D16AD58A450EDB98C6B139B1
DCD3186EBBB899F1F5DB9C77592096E0BBB175BEAFB3B2A87CE0888C5B5F4F89
00989EF94E70938B53BDE51EACA61FD0C95CEFCFD005B73D560BA5DE456402C4
3F7A146F1A986481E2EFB49A39A37C854E588C48F633B55887EDBA38F27F3902
266FDBF0B0F2FAB8F240657C879A76AEF6FF30817CED924CE99D4C9A40027DCA
8391B7CACBEDE740C7BE697EF2FED5681C301740365BC509795A1C1722B7B6D6
5A2C00DC26ACCEACAB7B4C2EFEE8EBDEE2FC6E0ACAB86525654BD88BF07522E2
869B1F1BBFC91B4A7D49D905DE5E8981CD3C8EA07036BF0854E98FEA59D2CF36
C8D58584C7277B59641E05701122547AE28F838F7A02CE329CECD7397255CE58
ECF7EEABCA67C15210925C6B2D904E0CE4540846E1C02393818C55BE8F630238
4FB0FA6D8ACCF7F6EF8EB42B802E6C6AA9CA6D32B3C2EFCC089B279418AB048A
3BF753F949B01BB3F2DF480839356F3B263FE5F2467A684969A05E4A744EE705
3030F9269CE8B910088F7E4A796D51945ED3BAE09F20CAE232CA7050834A2049
00EDFEB02E4A387FC0AE5A72B7C58C4BBB9A05611A3381F98D935972D2211748
7FD279B9FBA1680B3469DC580AEA498731A3B2A834F12A0F87FB54811354EFE9
E9DA8AA3C1150AD437F6B4F0ADBC50162A97F72A2A5B44EF0A2A23A681FA1DCC
F33334148753248ECE9DC52B5CFA7FC91C53D1191E9B0B1914CB0F10C289190E
67351DA5D35C9E74C3B1227DCEA922170369FCBE0ACA2A620CF01A1A19B47C6C
26F36356523960C47A47472C7C4A7BBD0B5629EDC88BADE4CCD164F8C23F7C72
6CE82D913EE501D98AD383E6A69DB41785B13880BAEAEF24FFAACD6BA95A7869
33FFC277B177D87E14ACD0BBF59C9EF16ADEFBF325386F9F254B420F161C6C80
8E717675F13B34CCB0B58D85D0E8271D8D67ABDBBB41B5AD8B1E700CE98437B5
150D11A748EACAC5C52E48F1828F7F66755EE522C65E75C42640C0533C4A72D0
CC182244C5537680DA24BFD698CC90DC93CC7284FA92CA88BF8B6D6C0E738FBC
F36BD7B45539BEF5C630EB94DB8332494576D418F2C9E1BDE692CA7EED5EA6EF
44F76FBCB8DF0DF22F5169EB88CA5DB7A1DA04252CA3152A62F018113B7EA258
44D2DD91797E7F7EA509FB6DAC99979E31D15CEE0194813B1D7CF162C1981A0A
07C0BE5D51B63D50F399C9787C753EEE5EA3A4CFC2DE179B09FEBC6C22B1F16C
A1B1D7657FA35CA60352B93876FA869AD469E8EE172CB0FD29D8CF85A16E9042
0292B90FE44AC8B2EA7B3AA9FC0F3C23CB7840CE91DB9644F1A642FA774D563E
F580D22A16A58CE93A7FCCDB82659B219EE821BBC9CE6FBE1787DA0619011353
5A7E781E3AACB1DDB851845EE0C6A3CB29A75C4E2579D3F41038C4EB88CF157D
40D8198EC07E9EA9AEE155CFEB16575DEFE66D87520F482BE27AB28553711579
7DF5490132438BC104FBE103C99A7BD6B69275CD747D65074E61199CBE7830AC
0E9C716C88365F6D724E078470B429C54540825FA21BABF1BC1A82F05E1B7C54
6A4C9DD6C8907F4E547E45F909AF3A4373590DF80A1F0B94910BB764F03A2348
B2E5C3346E789B30A0CF91639AD8D717C5095BB0DD7EB552E21FB8DF2C516EE5
2FD59C07503E7F8E3850379667DCD25FC504EA99136EA8F08352A1085E080A34
5B6A6294B2A2F7B63474504198BE24E1D4F282CFB23A9A758F320FB2C5C7BC1F
67867DA53232B96CBFF5ABABA08B300D96CFD0986F05DF471AD47C89B6073EA4
3EFE2CBB0CBAB167352A77A9F81BEB083139D011186726CC90B340461DFEC02A
6EA28FD68693D88CE44DCCC64C1C64D0F3E1AF5343A86EC06230AB30D1E60C93
50EF65925104EBAF4B4DCE620346955649F466E8D65365C072607AE112A6720A
05C69F92E7E68473528F58DC753A12FD7CD5F660858BA6A9869206A20813FEB0
5FCB782E9725C7C7B92CC3E00A3818DB1B8EC53B35C5AB39A70D5113EFC1D278
4437C80F51713B57DF2DE0AADA2E97A65EE876DA470AE8D86D1A5F0AA60F8BEA
8C67100121668E093DE1D7E35AD11BC1028FF87779484DBAAB85C4852C23AA78
9B7B56DD4947B2E17AF639C55D0037F5C11026EAE094EA3F8E8DCCABE5F4897C
55D622BFDF6043CA1E96732DE1A4E3D56D978DD50B62DCDD1E9032D58CAB5EDC
DA8356E341491442143EF553F81564D5A434A0C667E8A3BC5173947341A91A2C
74C26024067E23DAD7CF3D2F83BA3D888B1E3B02545171C466BC9D1C66DDC4FB
4DCEFBF7CFB3BB7D64396BA5435A01B7054FF1162E851873FABCC88B22C95B00
7D4D8CF1A9960E0E9B5F26B8A435266A38FBA9B591E5C4823CF0B8C02FA94E0B
CD1B964E14E1EE2CE4789BA84CC9CF49B16E295E6AEE44DB16B5636338EE99A5
FEA6098E0A23E27C27D30EBB41E41CF77B641DA6F1E9FAE0FE559DEEB4373698
B71992213B6F2DFA632387702CB70AF2AA02BD1213773FF07750890BD0B10862
BC1FD59EE831DA04B9B7CFEB3911F3520355A996B2464F79F789202C73FC8FB3
88FD0F054662D8BBB2CB260C5CA80E30DF5771CE87337DDB17A3606CEA20EAAE
E1179EB638588454B5554E759701D8CE743458B681A4D93440276B7FE04702F4
93042148F4B6E189CFE88E35A513C5CB4204E8F7F3A93C22E4F105E19C65B23E
3F721FB51D1F897A0CB992FA8C45DCE721B3978DE9066E68E5599441F4702C39
6E25A1CFADB89A21601BF825363AAE44719F51697D796C60E131A95B45607866
12C27F7A5712CAB4F77572086FED832DC0A6D677079DF2E52A24D46A510DCA3F
E20945D920B3382CC766A2D55FAF77A38CAAA365E79CC2D5CDC4851B82845D02
4FD0ADB9D7E0448C89FAD04DF25EC272F1DC9D8522C9DD6A164CCD6FD49996AF
813914B8753464CA1C12BBDE0BA2A1699BFE5A9D97634A59A2BF4D2700FE6161
3D9383A9549C855E7C7F83476112318B3104D9D1EE46BF6B8856C32FF667C39F
391EF79F599168E3283E62604AF2F2432590A2CBD3C01F399528913FE34B9135
B0C037B2CC03137B7F13CBA142063994C2F2729E38B1176686A8290FB17EB1E5
211A8F2FF6757D0EAED56337C9BE321A9CFEDC1E9DB22EA9E230AECAE5832EA8
EB4CD976C037676DBB7998F8875134C005FCDA34BD814C081EB7ECAAEAA7E6D3
F7F1BAD6799C94BECBF5F384200AA8A8751EBB5DA14240403E815155BE647276
BFB52914CE4824B155156AE7ADD3A6349C65132ED3A5E1089BA0DDBB19FB882A
DDF2722515B47744719ECD371221EBAE8DDFC277D4F125975D6960F307A2CB4B
1500E45E4D54AFDBCD9F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 6 /plusminus put
dup 25 /approxequal put
dup 33 /arrowright put
dup 41 /arrowdblright put
dup 44 /arrowdblboth put
dup 107 /bardbl put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
A5287CC3ECE49060639A27A413F7938F178B830E61C8E9815DCF7FD17B9EFFDF
4910FB9750AE63D3DA287CD54C3CF65AC53D6FF880895C8936833C52C51CDA88
041DB1AA2E2F4FD36399DD44542E971989B47A1C903440C3DEB5BE5A1F4B8EEE
40331B82F1B336818A818FD48048F9DC9115840EAAF68D934913C792816130FD
6B42547120FE53727F10A91406FE885258B8E8348CA08B2B95D144EA2BBA42C5
512F569C50F827B780586B0142688866FBC9B7574477EEB7636465C97EEA12A7
DACB6052D40DF669D1828E1AF140DDCA05BFCB798ACF8CAB878C63E531966FE4
CA6C393160A0DDAB87DBBE3833A851AA74117373FB3D6DF48B88D14A87F9B788
A31302784766C9B8DF9DE717ADFAF12415C1BFC0988B570361F20E8827A1E4A4
0C27775D2C12B770B6466ABD71F05955C6CC5BA4663073FC15EE741C50D0E5B4
E8F16AB4A1F5D131BA6E79EBE043EA200D965607823CFE8E07E9DA59F307D384
5D4C9794D6F23B3B5AA6DD5A387DD09F60ADAF85418525FB1478E71EE2927296
ED4B06A3DF145477C5B5E43108580119E6E13A1032263BE758C3DBFFFA23B5B7
DDFC4CBDB875A41FA8BFA39688BB222A81A1CC5581870B6DD1555B0A920DAF83
57420A19BA730BB03E7052558D437A5A9EFC1C33C2AA321102E9FC33038499D6
E5C294946C95FB82BF2816B54E439F68AE127CF7CE6F3CFC9422ADE04E1A2D93
44F8D8E4C99D0333E0A7788806520D1CF7EDD146FC34B8C601E3FF9031B4DB95
03304AA85DFECBF920E0CB7496CECCBA2BC15FF879ED3B2CDA73B5148FA710CF
C1B6A7847EB4A50AE0BCB4964C3C94D1C88CEB25AFAA9C2F60FC882298EE4FD1
7775784E85606FCCF04572AD4C85300669E5D036E4B43607E9F775B710119768
A16131C2ED712B8841E6B03E9F4C5EB4565DAEBCD6774734727EF8BF845214DA
CD7697AF8B621AE26DC6FD0C658EC54426BAD5B705C1A4269D75F3A76359A21C
CEADB296E9362BEF1BF4CB9E2C9DAF53446E3A93754861B6F022F08F4B68FEE8
5CAA6D8F737A1BE55515C1EB675D7CFCF3BD0FE57945B7A88AA74001391D83BD
E003FADDC56FCEEE3F2B122FA9828E503D2F57A9372102BED28BE773871A5FB6
E17F03E1AE68E4547DCAEDBE34FA6E1105B73542A70231A12A9D55D4C44C1365
025AA0829FE9F0D71B13256C5A92758B929309181EB9D5CDE82DDCECB722297A
1F18F6D156A2CC40724ACAFF8A206240BEC5701BA986754608578F122D585C29
8C387888A78BD171AB187C40C5E64FA4011DA1EB941AEEEFC7F39C3773D2962B
BB6253CCDCDD50C55A2A272E87AC43F3061C2EE746DD859A0A3496802BDD6C36
925C802BFEF566834DBF614A13D670904F1ED5F02ADE2C36CE1A8CD754CB735E
5301292217510E757F30908E7BA833276F8C12B2CEE364B42E9EBF7D137F5969
494EB3C30B717D0D0D210D71AA1981162D7B0B6D2619F89DD1504DF45835C783
DD9D765EA25096EE367E349E02EB311051B6E56377263FD278C76189A1574A1D
887B6AD5E26F62209FA03BAD83C7CC86A4F8141542E28698DD9C482A954452DB
972A68844994E172E6CE1373198F3ADDA0AC9F81411CC1D3720B9E628650FFB0
97B570BA143E1E2F5A66F09895C35180E7348D38B492D264AE37F458D5C3BAD2
ACAD53F182276DAF1C7D94555961414D80FD5C6C7ECF75E6B67B7C1E9079849B
9F884C69442BE6D0EF2B5278C74BB55843ECF0C740CFF2E55AFABDC756703363
7C6EA94D799531333204932117648D8223E50F13B39DB7E82C86F84070AEA671
D63EA03FC7132257E94020238A82A18F91540BA47891593DA3F541F463B1BB85
19E32A6E64D0B76D106845CC96688A348382CCBA5CEC2D79CBE2FEF8980AD7BB
8F9E52AAA9F24397240BF83B66DDF652F4B3EA3ABB71A4B0197D4F9D37
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/UniqueID 5000789 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CA3775C382F911F6DF3D26A9F9F39C6A49A61FB0FDFD443ADEB01F74
1254040BC520FE9C85FDDA97E17CACFC50567685832441CB9DD7C669DE20FF82
3A1025F65C68315B52216E025ECB8F7A8E1F5D12B5513728F631CBB92CC62FB8
27946E02B0BD78E564F8460E98E22DBCB974C17BFA05A5AD372EA02DC1FE9DFC
CDFCFF96016D10D4435DC64C9A852EEAE74CBC957262D3CBD3C2C1870C0C2592
4F81B30CF2B650B8A54A6E333B1E18AC40775788297DA5C34870EB552386C6B7
FED8A88A70B37F7B2C6D2A80A13B11E2F3CC01FC32398E5D4201AF79110AB589
6808F4560389C87B11772C98C555FA76D2C08CC1056F38C8EE4F4A8E08B05DD3
AB729E4AFD6478FC7C0175D6CAFEC54087BF69E44029B5E620DE857F333DCC89
C978DDC1F562D9F6AB8EE8BF7716B355DCF06756994A7C865C592D0AE1962C8C
C641B1965BB22D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF7554B0EFE63453745582F9AA32CD5AA939031EE54F8B3DCDF3F22764A2BDA
0F6C1B24C24D386507EA0A0F893D86EA4957593B1EEC56F0BC4307C6A4AA4B99
8B51C1860703100A1DDBCED18D96E7862F1A39AA382ECC9D344D5EBE14B8BCEE
2DBC9264AB4A2C6A4423F3843EA76533CC65A0BBEEB2960FA9B1DBF258621405
F4E9B66EA5137FDA7A0EA7E138DCBF56693B92770757D57064B8E99478A43BA6
C4FA7EF14F85A9D8C5F46EDA403EE74527AD7BEA43D61B07B8F3719AACD12880
742CCDA1D293E4064B4EF966C73149D681E56B90722757952865921309E58669
A8395480ED13EC4A6275BA1BF2B79773C930F581A971446AB8F75B3471466BBB
9230378F7F91FCD6B0B5178DDE9B198CBF1E593CEAEC42B21C0C1DD432FB5237
A3CF1A1F00FC074E7C20A5CC45490A5B36BED7A40BA5F85B271B998FC48202F5
080714EB9B93F92792AFE2A84C0AA48FBD0278A4D74F27BB442049688F869EC9
857828164941FB9BD3AB1D81D8FC0D33F707F7A2A38EACB4843AC27F872B2BEF
060E4E293843999234D30DE15898D11AB50EC284BD623E7FDB39FCD8013CF883
E91A54F67FF665C98077E9D7EA2D6F03DF2B0D5EF0798515DD9C040C86C78EB7
76E0DE2B9FA70D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 100 /d put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DCCD4528C76F40A7D8EA25719D6355B6DB1CBC54708B0B4101EB2C417E
E7AF00BC8DA24BDD1904114AE15540121B7F4A524C06883EB7AA70C37462134C
771496E2A23B35055BB0F828F1972DB8FDDE7806A36E0E02AD01E4D718D79A82
70327A2956C2781FAD9575DDF1E6958880F1E8CFA1ACA5A8BE9663BEF1DF1381
3E1A1DC1004F335A34A9A641484B29FDF1527D4DAF025B0FB1849B1D47869321
EC389F13EA4F86EDB1EB6F46F865674F0F00A3BBC87D18AE4E402E6780867455
15A91E322699BFDEDB361A2E035446B279072C5E4B4B16D70C6239214A0D190F
9501676BD412CE488BA5C63B9286699F42AB768CBD97AAB161F79AECB4B81FDC
9F7F3F63BCB4879802FED52941462F048BC8B0780DBBCBC1C080B03599790B1C
6B8DD480312E65FCBC16E177008B80D4B0089468E256EF78BC38F190A6090C99
7E87B966244A1662294B30F15695D26DE22723C5D7BDFB28B3CFC86DFD631B5F
3F16FC2C0804A01C0C6728A681077CF2381A5BA4D398FAF79CCE2E1D5F6F0D4C
6B4B1767D26C02A7CECA6A7CF66459C80636D4CFE346E3593DB82F7E48433C8F
1E678C22E824332AED11866DEE502A69B9655D8ADFE38948E499A94DD6B2AFA3
F8D47CBC9249C794CA76AF650FA73836F4F70EC50F88DDB50CF611DFA26F0DD8
E247688504FC901F91AB3A972D1FC78901A80E76C835A6A84C50C5AAAB3EEBD4
53A3CEC6754E3FA6A65F47AC40E86DA3C2E9AA89FD37553761EA0E68ED23BBBA
C614A0CCE1442705FAA6B5A26FB30FC1CDB72EE2E162FC402CE32FB280640F6F
25361DCAE5CF6783F68F745ACA21A9541DCFD385378410E3A2DF5988F088C35C
132C5E59B96AE190912DAC612F726960287A5ABA3A3F76F73B586A64FA8BC52D
007386A921A8E60A46455E7D4EA9289ED6A37DA6EAC041D26E49DFD42CB12F28
A4E41F43DAD61C322ADA0AB5046CAC7E5D7A48DA947F2165B46904DEE129C25A
A4048C6C6B4D21780172C2E0E0F7CA8CE4AD4395AD827BFD1A70B3680E18048D
C4C955FC4ECC457924F53A626283B474D3DCC45885CF0932F5327685493E2151
BFA2A70C79ACDC267C31C0C1B5F13245FA1A1F092689E64A92B3AB194DA6FAA4
6E9476AF64CD03495EF49977B87CE3ACC8E946F84ED6C5159DD98FB16D01FB2D
59B861D16F560C1081EF6CCB61B10FF66B91B494E9CDF0C62F2C33B0703BEA0C
8FAB7E266F0A1529728AE5CEF32A4D8CD2E5F0484076EEB9955D919F98C9673C
B68EE5C36D43184053823589829B2712870ABF483AD054F4ABC52672332F22F2
D678544474FEB3B546A670299D1041E99F2D426A73BD08BC77DD2443EF54B36F
492662DBB9405AF5CE1BA072D087AD82842977872C7292067FC00116A1DE23D0
E3B3A8965E424F9F84E34ABD756BF2313393787B7B426DC219967786C13A25B0
316FCB62C1ACE24BCDDB332AB2C0EEB06C6B1817ABAE7CB58AAE879956E022AF
D019B3267ACD57C64FDBC00A1B238530CA33CF909BD6C86B0B00138FDE343AC0
C50913111644EE1C8444FE4488A3D734088EAEE7FB560235B482A674033DACF4
2BF0AC2C90B77C2021D541A04249DA7F06FDAD306D4C5CFEF4F2E9ADE14A919F
02027127044819A5F8BB070DAA6199DD6A283D6C6140C98ABD5D1606900A1908
8DB115CFF7EC2420C8F7852EFF69AA0565D994EA3ABDC4986A8EC632734191D3
CC5DDABFA769F25B2EB47E7E6C10FE4DAFCD80F0F4E9B07F438A29FB1EF1E8DD
DDB6D6360B7F390DB7D39082A39A552BE41D97C68589FF2196A8507780948197
4F4357F9C8F859B527B86AF3AA685A4554849CF1D4D5527ED82B2C56108678A7
79B853790D82EE06D86465434FEA2F0BD977A0CA890F41B81C00E09F1B443F8C
4A002A0CDD6EE8F9DBC207EDEAA7E177D2A2B51C7852792558BD79911717EE7D
A2119741676B804D8D33A1980137143668F3B42F5F64E4561A101C95B8A78EA2
BD23F9BBCDFFF9FDEBDA6A268795434F949B17914141D089B79F3863B532EF65
F36AFA373D43CC9D01ECD4E8031C937E8DD45CC07839DE56B5362C62FE0E1F7E
0E722873236593CBC9423D966DEDEA260A85CECE92318F9DFE72849F99F23337
A56F4E7A98C5B704A529B71ABA447855721A5BEC820D5D5488B5BD21EFF569B6
6E518E16B52445B09032200373DE440F03EF9201666A52B2F3475294C803D6CB
5ACB2DE374D4C90499BA4DFD46D289F4F684679738ADCEFA0B3A993B793810E0
BC68573ED2A0417B15F99EBE43922588128DBA4CD801B0B3E74E5E6C749F7289
543CB8DE8B5BF3F83A2CCD1AB29601AFF0DA60C95DAF4CE72019ADC2E31F2AC8
EF5D8FC99A99D9067CE72380FFBFC23C3633EB7C1E9383C4870C3067E2E5B660
B4AFD8A5DB2BB632965A307D2FF6C8A13E7C515E38
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 10 /Omega put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 100 /d put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
ED29D73AA0FAB50834FC3DADB6FC2A9F556DBD5F54C609517F454C4899838327
D74189A6372F447F46FE7BC050836F684C3BB8CF10786443005F7922728211B0
CCB196A461E4B62C25389A4A428994DB6BAC426DD30F9F772DFF8130679AC356
F55822EEFE030D080291D452ACEDC5D0ED19E523000D2B35448E633FB64A757C
C8EC0638C8AB8932CBFDFB9FB8409D4B280567E8D5B9EA8E8AF21A352BEEFD6F
0F1E29DF2C698AB39B218ECC7BB9128F40DFF15853528C37F6022D698727E7A3
2DCA0C8637972318DB9C851ADEA52E64DE64132CC1F25A0DB6F5B8895EB758A3
ED81F506337B1557E44C36771D1B98B28A28F72651DB44BC63C5E50C9DEED687
E06F23A0D0EE40E4730E8575200F70D3AE26F23322B5F5B1AD9F6564730081EC
25AF5765919460760E84DEFC0D831B51A49A5457C0CC70B58A5018F201304D04
37CFC4AA04AEBD8962186FAABF1E2593031D084359B02ECE352DE3769A9CBDDE
C9665BBFC81DDBFBBABB1654FAA5CAEA8EA2C6778463735B05E0FA606348288C
B8E6058FBF1659C255392A89742025378CF853F6A8188534F1F610D7A7A77C41
5D05122439FC3BDD16A69CE127600DA42948F1F3BB2DB772E57DEBE00CE4F996
47DD327677A384D23915B6F54E3B94ED9209A41A96447D4E5E1A15910769678F
C5D929DEC57025F82CEEAFFFFEF2A17816E2266EACD9B591B91D2F2969F0B974
1DC34CCC255951E05DE00CDDA4763AAFF2692126B4FADF5B6CD7602AA4C8665A
3C51B5D5AE82278DE0CA3791B2460FB455222C04AA092C76817C62B6D9BD1D20
BD591EEE6098928404163ED36411731377EA13635F17865AD53AC83C6C934A64
BC79B61186AA832CA5F465799D0F91E4E7E8FCB04CCA03C9460F98EF83E71BFA
0BA8232A860860D6F51AB6DEC1CD3393BC03C6817BEA86B3B7FFD2698EC81520
AA7888E04BA91AFEE72540362C46200A07B81C8DB63DA76A213A88589F54603B
E41C2403159BADF8C69BC5EC02E54B533704F70E8A7B3A9571F342DE14D8E8CE
057882F9CC5D71C414D83387E9874EA7668C1011F74E2B563E0C72CDD85AACDE
841DEB3BAF449D87101441E28B0C5ED2FB08B2C1980FFDFE8EECB76E41761D28
A85105FFC71211EBB0E7F1EFD1503996543828AB9AFEE553D67A784A25BD8039
5456AA111A3B5E5DC9C517925F193AEDB1755A0341E270AFE002A57C19BB2582
71DB60ED30BD601E75C4BDFB284099314E3452D1C302C3A763F20707EC53E1CF
1147EB46C4B0C982457A8D441C4B83369B97A67D1F549B3BC0EEC8BBB19BF3D8
420733F90F7658A7998FA34AAD8C06D0AC1B35D1C39A0B35E589CC9180C36D4B
A468386E066F2C8957F1BCE83925BA1476C89AE255785CE38DAFAECA86BC078A
8F2D6DF1EB75DA30078DA5E0A6923FF60DE8BE00B95F68257D75A455702A3098
04BB3AB2C04EE468100FDD47CE6063D144CD5E66B795E69BB6708FD21A95EE37
6F71FDA5E29DF4C794DAB820933C03F3764AE444C7214FDB62895B6F3F23ECE5
7D52B6C8CB016201D84D88904AD23D3FFBF1AFBF1164062F545BE743C6E80A66
792AAD0D59824ED1A093D96C804F030B04DD5A915B631D0B097082E73509B70F
0C64694B73BFF037DA7AC5BD0F503D3ABE63C3D4530E353E5270D5FCCB0D910C
257742A9A1E5793B68A2228131D312A1E8A9F31A755A0BE1E13961ACDE29489B
5834F149E3587D92E62A0EBAE828FADD77BFC2ECDC1E562DAF56653DCF031914
54F3BA5CE1AE7C913A4018FD77C17145A17C0021B9D29C89BD121E69EDDEC575
B281609AB9069301D87997A1B6DE54F405706C2C4248C626E6424E2E938C0184
77D107652BD59E002C56B3DD423BECB9359BF24D2951ED1BC2195F11D414400F
81FE0DBD29C39ED7DAFE7AA2AAF8B31211F9F84B7C1C08FAE2584DA4DBBD11D9
ECAF2A50748D283FEE7FE3A07D3AAA37DBD29CB89F48CA3794406CB57F20E678
DF666EE58D4A1203DCA6D175980F5BA063D534C7B146FD3E42B20A9D6DB74B82
604E0C15EF74736E17066AB07DFE64E859A014650DD9C516FFEE68BCBEA7419E
E8E8797F58E41B65FC873FA6B0C2D90F2E3CD6E9838167644D0F63DCCFD3D9B0
BD93DC13B78CEE8C67EB46703D7C377A9E8BC11DCD1581C6595B073C64D1161E
1A1DDA61AC1800420466231A3E85E398E5E3C17FDFE5354C3DD6C02669F517D7
458EAA898572455534CD8DC6C144DDEC907CE0F426523EABE4F77143EBD6C7AB
31AA7E3F1CC44FC24152AFD8E79FBC36A016CF0C4B72093637EFBE8110087320
F134579D9E18D1E0A10A199DD06EC1056E4450D7206C6F7AE60C952F882E485E
9752BC30602EBDBB815DB91EBF9FD95CF5FE78FA7F99D201804F3E2303819DCF
37794E7186404EDA8B60687DB302E9AC30AE9059D7783B4EE6E81E1857A9788D
C34E3BF3792F818321B3EE726C661F4716514A13C7441651605B9CA5DB8F1C92
12688E315FA965E69AD0F1EC130930C2F342014382F21C586C96A0E2D41B3BDA
6A44150847D2F39D64EE9A217E66B06D6DA12F60EA605290CC0000476C0235F3
CD2DC5663B0BE5018CEEA86FBE5B2B3E46711774FEC1F7756738AA0D62613C59
5D1E9AA52AAD14BB82229977137D477FCC1C2B27F947178FA27C8B9483B4550C
5B62FABC56D7731B980EF3C793B89AD3612894309F1DD03BCCA7AD72305F06A9
87174DF0D9A5FD9C2FD58F91A8E6EB29CD4F50D01B09E2C1C32F54ABEE8B8330
64836FDE14047075A8E61E672A6496DA97D96749677DA1B293A32F6702E0FF3B
AFA6428355378CA104CC868DA312E8BBC82EED3C039908D0061602996C157007
D6B7A1FADD93BD3CC207D8623EB59F6B3FDF30240F0F256118B0867DA2ACFA39
F9F6EF1D81C607DDC24BBB11A128380FC7668DE35AD8FF7901A071501004DB50
A802B9B3F1F20A28658292009CC125AC401A0E06221E523BCB1AE8B9A31FAC39
8FB4643E2AA1E3A0E857199D99012E739E57A09B6024E280930FC9BE78BE57F4
B84AF763EECCA28D26DCDDEBA956D677C9E90FF936A64F79091E373D27C0B88A
B5F039A24FD0F3131508BA4751D30E41266E6EB98B56C4E16D6B611840C8D791
3EFAF442F2AF2286420A0770670AA0B84EE9E7E4504B0E2ADB99F2A0CD43BFB6
DE055DC28C1B3443FDFD512283643D9BA7BE0DF887B8D92AC4A43F1B298CFB0D
10ED1517489C3ED9E8A3E46D69E5D7862BFDCA95583A8FE6E189C6289E3D5392
707641742E10AC9B49ACFC71131694C405F36C8F710B467AB374276160C06696
BB9333FEA9280FC3B8AB50243705F53862292F0D0805FE95653F0CDB7F14E2BB
020E97F45B4653001AD3AB8647D6542B4C105CEB8D3FCE5FA7A5362412703273
E73FDFEA87377E1D820EF6E827F0C4D1745F00ED803A3FD46A36B27E373D7A0A
546D621BFB0C8FD8631DD86900E0ED39B923C380755DF6CF2602E92832F93C06
02922573FFD3CAF3BD2144E679DABB2D8304FB775A1468694BF5D19189E06D03
AA72F51E239C4E3A4D61638A7F89CCED26AC49955E51032DBA9FE12935E39171
7770ADDEBBAFBCC962AFD3BA973550A99DF8266F259F0D8621D11311C52038F0
CB25AB520A82DCC2664C5D157CD5622E964E8B9D41F086378C8A0DBC03DD0C69
511A5CAD36D32729D399F25BD17B666FE2FE00D587A7A47EA1B856C884DBE010
88F22897B5DE1FBBA091BA083C2F2872F162459C8FAE2EE2C99B682D81C1C351
308CAE60067B2C4449EAD5C61D72B14658CB23A6A2A48D0F8F35795859A78B2E
3EB3511BAF59825815BFC0686F359F79F606C2DF85DB55D059DAB871CD1A997B
F22252A6FCA1AD3732B4D7057163097E589E29323BACEBAF62BD5F02D98702DF
38E9F977665F1A2E63A2491ACA8C2038FF37E7CAFC664B58343AB5DA8659465C
36EC555ACF54215BBB5B8FD58B00E1410AA59FCB0A46071CAF8FB4393BA306B6
FAA540BB57D6AB78BF1D1EED5F73B4330FE5CE401F31B28E47B704D0FA2CB237
129129FCC739C48D0D2E67F9D8D82F2B4DB8A004B0C0AE92BF7D7D87D6ADF8D6
18BD40811FDD65D2DEECE42B58E5F926864A5C7764ECCC1D71620B0C7FC8A2B2
71EBCDA9C15A494230167BD797768F156E6457D6955E298CEB4231D509B09905
0C91ACCEB684FCCF90A4AAB1606FDFB874FDA46DC515B025238F01000C33B741
A8D10EF65D2CB3C33335605B1BDBA6C69003B467ABE550D82D5F26DE4C2B858A
2FBE679CDE628D8703DC91461325F6122AE2319E8D5AE93CF48E7D6C73B868C8
C4F7CA52A1C68E3D71F2396347BBAAE96FED40076349517ED3BBF5F7CA85CAEF
4AD77E4FFA094A68D96345E61293B6B2E6C33CC325D75295758FF55792E6BEBD
5A8C32AF2ACED83BCA13D953CFA82E87576061121E28E6A61508397D88A41C7B
576CEB266448C9116D4D64DCEC325FB1ED5F70702125C7841559F75F34C79AF3
EF7B16A62A1DB52A4B7C781D1E8466ED6817891E8AD0869B34377B5F595D49D2
2C08A2DC40E2C72A12325FC1737C4279FD4A046F3D068E4B555DCAE2B50D2597
86AEA9CD5FE3C05CD7B52D028D6D6575D9498CA534FF87934B7E2593F7C65104
4DEFE9B8294267C7B7CFA398366C86881B8388BFE67E260E9764A3F848F2C92C
0DF8FB50A48FFF96F018CA5B0DE38DE532DBC21045FD35BB0219D35BB3837D24
C868E464F105B123D128FB9FED7A8D30150B98D027B824C9D66F38ADE93690D0
9B8D4F6A97644E5ABCFB0C2DEB507ACCF2A3C8F62040F5178C0FA0C25087F50D
0027C0ED20940C8B88FEC06463859657AA832F17E4AAFB5C90F7BEE90DFA17BD
218FD24DE0BA5D43B18E1818BCF20EDDBE6929FFAC49FEF0AD71AC100849D939
8A5FFFD411743C45BD6680BD5D53177A78FCADE16D4AA2C7AA5D5D2A1C701194
F7F1BD9C31914CE4250CC616A5232FEB70D7C90E43C6AAC54197DE2F4557E3C3
27D59D1F60EFDF1E44D4140C47D2A89E37D8E6F7DD940F08764D070EC1A6FF7C
602D5D635B7D05FF651AB174F473F6DC5183AE32FE1302D54F21FD8AB3746592
328A38B10039AF71C22B6D14C51236A7EBA646A92C7C482A3C86E9C246912CD1
2805D2825DAA923CE6EC7D13A04F9484AB158563BA547BF30FFA48A93F2531D9
D0E9D8155B10308E8FDE7FA33E234F4743ED74BECF1394CC91AC0ABAE5608986
B736037F0C1CC8E7FBA35FBC4A58DA39FC6E8A927B60144A8E51CB854EBA97B6
F3C21EF0A503532563B3FF92DF6B782A58B18266FB67A544983A78E43375E075
F8E81ADF7D9A0596AC04E6E8AE3A9B0FA2E18BBF5E85925F6CC079BB81F951D7
F4EAFC360FEBB187D68BF84F9BB45D2250692AF324584D627C63DCEA9432BDA1
195FA83270898C3709938BB3A5FCA955494644E5782551ABF9FE35BB9BD140C6
5CDF20BDF5AD865CF09CF6DE6CB3ACB3B3F08787D77C600C052CD68B48EA615F
D0FDBA9CC90A9A931398CEA15FB4CBA0E32666D55DD740C61C9E8548F4534BA8
1C18A02E16A4014B26704AEFFFC531392C7769B66B7E3234D94991CADDA2BD6A
6F2F382C7581F25A478A651E1D6941E018819A1A55D495682954BA58AB44A34B
82A3925719D9E534F8B97117CEFC39669E321E9A9D8D23D039BB0902F39B0FD5
5CEFC231490CB4BDE99114850FA6BF1B494861C6F24A0BD0BBE7C829E8800837
B828E884F05F8364A6913D1C6B1D118B701E16A3C7968D04E4B1D2D6BF9256B1
514F0AF5413EC4EAA8C5FFA2ACB1C2E5B6B5B54CFC0F47C8450E8B637E4F0239
1DF5048386FFE8293AE0A990FB6777B992F4C1CEFA8585E5919C5D4E2BA6FFEC
521A514BAE43356BC85D376D2C48FFEA0D343EE4F5A28BD3191AA31DCA4D803D
EF00C5E213239EE07D2006B2F18F47462765FDE2FEA1277CB17A516F35528CAA
BC21423500B15F25D6B68FD74BED7540044BE1737733A50CF79BFE8EDD839A60
2A33B621F695E1E19BAD07A1E865297435435637FE861D0EFBBB2586CE426361
24B4FF16C4D9CC102078D31EDFF1A5B5136F907F3B76AE27E6BD1E66B40C7F48
B26D514B4EF5E9DEA894D2BEC943B433E2425B4A1A3248B733A8B14CA94CD3E8
B24FB4EA16805F8432880E53B8A9F5305437DE68CA029715A81F06B9608F3794
D91B0B3AA0CD9B4AF3DFC3E396E1F0462ABB99F3E8BB7553CFC8F40249007A60
FF190110F491B09F5B6091D77965494C4E66FDE75445C2CE3FBA0BA3190AAEA0
70D44CFDE6947E7DC2146C5AD56A5DB5AF29AA1BFAE9158C9ABE84543F1BB052
5AF321AC8281DA477B979B5EA49CCA1FAB5365560501E937866440B98EB97E6A
3B1E60F4642FDE2AECC7340FC17CAEC31E9087F14032ACED06C1CB188FA1FDDD
64A28493E3DFA5C5F8972AF20E0AAA44578031F73CCAE2B3DF4BFF32F6226289
FEC341865482DD5C5D0F7A71055430452DADD69F64F345F7AA1203B815CAF89B
3D3925474643D1573FCD60BFEF3217867C1B4D9144259E0214FBD40EFBCED0B4
FD4C155640963A83DEB200B1E0F8D5837A380BB98EA44091AFA241E7592D8FB1
2D74FFB7C318EA301A7D2892A87C3F717FDADED5E79FB6C1F893FC75BDC88A92
B70B71AC176BE72E30A6028594335F2DAF7F5BF4D9C963221FF4CD4D3BADF89B
93CA8175D00A3657184BBF1FC3BE7C7D783C798F90DD7B0371C6076A34271653
660C58AFD864A8D94F75ED2EA9C3F618B5385E56F0C60FD9CE7F7AE918E73F3A
A6206DA98175331024E1823AEC5C099056DD15EFC8A7E28A5EB791BA8D95482B
E9AA96C2981711980CC38250BFD11CDED2340FFF0D147DAE0CEF89D86970952F
1DE06E489B8832943AE720C94A8011ADB92A42CF5C1DED57748DE80023172639
AE01745F989BA864B34973D9F7C052058B1DA533D7C5B15DCDDAE1591F2ED0CC
63AC777EAB262A313285EA6C84D0AD1E25F3C418A190FC4A4F884B9F59F33ABC
062E17074D763F9CF510F6A9420B8992400B74E5BAC7135DC9D5365129341F63
034D500E2D97B609D3032F0056228FE28DB2172946290D941D01DE1EEDCED905
C37546C7791D26D967F87AC13A63B20F9DCA2D2249F2DF04C09D956CFDFBF0F7
987B968077DF3CDA7E5376EA5CF6D6C9999CB0F6ABDC69872D1C6AE7C1BADFE5
D9C92F0ADFE0DDE8137AF25FAE0159E3981B87B73D560A8E926A9D60ACCDF7A7
6AFAB073AD4C15FD111A66BC70565F766AD570836C9496F1151E41759B1C2300
D0CBFAF84E3DAE0CC05A1CFC8F881043040ED92287180E36AC1835CDD0676A20
F7937F297E924E6E4B26EECC8E52A13094313D6FBC21054961B2493CD08A661C
44BBDA9A0F5535BEF6EDBE19019DB20905E27D47F0C4B35C13DC864536E27AD2
32BF1547D35AC1C9266C2F68B7DCBD6FA0A0FCE6405D2D2A44225EA6DD871D4D
3572456AFB71731820C2DCAFC63190C9EFC8AFA009A2596337AE4DC11AB2DD2F
589EF7A12C46910BAC614DB45A70823162833B8CC705173C586F6E8C443D0A39
C5C22CED01A0BBF4713CD6DC22AC9D4C082A2435C26DB9A2BD1BBA106E3D44E4
B7614E016F216B10D8F2EFAB9C0AB2F22EC06D29DAE426A6DB45600F85E58E80
97D19EFA3914208917D674A43D33330E1E903594D53E96C97BB3958CF12BE601
80D0B18AA581DEFA2723FCC031D356EA51F4BDE2837BB2A9C0FFB86E19F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 61 /slash put
dup 69 /E put
dup 72 /H put
dup 77 /M put
dup 83 /S put
dup 84 /T put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 113 /q put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA4621E84351914EACF
7810F41CC0BDCAD6165182C7040F052C34D073FFEE489549EFEF83111310B3E5
F67EA5449D3D81DF1FFD64AE0F1A760922FC629FDCC6AB0DA66CC29665BE386A
4DC43CFEF3C5904356B7B2EC0AF36BB4FF6A994C8158790674A8EFF54A36B7AD
8C8B833C1D1FDFEBD7D39122BA602A67ECD2EDE9D35C2628EF1FE34B2CDDE154
2247242DB2541C5FD49EB8348536B83A67E718DF66A627D7C7622F22B5D3A3FA
5149B224F82B72E4F2A1B22BD6FA7018B45A404E66E2C6B96476A39E5D330AB2
ED04E2A7FE38D3A88B439E804F390F4B7893506FD92A069D16B42DC713A3CCB6
051AA434461CB1B788ABDAFC086C09386BEACC3228335B36E96788FF01081EB0
4C9BE3C40B58E92EC852D8DE6C754A61C590B76450321901BA18A4F552D06246
F3C3FDDA4C01BC2A81F47C06067B84DF5E22FEF7DA5CAEAB199501F4AD71BDBA
8EB1A24619DC69E178C52B5FB4A7B1320C4D8B87F1C2FEB9179D813906336887
0DB47BBC68E5153771A3C6D4BCD5E185CF8AEDF189C9C9D98B8F33821018C763
3CE4DAABF1F522D7CB76101727A00C6036CAC31DB98F5861717BF11E0C4E8875
11B8884712E47CE1BA98AFAEC5A617144790A1E93A13DCB71EF2ECE0C571624C
CEE5833FC73D47716E91DE855A0F34C8A6AAA80693897367C08F787C91BF5E14
0DAEB94655289D2C3F31BB68F289864F8FD5AF1E55CE0DA81E48D1D9534C8206
DF9CB89EA7CB62E5D7F6594C2914306F10F5669F42C46769636034D026A3BB1D
40492EF554CD7FE42B7F90BC6FBA6F37F698F8B0A42FD01B1CABB150F923B593
D903CA7D99E009C1599ABB91DE32E0ECFF0396A7A0D07419E4A49510F4B7699B
DD1EB7013C93FCB7A5DF0D4A46373C1BD482E39C524036AB107C6F3683042FC8
A96E95D5BB64F90F8EC8461429E5866B6BEFFE48B61FAADFED21431AB49C1420
CC58695C6879425AD60C1450A9034999638C65F4ED425B2B6419BB31D1073B3F
BF27DBC33A322DCEBDC792EA98888F01759FB0EEA4B8B9D73FA9481435531CE7
1411CB974057E98974F10D4F92540E606A3D924F98035D0B36078891B56A15C2
47F21D5FC4E433542E2B9DD61F6EC2AEE2AE481F0D25CE1DF30AB7753253D02F
01F693246FEB2983A81F04A93D1BC10DF1B1909A2AB9DCB5FFF8BE5533D7FC0F
87167741EB509924C09B14463EFC29429D0648CEA46CA35DC7D5598B68DE8023
05D34F0CF5960A55A59EB2C12D0C27A0BD12E90A1A4232C271C6636662EB4E9E
5B621242CD658E3F3379790433B72C465667F35767E046EB174BD4DD18F1520B
F99255A12E0A263DB70BCCB357D57DBFED0FFA654D01B13E28420FAC07FEE235
26E799131FCD5FF9AFE98D85B264A3EB8CCFBD4627CA685C47B3773D9A6F27E0
66FFBEB52F816EFDBA9C362698AEE28D3298DB6C97F1B746F2997ABA36117D1C
1438BF8E63B3AD00FE10F313C70B3AFB8C23A5F93CE0B63199594F95EF990CEA
7EBC699B157CCD7A1AB6D928A8B8DC7A882DBF0C036B34D01FAE01503A002373
C43E09528E7894A96B73A6FFE0B7A742C98C15E807B52252A5794FEDD2CF112C
6081F50B8B4CF191F20513380B56D7D8AAEA666520ECEBD5D66631E4220E8353
06CB2D3E5F0110486ADD1CE85F54644316D89EB7D2401B8ED4ECB5D4F6D60245
9DFB384616D7D5009133685072174FA6D39A77C08983035FD1F557737F141E01
6E04306ACF2651C148C5986C7836BBD69BB74A4D18CC50BC38FE6525BF80CDED
AFD5C723473F3FC740D524CAB009D475971EDDEEC1B540C84A0E5C2F989679C6
266E799477314D8D6B393542472014F9059C9122372B4E9A2330DEDC737CED0A
17CAC23F1BA8761E26749014C3445FA8EF38BCEDCAFDC4BE2592E8E945DAD457
A2A5BCCC23143EED82962B484B229361753D9C9E7E78C257C6648900871E8628
3312B564181EABF0632AC7ED75B2F3EDEAD9738192994CFCD1A9A22B92063F4B
5188CC1B1565DFCE53C689D4729A36B69EA3C721ED19D563652D6C68DC660A17
5428AB23BF466B1D1100B159D5E19D67B6B413F79F874CAE0B044ED723995E7B
9E0B0FC05159594F2B2AD3B4C3CEEE82623A4FA23C3436870129AA27341CC8BD
6D8DAFE4CB02DC9B43CC1CEE2935C51EF740DCF2B7DACC4D95108E4D0B1D57B0
C08D64411A41FB44D0C61937DACF2BE89A160F0933736C45E551A5E8D8D8DE9A
428E464D55CF4FC8C70ABBAC4FF33D689CE43C2FA3F75FCEF048885157BF20AA
948B7CC039DA6AFB265A2677FAD0E82DBF3FA3DD63DF3CBF5B0E494FA70BC5D0
6AA4AC09DE32B8313E969A28FEB97FFEA50FBF7659E871E657807293E24347AD
7048615CBBDC09EB866C47D8E4CE20ED9989E7B0ED1F266F6184E2B031AB9308
C6BE2D9B411778CDB59B5513BA6043FB9985376EC41AA579F95E922E8052D80F
6B9D5CB129E089D838A9B7E4822E4F1D64CA5621AF9FB97DE8287449F9EABC85
9A0BFC85061CC32733B0FC738D401232A529D3E1E22D65AB45FDD143A1F9D651
B5BBAE02444BF83A32AA46EC6E6F5BE68B47EB28083950BF59729AC62B4A0E97
83DCB984902D170C28AAC031CF89CA159EFC0584CA1EFEBFA1CF9000B7B75BB7
6159D46092D1FBC908A348E514D0307722BB869298FF4ABB5092D476B2B2774C
C287BD81ADF33711EF17F7B4778264837383571BA3BDC0B8DA24DDECFA367F59
14576083122ABE2762627D5CCC971DD2E8EFDDDBA23B8031F8E02BC6C5667596
E825A0AEBF44EE050F9562A50FCA34C880CD37103D3612C472118E999566B6C2
B0D9BD759F54945C943108D7CCCDE0605F366F2234763A46E1AA52C8A366B1B8
0679ECC694D89FF071A044133A83B14B24239E5AB8B5E699DA0ABB8475D96877
EF9D1406BE9F962F5CE35514F10800B8E7FB9506053A39A2A66A375F01A7DE6B
91D9694D2FE0E3442448D44554A23B2ED5AC9DAA7D90ED8FAE71F6EFEE4A5EF1
83484A618608F7A62758A69729528693805416F31192C44DEA3430879C209187
2AC0F58BACF5D80E38B0B88F0D9AA48767AD2AD2615AEA5A32ECF08A5B06AC68
BE31164DBAFC23B75F15D0C577B4860E8CDC224D37DEA02E220D0A83376EC3EF
38D0C1969B73C73AEF4043A04C1578B0CC452B884CA3886323C4DBE7CA73E4AC
2BDB6D1090EBE370EFFC12D2D1F235D8282DC845CE12156C0ABA5CFEACEBC509
14DC6FD6A585DA682A8C36389D7386445153FDED4F33973DD92E25094BE4402D
53864BE3DB9E576BDA1D44E510F794EFCFC3E1229722D56DFCEDF7440A2337F6
7029172D374EF775527A8FC0805396159C246BA487D56ED09D1346F0F9A9E193
365C0FFB4618BC38262A2874A6699DD1548641D375A215905A8F164C09A9CE2B
CD666D9A146C5B66E7AA013F125847B4CC8EFE9C622F5F2B6786BE191D79B62F
386C329B04389B913E683F130BEF7FC5327D34EF934BDDB20B7A86B4120B56FB
2B3E23DDCAE458E80DFC34AFAA1CFC3CBAF49EA04A9908618F68890FB762DBAE
6F104529E393B8F5EAF9274A9253540391A407EE4BDDFF115A7BBA6531C8CC9D
1F21B29332F07268AC79462AC5079BF9C52C1361CD64BC818A13D4BA2FDB3F28
EB5FD3D010E085C570FC682DCED30F71EEB923E80191C526DFCF89D22B3DDACB
6EB9101E4C2D04F9580D5933547A123EEB9CF3842F626F89E05E415F9565E574
B5716E86C8BFF296599248DB11BEEABFA2EC01634EB67DF71700360317D0E334
A2416C40F953564187145ABEEAA81739DCDB94F183EC543AD8FAB0759552BCE9
4D9222AB07C1CBCB5F7BD74B2E76135CCE227F8B5B524438E9E23B4930292F78
4DD1222A7D8D43790699A098293A6747E7B369FF53DFC9E487B4DEECEEF05C04
0C4216064FCEE4491CD0072391F4606775CD86DE38459311CD1105D8BAD79350
2BC43B5FC3854E9C782240FE804BDC46D75C40B50C8B8FFA4832E1EA4EC9FEA0
6EA0E93557EFD6639CAC452CFCB42A1FE8F53D1A6F7B653DBD7CFE4BCAE29A10
C0803813359D6DF48477DA65FEBEC92FB5061E4EE6624DB10050C91D9D9046AF
BF2B6F1DE0DE0B326023F61DFD574651A9ACC99D10B2328140F7A3397F19173B
EA4858AE7151CC9AC77E2623307E70FAEC861B546CD703921B27F168CABB5DC7
6475BFA6A18155819F1ED63A4D805DD30FD73596D126EB5C1CF02CF0054C4C23
6B2C95244FA2211FDF7296A3659A70E3081F945E3929CF1907A80A060BF300D6
F9AF4DE7170AB5CD1B720AA2CC42031166553BB3AA0B9C69DF12BE4E30DEF7F0
23035591CA8A56F202E45E7A584C98CAF1704495BE15088D1D03C0556B05018D
91A8DF22E4A96D2F8CCCED18DB4C467D52FA16F2436044AF98ADE520F10E88C6
C75D2D7E665AD47873FB14A65F18EFDF32B811A6F975066043
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 22 /mu put
dup 25 /pi put
dup 34 /epsilon put
dup 58 /period put
dup 64 /partialdiff put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 98 /b put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 113 /q put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455596FD630BF9FA4967FAD0D848DE7F7DC36D8
B3E4AE909CF3893CB2E0B4C75AEDBBA228A6153D8E14CF85D69C13F84CC37AF6
D05DEE8D9DD494595AFE735E87FA1D6780C1F84FB83E0A2D5086611075E3A016
F785A92DFB5FBD099953805D03ACA6D23E5EF556554328C9BC2AB97C2982EEB8
A8DC00247C0778E947C4EF7D042669C7D5EED03CBC5245BFF3CA08418D9532CA
DAD907076117A8072F3F7AC69D1CD266B8F48AFDAD2FD3E6379B91272AB46E7A
FABB5D8104D531545EE897589AA63CE339034AC2C6A03B3398F57EEF40E66F95
EE260A8F6EAABD1EF985B1846239BEA8A8A45E9A29BBCF834B1F5BB7A104B7CF
A9776DE25A5DCC64FE86FC977220C66ED815C95C12395A1512E76A65FF4895EA
FD75DC75445078A8E58C9F7918A7B73153CA0F3F66434E5877B2D538928E3792
F628A9437E985B236E321FA8158E854B8C0A7008FAB4F2434530BE3DEEB9E14A
28FA8CC93D1DD984DC4E69295AD592E5E4E64599D35493570084755B30EBEBD1
26A397C02B7330CCA6FCCF42DF823E297052F9EE10452E6398C3E5C5FE85240E
0141ED098AF31EB96BB9FED05DFE8793B0A9D0E6C6CCAA14F772F94E2449E3CD
B34C85DBF7B888C83AA34F2879BB03C350A01B4BB96E32A86C162D24931E7670
01D3FCAB77FA47E8BAF025D7B5A80380801C809D36B4C07528A085B6919803E4
3BDFA840898986F7A818BF3719570B3284FC9A7D996419A849E0E66811D430C9
6A32163FF03561197040B62946EAF08EA11489D8AE0FE6DA5083B730A69C65B9
09EC02501C2887E9C7BA66355799CC86A7D2A96702F1A59CAC5A36C8FCEB586F
41F002C026DB97B0215726D0F6AF072FE7F04E8373CF2316BE213B5C8826CB0F
A0210FFE6617ED0227EC5FEDE163E13A78FDE2AAFEFDA86E6317477539E15758
D1EACF2A9601C05543757FFCE151274E490D0A05B9CAFE35D3D529FC00468249
F5A5DE8BCE8DFFA4CD7440F40F35760B5D2FAF11CA983F3798ABB133C1E4C1B3
51878DDD2F09E16008D930E777FF2555381F21F99BF53CE1437EFC462058F695
20217105528E8CA982236CB29B254F62296E956DADEA72996A06F2BC738EC999
71A2600E005FB22CF6F9BB88DC3882A6D8F3517E278E80508F769C6F2C9DAB92
480103E530135B7819E631B2A1A5F0E3CC8E591044BB5A01FD8F3003D241F4E0
B028E3F96AB1BB0222A15589A89FDCAA8D3EE1397AC0710FC3271FCA7A39D3B6
10379EA6361399EF74467B92F02E335B065378E45959BD7D3CCAD130D1D1F4F0
06145A1CA176FD4BFCB52410D34725474BF56751328B3FFFB9CD43FC154603ED
D06F31FE4E5F7B8BFD02B85BE3B627224691EE6ED335DB68A17C58A3CA7466BC
E99533D7E83AB4901B60FB6531B25178730863782421CBCCC9F1F0A023E86C2F
50820C507054436412403AA6FF4209B8AF3A73D82567A8C58AC27190982CE89F
7FAF046225FD6F16AB92B7068A537EE814E8DDBC2FF1ECDCC6206453A076211C
EC7349670B64AC4899CD0B44378CD3172EC2023198E7A4BA9B2A0E80FA3AF625
95F8ABF8C1BEF422B2CC2D05BD19ED39EBED243F380BFF5F987FDB81308DDFC6
84B56A68A21C89ED845D8E599AFB66FA28FDAC413FC48239264C47488C743A76
423F20B0035D87C2F6F2254266E921D17E9EF14FB73918BA8F76B0B1A98D2798
2C36D1CCBCDD89DB9C7BB4E1AE5AC7C0A35AA1E50341FDCCB80C5F481BDB9079
CD64FEF2362A71390ACA9AA0937A9A5CC774828A83F6AAD8E1145777E79FF832
4043AF2B4A1E542B57EEB9158CBCA703DD34F8CB68D4FC1B5250ACA364B671D9
EA56207F81E305D56649E154D03B22C2A71FE3EA8840ECD7CB294976F0DB94EC
B5401B0A31F3DBDA7557F47F060F996EF65613DB1E291EDADEBECCFCEDCF39D6
EAF1D6335E52BA9C2F2FA29A366242830FC71E43B4077B8CDC1B1E2EE05E75BA
B26B60636B10E1D2A2B3FD0257E60019517BEC8E6CD5805772A8DEA2600DA84E
16BAD5062FF7F0A0F8B5E144FF07E482C8D28BA33BA083C60521B494E398A21E
A494BAFB858D6393C84ABD7354C77D7536851F8E6EA94E9472F4DFF3EC0B92D5
01C1ED912F8F181BF297F1ED9A339D236D81FCF03A7CF2E32F762C9FEFE9D5B6
E7678981E406B0B01EB1EF60A4D042BB749DF2529F68A04BEA0AD3C432453E14
DF6932EEF8CB6E55B225875B582CADD5B50D5CF79BA37CB2F21AA79B01DD84B9
5C03C44610E257E1FAC5F1467C083A89BFD34D0F8B1FDA90FED598FC4A790ADA
78830CBD6C250268C459F86DABEBF9CB6C544212D74839053A78BBEDB7604E6E
A9DE3901EAB211FDE606CE7752568142FEE27366211FCF6DF650C8D45BCDC64D
D9E578CE1BC59F7F4C5B04B5AE9FDC1516C9EB562F65C3DBC08035528A7A9069
2510070A66C18471748755C6B2534992E733EE3F83ADEE24A10833356B6C8BB6
39949B4DD54C8935F0175F6FF3C1D698E6E8918D00E88F69CECB49EC5FFEAE50
5A32D53170B82DBDFA60EF6FCF40DAA637FD66C901062B0377E1EDD75B7EE052
1EA424EC08517C92429F49C434E618EF74EDD238BB26368649A3E7B0D53A4032
DE5CA1B87259C624EF566B658F21D4DCFAC2074F989BF1CB898D22441CF718AF
1ACE6E2EF629227795CB022A42F91E5B45A07817310A9496A4CC99807A813196
2B756FE8E5B799654350CC7BBD529422A02C27886704306A5DB247A8C6AB2DA2
AB6765699EE5314830985D90E01D0DE224F056C630458E0659530BAA7B49C130
96B923BB3E09E13C82E361BA220612CDAC654AAB3967C807592A30BA3C00979C
EC6F4969A5C77DDC88CE352B4BFF82CF9AF710BBD9B0C2ADFB380CD9031C7BFF
00CC9F42A41C6B33035929BFE3AC153F108622B0924988BE2FE5E054A8BCE18B
11E9FCC2716EF6C7FBE5821E52A879F183EDD55E0A81F70DD25C19145B427CD0
393DCB3590059682F584439D75B73F367CF49BDBDEE8FF4F987F716F38611E7A
9B87D3C28B0E369A0F2389B738A982C15F3D4F7FB3545A4E92D809841600FF3B
4FFDBC8E09CFB6589916220018DA5B186EF39D61A318941D0026E3ABE44DFE10
238D6106575851341C51B5C1DCBECD633845066226786CFE3BB1CEFE95578076
64CCB3C735DA2D7E6D4C745982A372896CBA3E230F46C6620DA72606094C217D
8CEDBD06FD79BAEAB0FA97229D5C170EF38133A2203E6FCF2EC957776D26FFFD
4B032A664E8834C05C87D395A89E0AA60AD9C96D99C32F5BA72486E759CA9C1D
7472C19DE8ED2280F665CD3AEC592BD9E5953F2C482ECEE16C9E4AAB6FD98A43
B46E6FFDE7AF48C31AA12F1B5387FEDC619DC1B78B3D8188E0F99CB919068F27
37510BB7718ED8E81B50099C3B895CC1AE580ACF2133557BFA59DACA5A6086EC
A2D1B3EC2C924540E39566353DA6EC80682AA1361E55EDD1D57B858C7DC6B7F4
AFFEC73D0E6FC8E4F185D4572B3A6EA58DCD124CDF68747377E762AC3112B58F
AB4518808532141AE1B79EA8B081C4C931ED441842E37E7AB384D208AA700680
E634F7E4D6AFC36ED0337983D5E66BAFF794B5AC6639E67298997F56DDCF1513
8F2A12909F62B22803E1E99C60AB406EF656D5BD80F307296AF1F19FE5FDECB6
E09F4A011DF9D18AEE2988D325077B09B2263DCFA2B323BC9927F4BAA136B404
0F47C7A340996BD44938DDD1446EE8010337CAB262F6A7B88DB85EBF76F93993
C631DAB4F875326A69A9EDDBBA4FC7DB53512CE22C6B2C5AAD63EAF6F05F4C04
497C387B66FA92ECA1375849D7CDF5A1C4889D6D644CDBC6398DF7D5CDCC6878
BDD6F62F010AE404BD876EE870C72963DE57A9B106234587E33069E8069AE262
BC1CDD9FBFF81DD13F4D6828F1E0AA0BA09F0117C150F74AF79018A92E7ABC7D
65FA416E59CF2DEA225917BADA13500AA946FE6CBB2F96104E3039960F452C7F
D271C1B90399B1E861C14EDDE6FA6E6C2E21CF6BE0E3EB86EA6D1453D5CB31CC
60926F2039A9050C007F0035E12AA8B9D7DCFA19C541F75B337E7D437DA3BC16
E6635DA9644FE57268CA3D88508581FEC8A009EDE05DF4834E79287FBBEB6026
8FEBD4B6CAFDCB9CF0A2E3D6CB41A57687F2A82C01C02369B841A2250DD60BB3
4E01A607FDB3DA93A33741C883247AF54545B4547A6BD1639AE11C3CC2EC9154
53BB38BAA0F5244C001739BAC061C6E7DE079F749FC0A50B8E4910E16E96D85D
D6AFC4C3F13631F72EA98B0F54DB46C88E4FC7691AE56B5443D3890560A3ADCF
814050B6BCC282334E36DBD771DC47D3A1F8E931601954A1B4A67309FF4899E2
6B6C2661682484550870B733062B9529B36991806FE106CE27C2C5A25A5F255E
208F8A2B97094F74CC1461ADF508EAE9813FE4768F54FB8F49F612294D14AABE
6ED4377CBF6FB5C47C88D2AA04643F710139D5972C508ABDCD2A09AD0884C09F
1F36ADEA7C170943BBE10EFF9EE30C85AB55675ABB259E7B9CD109FC8B704BF1
E44ADC38C4D04CBC15CAAB16C9F5FA4BEB545544EC9D5B357D17E3B717324B72
2B18D994EBB267A8E403188B5AB2F1AC80A6CE270F899D7BD518E15BA681B859
1F8249E2546E32ED37A4269ED512CDA5543C962E0714DC843E8D56962DEE8163
EDCAEE1C42B348C1C29D3E498BDBBE0349C9F20EDD1469825853689A470C55CA
4EF29CC05F1BA20D65E3DB5CD00C5B9CADEAD75AB17AE153E9F801DB7B5EDEFD
4142C88B64982BEB4F0ECA3463589E44EB4EC2FF009533134B0BA23A66D05E89
33A056917333473F86D1D094605C22E523F4B304056086370A3C8F4C3AFF9CAB
E895652AA939757732E53388C19CD8A5ADA4CC758A6C27DF8E7136302804D23F
3F45579AAA296E9FC8EE8EC10DA867754646FE279A71E8A1200F0204BEE13147
24D2C70D35E25786D23CD1E7342F0B903C7F005788A1C0779B6DF374E9542CA1
D25705B535AAECA4FBA8B1EE778C3A1CDA2DA988AAD78ACF5C1A6142781DE0B0
52312302E0467CC0AD1073044B8277BF55A49872C2B3130F153D6A2F2483F9A9
BB6CD60DD61D2AB155D2950505FD5BF6920D53749E743A92B3D519427511533D
8B96180EE2A03E3B9DF93E9EE6641E57F09251F3821ED9BCDE90696B5A52F3F5
AE529C225600152458E017AFA01107156A0E9BA31F748DEB4DBC2453F4B2B54F
583AE3632B19B3B9EF9983A83EBA754D7F5340CB5E473F4632459FCC8296F71C
246D8D555E4443B373638FFC56CFDE9B1D29B2E35F13EFE221341A77C88D60F1
5A59723CBBE4532F85FA0BC5BBC46B58266DC8091878C947C83A48A63706B98D
A652890B28C8A5B1F02181379901D52EF9C033CB0F9E9C0B7DF559CA596D0057
CED77C16FAE9851374327C27C3ED0D49EAF335C9873E8EE80CAC23489BD1A014
BFC9E2AFC4248B8B7DFD1FDCEC8B2A6277BB0CC6997D3B4ED9BDC1F1A6A1A5A5
BFB5FBA169DF6EF003B80F2999525DC762BCAE99CE6DB334F5F4C5DB13843E31
FBD2CD8C7F51AB08642CFEE6136171A138FF0FB08A53E214A7FD5E4FCB44C413
DE71F05CAA97E4A93E528CABF2A59395EB7230B99D491E04C0C7F3D0F3202F33
EEAED6641AF4BAE0F346E25E1FBD2522F0A16A41BCD4EEF1709EF77E2D58BD46
9FE3A5A98E15A53BC6E4BAF9166044F91F944F5FDE15D9426B53DFAC3882B450
9F2194C06E05F9BEF1443C73EEBCCB9421C15B9BC3B23D04791B837678EE3359
E5951CC578BAE7358CDDBD440D18997C7CF09C9BCAC9A60D3C680C9164A6B168
EC3B94B26BB145C305F7582B402DFDC0890A42964F3E7677BA5F23A0F934414E
7E83CF00C0618408B67F09A37061326104213825244E4705AE7149AEC368A383
6FF36593D82924DAC6C6CF55079ADFF950E250CF15531BFFC74159F095DEE582
0A92621D3695902F46EA7747A5D763C95043A74E8B3E0747B477424DC4D54FDB
44B3B76CAF0DD4260817A100C035F0A1330DAD7D09451AD9CC4E3285863821AC
75B7BBFA18BD42FFA827181D79215AC0951D9D0C325BC3727384BB693629C8DF
FC08CAD99C22C1B6A514FEEE4238A11E5EE1BD0DD491ABE6D424AE34A03A23D1
200BA273F739131CF88353D47357E4802523551BC3E3F6FCFA6176616B53BB41
1BFCFFF79B476D06B77BDBD0714D728039C5FC0B7158B6F877872134C2617EAF
FE7A62CF2EBF91EC10DC1316974DFC1BDC97CD3768D270D3CF025BF2433FF269
15B83C75F221B30D360FEC88EB72AC6C01AA53BB7B2ACD2C9608886ABDD505A0
49ADC8B7DAD1B353343E3CEA2D605D11ABADE07D9B730A3D47CF24B5509A13F8
031C5D63976365254EF8E51996F8E17E2F224A41B0924236979FF704520B042F
0D33AA9151690A16CF33562216328B5CFCE64B9B1F8F8FB10D55D805F0C5EBBA
D801177B0EFA5789F31497BF5AD1DFE769A0E3F95F50DD27F5375F557EEC69E1
CA020E61C6B26A62BEE7A8F90C08F3752EDD8E49BEC0CA6DB300AFA407722D1A
324BF8D9C2D258C7D79E58F237F69AD658DABC84ABA085BBE9B3653C20546CA6
EA62857C0A7D5FCB2C85BB5FB590FECC7B344FAFAC195D293FC092D22F7B2B15
F0CB388A109EA93D262A895B2998AD8B3FC31E5C3EB535CE2D1820CB0D1AF1FA
7934BED4E56C50C36E4E79DD3CDCE86B1AEB735D50CEDFC4F88CB66FD6858EFD
9D59B317B9C401B40E082967D6757B049E7DB0D96A64AF0B58348014EC5FF414
ADE276B5FF364A28929A7A9673E163537357DCE78454F3EBFF7AFA6DEA50D43F
5F84E6EDD56DAB18D3D612B2847A8042D9D1E1793C12C12DCDFF7AA6C4D0FC6A
0A01ED08EFD3F7DA2E4F79D07755351F8031CB02561C3BE2F923CBEE0C95C650
C29EA4D79C76A2F1E4572A469D85A690CAF61BC75494D9FA6722CFB60F7A6A2A
849C63F6A88615180C581127C2637B04FC5C1888E724CDD33A4F829FEE1BA95C
88CB79160AD56655452976BEB82B3C37175BD3E6A87E8D4EE94A2FD662942132
9675DB0092C45EFB05586A0CB86E9A4A15A4A637BE3307CAFEC928B2986A34BE
0B0F5BFA997AC41D1B0AF29B83C3048C56B15952C2E4C17DBD765B138487FDCE
B6DFFA09B17ACBF4BDAF067D35007A276A361D2869B37829C030D2A7983239C2
980287EC4F2D005FB403B183BEF581A524AA37227424F5595A9DB454C41A1DA2
91EB3111C6704FDDDBF4585D9EA7F78D993B0BB3B51D4C1E39701126516DEC54
7AB3BB7E302A0D628B671235F9754B6A95FCA52D002154B82E4A23734981E66F
9AF8753DAD901C71CA3F2884F236EE5CC31283BB51EC9F4FC690B0B82DCEBC37
7D88F9BC6B59D5C6A7E5595C4EA70EA8746E5D840CC76EB1A50C8D52ECC4A064
E1AAAACD8ADD794C14897FC2BFE3960490DEF98A03613514D1B2736E97973704
6F6C214EDDD9D42E552AE8390C7B20036A919175D987237728C4476C94D42472
74C809DACBE52377A08DD29764C552A4403D48513F7B685B02D2C4B51DB47EE3
3B34DF5EBB3885DDC085D7A70DF4ED37107CAAC120D297AA14FDA6BBFCAC9510
D8380D3F71002A0680E6CB823253FC71A823CB044653101D1D92C05E8CE4DD87
5C51814EDF58A6310AE76CBD50D7ECC1B14868CC1B46A72904C372AAB7A0428F
71E692DDD72A4F3BA1CA7EA80FDE603334E8326BFD14930C2CD5202072D53C48
68885406CC63794D156EBB3BFF64A156241385643AF0379A6B5DB9195E936A21
2B6668089F5093039AD1C0D011CC437B5C8A940EFB404656CDE8B72887BBA6C9
1555370FF85D5590655FF0591FFC3B263CA95AB4B989D48F07F71FEF94912E69
3A2BB669E40186E2857F93D8238E3B09FC75DBA1CB015E35B69356D299BFC4D0
F606E987DDB3709AE4BFFB783652353D2E38E427C7159F5B94A14C81F7F7E8B4
23A4AEFC72A47AAB9A54CA669EDDD344CF9F0EA5774CF23725110873975EA266
E977620D0DBAA290434C86B4F23ADAD4EF3E5A05B8256F2DF38079438E8ADBC6
6E6448857535190E75BE83ED642E4EBB9ADC0A42C5927C9B3244F8E2AA427B59
809DE54FE6BB1E52CA5DF6383FDFA68CD72AC3B6B2064431C730F32D468B065E
1417554A68C7590958D82580D822395FDFC228E6A109FF3ABD7BCD516398F088
87236B125D10DF03C8E308851A44044E9EF2750DD0DB1ACA17494DC9093E6E8F
8ECC22ABEE44C6285843B290DF2593C892D1A3128ABDBF2EC9D0DFB388C64537
976DDFD77CB65ACE9CC62298C9E0EBB3CA79BADDA1699B7C15E3901C8B8338D3
66BAD1C50504847C570D0E7B613B7BD0E4CD472C8743BCAB9DEE00C5FC9155E4
CA2EB7F9953D1B892A71EED9D4719650836F1CBF09ED961C42133F190B315355
AD934C81E3289E7A7A53E0203535C6E02826E66F4C12B6F217402A0DDA78461B
B7FE73BBBC14AEF08E5BB34E07EE913193B37CFAA9ACC75A695546E7E7815FF4
109450936AA4024940FEC0339B0F5ED042245BFB84E87DD1ADA848BF74
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: SFTI1095
%!FontType1-1.0: SFTI1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecti1095, tcti1095, lati1095, lbti1095, lcti1095, rxti1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Italic) def
/FamilyName (Computer Modern) def
/ItalicAngle -14.04 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFTI1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-94 -320 1401 937}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F3352947BD440B27EFF35014E69B2D4A1E3E6C11
B5BEF15F1C9B9166BED773C0A7F7CC50982C77DC7E78F250433EEEAF42CDF094
ECF6E1ECF893F6FEE69AA0F85D5DF1E7EADED78FFC156E291628F8CC7804F06B
62D3BA889336AC6ADBE1B7D60480CC1B296F9BCA97DE33DCB279D6F0BA3D9A77
A23E61EA065CB50088BC96CADB967FA8D5036C8555CF1BC24BE9B5A5ADB87A0C
376E0A947BA6CE72C317012D37F8E705B41B5691F1AF74AAE195FB30F963A98E
AC0DD6DF90B9446767E26BFAB29C5137B9577FCF00D8436102AE83B626EEB40B
237373200ED0F4E65426EEACA520A1ABE781A97D898FCF322DB4DCF6BD2703F7
6527C76B8CE52F64CE259A3E658B4C11AC2E62A7850FFC2397A96AB26D8425AB
400B67D191412DC8B3ED0D44E4B64435CA93AEC6BEE702B9D3B0F59B7B62E6A1
534CE9687AFC4DCC819CC6A624392455155D18510B8DE55E94B7481F52029839
8EDD33F49AD664A57F6C46CCC8AB92CE365A0F10AD75A110791CCE87579E8BA8
401BBFC529DCF7AA05F6081653F573F5A5C64D1888F358456064948CBF73369D
4410E744F4F16C634FE8C6E0C1E02F218B069277935A3EB227108B9B7FA9D78D
563C5890384F13A6E29A14234B37B223148F9C270579849E707C6A729AB49070
0D991DEDB7A769EA9B02F440D64A25EED7AC2391C75AABA074E9C0DE5694943F
F24CD11B385F9A7F841A90FA1D29B167B93D2E6E8CBD8C8644F23B91ED808FF1
AC0B20F3B1E8BCAB177CD2C4150CC3337F7F155B4B4D4BFB94C297FB4F086FEF
F483A1CDEEE2999B2CDD410F91739E83E0697CACB1B3AB30A6DC21BA304ABB74
217DE4C1EC9338D223A3DF7E1768ACC7705FA00F385367B5A9B8E0C47795F63B
242F6ABE5AE0F8C80B693FB3C0B62F311D604921DF699339E66CAA969987579E
8A918DC988A276E12E9C67EEDC7975DC18E124B2CC9C3CBC78B6B9721B0EFC75
AAE1EA70025BFD7D46F32B1D7B6F31B19308AD854674E8E633B19E515B7487E0
244766EA80C49B5AFA3CF62FE8C83895DF76F1EB7201D4CD352C60E0B582C315
9DBAA8D8D555951736F335571044C99AE13A7BE3846CE587DFFB46B03A05AAB7
9EC5259F4100518711508FADE23DB3AECF6D18E4FB7EA2F8C7D4D3CCEFD53EFF
5A81503E2193F8CA49AE761630234C6264EA7286A10879A94A8E0ABDA869DC79
D8039DA68E8E537444EDE338F9D52491BC7C3DACD5F696FC6E2C9EBDF9384546
CD1455E98A7696168BF96803F84D99BBA968096F1F47F1A85B4883BB0F056412
B5FFA260C837D76B2BA0DBEE2FD2CD5DB87693DF4628D3C5BA11F92A9D089B9E
3997BD1D12C24B426C4170B787ADF98A1AEE8FC70A83FC660BEA06BFB0907665
110DD24E2533CD5D4DE60B54BCA110E3A914752E4C9645755997FDA22253ED79
C715DB64F995741E08C8FCE489055E3A5183E69E7E92FED95B5B2ADCD19A56C7
D2A494AE4C7D41C3B93A0C3D8FFA12368BDFDC6623F15CC55157C8514F11C4E2
D5BDA139B8A3086A1CD32725C2AC0A7EFA47C3B49BBB946F142B8CAA017F2ECC
C26A80223DAE6F2B4E6348485950C8BFBF4C7E314BC1F344CBEF372748CEB58E
A38F6B50DD11C600E83697A86569A5B8F4E042D1D0DDF0A49EB8F719F98BB2AF
77028D97121D3B83F8FD3DF142CC9C0DB259868EEA52E4F9C7D0501AF2160774
C477DE56F6559396A791D9AB3E12ABD640B5C12B24C67557B49AE868C289E7F1
94D9CA3F7B1DB6FF17B72970E7BEB81CBCF81E2BAA51CE0B606EBAFDB03EDE54
39BC94B59035CFC5D31FA9B72C0CDDFDAEFAB79879360490EC08CFDC1B982283
844BF6CB1641369CCCE9B4AC99645B05468A28C650E3F6C38E01794C436E4983
49A2086F1C6127FBDFC9B769A926CE4C6EE2AF0A4B6DE0CEF2F2D4ED62D967B8
47DFB274BEAE378AA9B7ACC258393E4B6999DBEF9864BC27CBA563613E39B2DC
806B963D219C690F3E776D2A009826CA2F60B0166207F7F13471F795DC71CCB8
6A398ECFB4F73F14B33508120DF1AA7A65AD4B5FA847723B6151F038597AC6F9
06D796CF618681CAA89AD5DB8488DED17A1C92C9755BC004157070EC9D4D8210
106F8717D02A15FF3777203D6895E2831719E406925AD428839F8C60F212402A
B65F33C60FDB1228C5AA01A9C3C43912A7611D63F0706BCC02E75AE552000881
576971CB9E40267EE1B33399F76DECADA8ADF6F4F129D985A138557889773ED9
A0316BD6A9702E5BE4EB325BE917B05C3286FDA0F401034AA3CA412243128A17
FA37115F9D3DF5ED49D39694FB7989B04C5225834F2E921D2551C547E7888556
A5C31F69E93555250A407522507894FF25A6E389CE3B159971074B01A8F350AF
82AC7C975B168B9B471E639E5252973F408BFB87466B7843770A5370C00076E4
86ADADA8AF511EC5FE37D303ACAEC538481C2F3F2E6CB4FD94F54901767AC5FF
37F848981ECC4C92B193A48682D940369E1D74F535D8F0F5EE3704EC9E5060FD
20FCED2FD021B8CB1F37458E480B6A70C4722E353B6201E1F9FA0835771023D0
D8B8623EC1011316A3290296E49751335D623138C107D7B3A61A59CF664B9F2E
4AF3D5C3BB741AE73DD94A87FBDC3B872ADB914D50642DBF74F1EDA77911055D
9390F968AD89CFE5908C8081A764315D75B065F368B41BDCE887D87E1FB55A70
6336ED138DE60A45794B8E5FB0DA550DF4F3E5F22A007A5F489792A95DC1C12E
56D55C4B133BAD6D6F820A71C93773C87138FA231A72D8C3318DC55D867211BD
B1F54064CF54C8E0A98A559421A0D77272A97ACBFE4003BED0D87DDBE33DC173
31331552581597282F336FC8DC403422420076646C76AE7950F807FE18DA2EED
9BD5C5B5A13F65908949CFD24B6EE86521FEF0DB90FF2EC2C24980F18178AC72
0774136E522876168F0071D5D3B0A5A3FAB3255F89CAF1DABBAAF5474372FE88
2318A0E0AB081537DBE6687C9F116D1883773577F25E37A07F94AB3C8DDBAE41
33D073E2ACA90530147A410B9B623049EF92008CEBD1CDAE738EDEF13257556F
E4C6CD0A28A89F42F2A9AC6BEAF308F3F5F6F20A1793E9BD4E608BF6F493C888
2DC272C320A030E77FDBC524C89B8DE97738849D29F1CC10C623D090FCCF6D6A
D5BC85E24A9B5A0ED075D4506BE4E3D2EB5464FE00C9274257C3ACE8614D29B0
82C9084AA27A9F0845EA1FB2D13573DC8F7B8C141FE716B3B8F14EF700A4683B
9CBE917B03B4AF9509CCD8A77E38A4722E9ED0460635D4907BF5D17D8D207E60
3304077B139B5F181C4929FFA6D67DB288E99AD0A09488340D44040F8C180C6D
51ED5B06D03E96799B8B60BE8D5BEC4D9570DA13904FF1F6CAB70DA3BEEACF0F
20ABC78AA0E4A039F767228780CC2D527F333B8AD05931490409D02D5E2F3727
B47EB3D7F491385112D3684894909837AA8C8AE9FE5120547C39B0EA13178EE1
E6DC8B7F718C3FADDD68B93FBB1CFB1C9B78E3B00077A29ACD56A8B61516F4BB
92D8F73132183E4E53A5EC72D3196F99FC3E5BBA3DF8A9CDF7EF2F950905A893
19B120BEE7DF43462AB867281E5AE7AEF68D8651C0DB21BB9E9D6CB0B83C0028
4F0663CCC454A1ED8249B91D2C8DDE8808DC922FBED4F630C44F612C414D052E
3F457674DDC1E8F3C5FAC9AA73D1724C549855633AA1E2408D36E945B51006DE
85D26A58DE78D6A3337677A7FE67C22EDB42939C4A75DB0DBFE185E6D9510BB6
13232CC88117AD594831A7FF318A60EB09C54E5C70F81CF5256D72CCA3E528F1
FEB29551BD89557FB4E93ABC3E7D6154EEBA8AEC5D3FE3D8A87EC7D1C2007C05
C459649AB45977E51B59C58B51B1E2EE23CC1CF652B0BB8894C3C25DE1E16D4C
8C7CD982EF32EAC93508D544A070C12F7843BCDAE45C2EDF2523B33A163C87B8
3AE0904B4B59324F7E82CB87FFCDE8B4D3B65CA28E4E3E6F9B6FB6280E7BBC37
2737B3D6032D10B536DF4AB5AD5A3C8BB4F51DFB19C304271FAEF7A8806B5485
CFC38A25D89F462EC5D14C6D6F457B27AB65FB6F4D4974FD0D74A025DA1E80A0
027CB712C1049B9885FF5CF691083D60CC2360669F73F90E6BC74E027D50253E
C67BFE723E90E176A344AD1F6B03E6F827E80FA36F167C7C033356F1158CFE83
C4413CD2F16FCF2714606147F6941C73FF085450DD24D6D731C47D64862E4AE8
7C8DFEC20A825A4B2523E1F4DAE5F4BD2E7F84F3A3685AF0DBF56B95FDC6A3B3
4E845149CF8548BFA569616EE7776C1B6FC939C4410F8E600052F014766A31E2
C1CE689AFE8C5A61E54D097BEDF187741C051270B23F20E5D851282E256A9881
1182044AF59E3D1A0EA3A059F6075A69EAD7D13FC2039A0B7A86875B92087BEE
D5D3B35C390565F2C1829BEF90B2355F36CC8C1A95F606B4862E3F711FCD6D60
BE476655495DE81AC41011E99E552F82A67791BA5B1FEA486A7C49C6438A4826
7435901C7E8272C8A300F72A41B88EA4E678EB468ADAF74764699F1D1E7F9A12
3422F371DBD3954CF74B71F3C3D54D966E0D4453A4ED35A539DC0F713FE7F90D
BE639D939C419BCC6182DF2AF303A9C3C43912A7611D63F0706BCC02E0FC1AE0
116C342F852AE4F0E096C8A45D7EC005CD3C3C6DCEA8E473C3DC5A29A2046E92
84164A1706AFFC9A411B2304528D02BB80E80546016146140492C221449B7485
586ADD306601B8FA5E4FFF3B50336C56A12E90DAA83D5D23096DE12FE4D67B44
9516EEBA80273745D4338686E17B61CCDA6E28C1B0A7285A231D63BC6C1EF53F
4AE4ACB34BEAE3C8262035C0E68E14EE3FBF532ADEE1A0C8EE4943DC71A99594
087A0AF3051EE9FEEACB542ABD1410D8C03AFB3029ADCFE5C058F267C6947A75
BE06FFD94BFF471B4C5C22003A87B6A6EFFBA4DF336E2521A057CC3C1060B74E
A863759A82C9D3F17AE9CE3A916806476C35617E8C9A08231D2920B26FA3F536
F3D01F2D2AB426492961BCB7BCD0422EC6876E901F3B25335BF709FC5DD66AEE
E427EEAF3D3C4B2272F5BAE4631847C3E9B31D3FB57FE0A686155C8F5A89348C
4D3BF50158B0F0A5E2BCB827E917F17E53BB8C2CBA0C9197E2F706979BF74311
BA6EE8940887E13D0D965AAD25730449352FCFA783A3E4D54BBD60D94F41C22B
5453AE8CA6B0359F2B3F7356ABE20056B3DD423BE92D5397317C7F381777E4EB
C7FE7488B917B7829C910CEB15799928220DFC4ECF5B43937D1BE276D38F9E59
27F406400AB4CECC097BE23D1B45920926BAD7DE51BFA04C761CB75852776303
A1FA1AE15E98B2DFFD0720EDA5F3EF09CA37E81C07263C3C9F1B53254EEF8FE4
3D13D2EE679C1C926F1F6CD33E9C781212BCE4931F8B27BCE943157603B15192
E9D7B19BE34C32D70AE84699D184A6B095B11BBB3AF894DA5EB1DB3B7EE41792
54D0209B854A7E8DC216249FCF4E88F4E4F726757011BEDAFF826D036E4AA122
01F0304FC7B826CFC390CB2D51B630473F71E17A15A21995312246E52B2D1E66
EA6A8DAE90088BEB438CBC036A498E3AFEB8276C844A8CC133D83C5DCB229B9F
FBD30BC896FA182BDAB17C31C4CE7A17C95C439EE6942390F88126C17A44C6E4
689727385DBF150A2639CBB0BCC0D1B9351FC2667B316185F62A992C0F6F3E38
881D5B80450F8F0037E278E861677EC41B4E616C74F350F57D71BD96773944A2
B6234F964715719B27BFBBA28299317C280BF79FCE3F6461B27E1D62A08F0187
331ABA655281B54BAA7B0FE1622896AEA7CBD01066EA71A2F40078DBAB96693D
F2A36CBBDCD33A4B8F34141B4B1E28A7584B8A94F8A551D0AF1F4AF71A1E878F
F4AAB3517ADD9D9B8D2732EDA8600201AFCADC965F59597F2CE97F34D71033BC
87D223FB3904F09038260501AB727B64D2D5641DA6666386B72023CFB302C5B9
627428042215986EF5DA75D04A4C11EACADC3D7496AA7BFBD0A317729E8CA441
D9A2628A0751F3F96EBB39E55DAFC1C94CF72D16E6767047384A4FA3346EBE4A
85034E31FE6AC5D3A837E8072E14A68D66FF21828005E45C4BB4638D99DA07E4
B55CB1B888469DF34ACADC314D5F7F5C0316DBE50B606F08F4255DC048B1170D
95DFDB8CD2254650AE0168174A72E65AB7479A6ACC57704952C7F4E5893FECD3
ED4C895A608E7FAAC01FC9598E9DAE9DB049D5D9751E11228E586694A33546A3
BD754896C30969253C2D66739BD457CF1196CECA8C3ACE05DE85878654392450
EBF04366AC62BE560DAEC3F6857DEF70511DACE5C2141B5D31BB748EB60D7CDE
D19AF21B24BCFDF55B867EC1F8BD652C64236A973B2F66487B3994B788446FD9
0725B633A0A983A647E4DB4C7BE0172E4B31F85CCFD8949A260C1B54206E16BB
C9223EA5D9B717BA5873BE22E5B62E704FBB67C8834136338CCDFA6F9E72C238
A7BD0E5FD2E9D3B5C0E2178FFF383AFCF7F8DB7F9983CEC224869135AA7C3CD7
471B6084069ED351CDCCF9FCA34E3CD50B2F6FD2FC5EBCABD0A455B8263B94AD
63822A22A7B4ED36340CD545E409899AF76C8892B8455521B31BDF8447E40949
59143FC7819A28392FAF6BF7798E991B4B264F42FC6462A65E1D6BEBDD68397E
DA4F79BDDC764DB68A47C9100D2A9BA915D7EA2C702F2D9A5A12D38DD15B5237
1CC6E61ABE6DEA027C700519410D86F3813395A6DCA3D2B293F3AD74717A8E2F
C96776298EEC7D8DE3DB4C880791D8482E9D977385E68FD2F138963121EF054C
B178AEC588C01A3A71A9940D144500275820B208068E4BA2EF3436AE9A03BFF6
1E7F460B4ED9469001D36F9AAC20653BCBFF0C8368A9D0420B6BCCD88DCF46A6
50B49BFAEE406E3ECD28F99B14ACC959B2B1835C550377A634F66B32B8DA17DD
88590311DCF8123E00A6BBC769098B2A6E8CD8C7F0BA982EF3C49DF423162F3E
10CFA136E24679AB3D26672DD8BC930CDCD5551F5C639D9A7B7AC441F71ED6CB
8305F38D0AC4FA581EB40E64E135A4F6E3A514A5D35BCEB6715743F0AEDEFB06
4E55451EEB20715A0647DB52992DE617DE48BB594C4BE607F5FD988BFE874429
6B82E00879E7B92CE50B3BEE8B7C26856BDD3C2F8C0A71C93773C87138FA231A
72D8C33186781C1397B973A5D7803790D72A65F33BAC4C96DDFC56DA9AED4FD5
3CC02EC96851B46E687914487D1736A4484C2FAE78B968D5F5BADA12E05917EA
91441A017EAA8F1F4B2F24793CBD1420C18A1222617B120CB7F7AF8EECE85DD3
D9556CFAAB0537CC8B3E59090A7EC95513D077AED82C96F3A8D3218A55DA9593
95C58AB32F79BD9CAAA657A12C8A0E7587020F108C8E0D4A3F0C3CE8A597FC9F
B1A5444DBD6465AD69F3E231D1BB06CFAD8EEF1AC1693D116D5727C8492D7B6E
16679FFC2805C2783039DA41CC8CDB1257E6EDDC13D3D7F6C6D3600DCD94F6A1
3F16C2CED604488608E3C7492E5B20ABE6A0B35C54937475729140022D651196
BBDE507FF6828A498FBE8B174FE5206FFE45FF2528E0E4F2E39A335CCB98286C
B50AEE34371B1C459CEFC3C0ACA0961A595FFA6B31BCEDE63064A8A8DA43F3A7
148BCD13A91E54AFF9243802B91D3393F0F8679BC13B7748AAB20CE409684A7B
8A251EB7AE08654BEDFE5ECC8944E017B54F23E754BD8357CD1B60A951D71363
A8370FB9A4946821217A986B776577C4AA8C1D35EC66BEAFBEA0E6F251C55904
71B9A02F00D1697E844D9A5F91CCFB58129B28EF118406138237886822F9677E
B97065AA3F4AC00B0383F67832F8939BD98C3465ED0C92E1D4325882BCECFE99
AA6BD9D167BD7E5305F6346EA8ADB8E2490B8FD1B92D8CE067C5FA2D25595969
EB32277A2F3BB12D1AB6AEE067F24CCABC332ED75CB489CD69E8157A86D7A280
DEF90FC98E52151145E9E3A5559C69E446C5E9E94751D112CD87710CB93FDD55
51A98F338822AB0B8DF916E648D68BFC76756BAF902B8D65A66B3AE03CFCD3FC
01214D65A282C7C6E85CEE116D6B406DDB0DC4B49AA7F51CEAB967218CFEC6C9
C21B4AA541D8CF55B98238D3D1965C53AFB1F238200AB5250B8DC67707DA864D
9B5B8FC923D294E8B18C7B8C412F4ECAE923D009D2B8B4F5A62024FE72EAC115
21BE1C76E177175CDA66BF46C25E8658364BDD9AF5E396488CF1F7099B6A263B
B647AF906A9622D12AFBAB045C3BF765E8ECD753CDA8353FF24A48188ED97C54
81502C5D594747D6AE413523BD158E21E5FF5678CC9DE4462E2354EF812D4BC6
2C59AE5F1C011F095275D4E9C6C475E9975FE2FC268AC9C3CBA20A2A0E2867E7
305A0836C5C69B7CA69834DB8B78F23A29BF9842C0D70BC613B24852EE74328E
DFD56524385F038547BA353F19CFBD3C3240F597DA5811CD47C987E6D9510BB6
13232CC88117AD59483303F0A7C141C8C9612881C3E6A4271F2B6B4B153EE03A
61F051AFA2C2C79BE670E36CD653AD3C8C097E09533C82ECFF5045C4FFB9C714
37597BEECAFFDAE6B079820BDC7D30601B03EF8E7DC70BF2F2C0047602E7D57C
139D047D02FDDBFA44550A03D98CFC0271A032580BB3076EDFAAEC7E4B12A77A
599DD7C487841B07100697EB7A46FBA5A77878BC4BF1634E724F4E2277D88CC2
F21D2AD4A7E527ED4B217DFB9A070D3419710D61329213E3FDC66C9A96D8902C
26CD5282FEAC8420C9705DD8F660F1880F19FE0EEEAC83D260183C6ACCDFB41D
519C8EF5A14FAAB46056FBCB21C1A4F4155E7337FD161712A7BBEAA3CB60D79E
339C6665D98AF2785D593FD902C2647F8A5B917701C3DA1CFC8367CDF2049460
97D6971616F961E9C9893FB78CD3176E60B089038868EE90A4254212C3A74EF0
E1433FB5D4DE363457A3B444418213CFBD0C436F122DA29F7937F9DF00DC3CCA
C9A77E940370E2AE269E64BDFB0C5D63ECA9FD5B315269380DC607346F415D47
4988781A7C4A23B4769554546B1D3C5FCC7827A6DDE099F0AFB31AA2FF958AE1
7E8EEAB6E7AF00CF17B771E4368B717A6973F469786A7BDA946D33464E7EFF3C
FCE4A3434584F6E6D2E8D99706ACF610621ED249A09E1E0BD13A85DB163801A8
D24400671CD13A5CA38F8C76151D09B42AF159D3299B3C9398927373F03424FE
A0EBBAF438865A2553DF2CD879762A1DA2E699AADC2BF18D3BF1C7AD724CEE70
7A63FEEE7B24ECDD666E4410F2A9AC9EFA16753001850BD31A8B4820F5CECFC9
BB03BB64EFC69175F47280A1D9DC9F616D6ABD1C70EF1D7F5DFD2EFBD95634F6
7D955C3F6695DC266B84B610225A5AF0545279FEDEC6CA70C32F297A56F42EB3
49690DFA37F2C547AE07F9762A049FB776F143673A0E4190244B84241A7F5249
89AF946CDF1901B53445CC26B3E501CB5D74D411F05320CEFD10D003E90D3372
7DAE56B44C23EB633092316912DBB68E47AC5053754022435F496C129EC1886A
C1485D64CCA607C6360E30EA541B15014882FEEC8C951196049A58EBFD0BBDB0
B7618FF26C3F0F54A5773D4D32F435408E0EBABA09D53778FA92CF551BF3848A
F93CA2FA7EADC461B2ECB7C0E6BEB99E4432E703A6822EBBB7BEE509F9CE7D43
5F733D362AD9789127D2DFEA9311AFD0E2C07F20C92F99CB8EADEC0DAE8497F8
BF2BE6465D2056F1B865C905F3F290FAD868B007214F243E57512495CD79DCAD
9667C0EB2D87AC2BC3B697B345E1DAEA9617A115D3F7DFE796B95AC00C6D0CDC
5252943C7ECB13AFEA4AB933168304814BDB4053EE6920D25EA394ABA08EFE3C
136E5DF979C3A4D0E7F45181695BB10DC043CE71093E160F1170A627AD20AC8F
839CF46CC98F0C4E674BF56CF29D06E0FDEB52BB3E9D43056890DADF96184AAE
24AFA3837F7B258BCE3149285DDE0A8736716631BA515CC9531710D8FC3486F5
4B9E4460809E7A40EECE886F8E5DB510FD40177B4E700546D34BBD3B7CBEEC99
D11D36DCC723D2F44764C2847FB9DB9C76B854FAE5346FA55CBA16FB2EEC1965
E92C4A5EBA7CAAA8502D0CB3DEE6596BD8074938D8E396F3C16767AC9B5B8C36
54514200535F51BC5226F84C69C6572B20044CB10D4F5E8E6D341776F5D4DDBD
E65E84C51724F312EAEE1D015626A449BCF9CE8E95EAB216693978F2A79F0B3D
9072C3E45ABFDAE6EDE99697B1D12D6783DA3ADA12398C2E26CCD1364CA627C6
7E3419BE6CBCE47A0A64E3B93CE5CAA9D92585E96C754AACE5D87938B75EF303
6B2EAE9B0620A5F3DCB2121729E403E598E0889665BFD5CF095DC10B658B1D2E
CAF07088141158140A98E34B39934FC130D35674848B8646BCF4E6007952C532
2E029975196DD2A55D1A49C31A8CD0151DCB3F2E59952ACA930B94D11F39882A
536C00BA8E828456DCC4494C076A2A46C308B15A58DAA3AB0588E6C8FAB3AE95
3E4D648B1E0950C172E175C64DE59E00E9253C9B160D225AB9A192D8C4993C31
22F5EEC98D02ACF9EF5782F946289E1EABC3CE75480E5EFB6D37A9D273567FEE
D3A092ECBA7C89826CCBE779AFD59DF01BA0531BA38D053F96BD81D9BC9C1178
CC62530769A9D2ACD58AA7A9FA9B05F2C4935AB85A481DC6621C8FEF38317F7F
EBDF4035A37C5443A72141EA551B17044FFAE2131C80261F040CF9D08057C9CE
D8CA113E9E64339B783835D7A483FA023ABF2EA2EC0062420DDAB752790F22CF
A006673C9868C2D68770397C7B4173F3C108516A643A155CD6A023B6D057B108
12E2B8DE30D360E95B57B37CEFB826F9CECF5AEC62D38AFCFA1CE7710407FB03
0F6793A4C188EC48CF30C770953922F0110B890971A82109757EC2204995E836
833B9534EE4F2DFF67ACCCF6FB2566A8CB8DAD25514B17A8D3A00B02CB1D6852
8DEE0B13F39EE53D6C19F85300E4F50E5CC70FAD3A21917D15D5DD3885706660
8B3540972516E89EF389AAAB4A29D2D12E587DA7B7689D74E0965F73E5D1BA43
78DC13FD7748A8A033AD88D8FC58638756AA3DF2C37A7AD8F7098BC76CA1F434
A836155F639F4433687731426096B8C932D124F745A1B9CEB4C3F2D261E30976
09ABC9124D1F8F7DC7462B37BDFF67A1828DC4A18FAB2F587C4B26252957EAA9
071AFAD0F37974B4489B96769806E7178C9A6EA49A6A85ECF5FCE8F7277436BC
5777E2588A75FAFB56134985BCDE3F05A9601946489EB29D284545E813F915BE
287AD3CB6C0CC46B881F3D44A1BA2AA9D22313A772ABD2F63BF7941C73FF0854
50DD24D6D731C47D617B49F7B947784E7034070E228B10956579A13E6479E718
0BC8EF3C4494BDCBA10A671C24173D97119C98ED76194C28DF9541B3FE516FE6
3E9A7E2E3021438A2A99AF870E06085BD8F72C24AD78257B8244155F5D41C08E
06EA568C747D0079C50FA42E152940689814AA92B7C6FA5A61CB3372B61E4C11
62927DCBDA8E18D49A4A86BE44B4E65AC73BA04CB9B98A404BE2B515F1F3750B
8A58BBA71BABC1D3BAA6C858567E7474557DE720D36C3A292D96E34D669BF548
EC241A2E450DF9CFB18724367DE90EBC80A55EFFA174FE37CA309E21079E15DC
DB8D5473B9E5794D0EA75B223F0431F9D8AC61F328BC0291EA9620DDB62D6507
63F5EF59E908C9F5755780852364C58A3C78877F7EDAEB65D31D20DD7A418B82
98E0890B6E5D5B346A7DC9DAA19FF9560DF2AA46E1BF724CDF871CEC4FB72422
7DE543BD6F3D503F3C9D965D38861E95E0B76A9F7B6CFA6FCB9D760D364FDA79
9DD16AE7CD2AFE564CEAA6CAF2FE4A8698D03CF2BC22C2C7D09E1D0D4D02C3A2
2961650E1EF805AA5A8605DEC5A6772CC6D8BF386AA6BB05062BA3BBA2174F6F
444B6E5EC012E3D57E08E8EDF429DE136CB0297B47A698F014DA6A898E9A42AF
E6A232B0AB0D004DA8D3E5CB3CF816719A53EBBFFE4FF86001CA4EA354E74DBB
E94CAC3E80E30F5956E59BBCCD8CB6CC1E820CF9FF3C955D12CD3D2CBD017F57
EC117AF693E5EABE248A79B832965AA2A2C6DB953ED292A11ACFD13CECB02D64
A80F0FF82D718BC9D2AF8AE783C3A191546D7C03D407DBF4E83A2E3CEB02EF8F
FEC0C1906134B72ECF1161D02492F28F86F315E4AE752A259BC950CD62C14CC8
BDCD211A0F749A4A0F3DBA016B0D7FABFE10B91FCFECB4338CD458C787BCF52B
E0F4B0AFAF713CB69985E9F6DFE0CC365CD1EA958BB8AC0EB9574FC830F54150
875ACF9BCA17A2D508D809FF461106D38A58F697B11A571FC8809B06E0826395
0FE459B91B7286DC0BEB4A99A1B97687787E033D315385822D64823A84792592
1AFF53DD0A9F56BF188DB2D328F7667CD7504E58CE271E9F5B3DE2ACE95AC6D2
12D85553FCA2937BCBD3C4947B9E8079EE91C9516038B7221CD06546071A6D85
EBCA5F44252B5C8FF19C260C1B54206E16BBC9223EA5D9B711803159675222EA
EAF7F46D139D5E7DD43E0A5B10F666492E81D87DCD7843842B2B78841F953C30
20418659DEBBA8D577CAC5449463E4BEA0FE28119CC0F6D54DC3528431EA8C9B
1EA68E9439216F085AB9484989D128B1B6694129DB89AA7158495B3075A43E5E
8A3C4A10FD40EE2F36CE7926F7BC36D5AFE2DF2574CBBF7165183946BF0855A6
70570E2E070A5E8A38601D62D4246CA0155F555F648D9A38F5F2A2D799B833FA
120AE1F1531A44D405183737CD197CAF8519881DCD5400E3F19A968906C243C2
299F6C60020B7F7C5F985741536B76EC6C5AE447C9961FCF830504AC31D5FBC9
A3F67D6ED281BF28F79E1E1739488801D3305D2AFC986B0B13CB822CF801DBE0
50E82C37651B1F31AD03BD11759209CD94333068BFF43C8B73F7C9D68CF314DE
4EC1350AB9C6BAF7DACAD8E80645683C7598990B5288EBFA21BBC85EB67104EA
58F548CBC7EDD44E0F33A2EDC945638068AC6B80301B341045978D34A9A9978E
ADE5F55C85666FDEABC961FE2354A39A635EC297192C2CA6516E19D7710CE3BC
F63765842E4D36409033A99D2724FF4E27E7D278A1CA1FE7C27C18409596D179
901A919A4BF622AA6BA2C4E7191A7610E9D59C2BE31AA1C5765B61E6CE122BAE
652F5EC5DC3AECADB99F18BDB43CB2164AA3649D1F0705F5A91D094AA8CD467E
9E59FD7FBD0D2C3F37884A94A19375189688B0CFA983FACE86E0C6FE41B83C3D
76B8CE2A20F23C8EE99C6681A6E7A48AC58C6E8ECE9BA632E7507F9B87D46A30
3CE0EAC23EB789A64FA39FA7CF89A7BF6988782C692B6CB179471B891BDE8E74
43BF0504766A5F279331AFEB7BA359EA1C5E7ED1109741E8FE799CFF1C011680
76138353B80C61DEB9317FCF4A5D69B7F23B32B922ACEDD47C98A9CFAE5B431E
DD5D6BFEA0C061FAA09BB6C117FAD1A7B8FCE5E739CDFAB64E94CA46C275A7A8
879DADD95446A87CE61BDBC0CA81ED1DCF63577C46B38A4A09E1B8A2CCB6FC57
84C062BA29B211CCC182F477837E0829DDDCF3BC11178E8183417B87851F2B95
9DC637E01D835AAD8DF42D54E4C4120892EBC0F85F5B0170E1A55614D792597C
0CB84E040C63CC40806D569142C9E718E405760DB81F141873D6345753FED57B
69B8487502CDF96CDCCC2E6C5B809DA7D50E96B1EB88297CC97526EA49632D09
59DED9238F676A2E5FA084CFA4370F6E780467A3D43924F1AC2C3EBB0FD839BD
AF855ED47977E034C891A8CB5DB279114AA709332854BEBCEE8576E76EFF4091
7FB0D690D6005BFEAFCECEDDA1F3DA67868280E5E3A7DAF71390EE271D2BA5DC
8995EE33CA9DDBB6106307D092DCC56A26D964EF387C9FD4AACCC343705FC9CC
20620BFB8EDC83F7B16767610905562E92665E9E4A14B82C56FE0F7936B97E94
7E1BC627356E18D1574188C5673F237095A3289154FEC8FE2BB19CCC3CD52854
7BDB924556202796EB2028B9CE6DAEB974689851A9537A6A08D12F86A14DD4A5
C7DA308F5C5C3C71588CBC67F8C79D2C26C1A6E06D6AFF8BD5181F17533F759E
D5D802B04C0EAE0F92D492FB8F681512C28FE0DC5B14C5FF161630B03785587D
13DF3FD8A6A91993F1B4BD15B1B8754B4F0E7EFCFA401294836F632C783D0B99
B587EBEFA36A0F29CAA3AF558B24EC170BB5520F4825B34770906D2220332D97
27DCB176C6F502DA19B7A29060A657385D0E63A1C01B4BDD1B9B310B5232FF2F
FC7B6CEAB16503D08FB97D8010B505F83642BD56F1D8BB63E7C96E2A444E8993
B9C4842B57F35F11A3479B110B078F87BF7A118ED4935B8AE2F67FFDE72151D0
844E56167E6CAF4C09F323457D3728E66E88F43E2C88B89A0E99F3F459128B5B
1C9FAEFEE5BEEE1F9445E88C4F1C60485FD1D4A65861C14DC0648D98591C6493
30FAC3A1CB71BC1CFC995D7F4508DAB3A4522D0B8F81AED807A9E5DC97E9D4D6
29DEC88493BEA6BEA39EEF256D621D7887E6D24D8553E18D5C5D184BDB19050E
0A0D9E16FB8301CBF09A3BCBD099E7E3CCEFB80E8892C355D087FB176FE119D9
57291CCF0E9F9DC43AE5CA27652359E5B637D3D849477848A8F2B885D397C847
53427512143BC6240F67EBF898D0459DD5B18C4FEC349A29B4DB1604D7B6683B
6B551B455E79A459D34A4186344F00034AF1BD928CE18EC6A45ED0BDF20D42E5
DC4AB2B77262FD4033E3D93750ACE1111FA45A02A89570D6CFB7B03F87414262
4E82FE3E98F6AF897E5F966F6B382A603DBB8D6B2A70A614EC898EFDBCAF8DD4
277072846F1570C72A25C2A14F575FDED8A21BD43EC2C275EA600B44DCAADE8A
D17AFB95FE50103F0100A9C2656B3F87A0CE1D458591A88B2F519575FB2A6EBC
C9D94E0787D5F083F990F21A6E8617DD8B7F26F881C130F766695B7641CC81FB
9CB4AE7D11DB364AD42DD988F488B991E0784EDBC5C44DDCE728DB55A59A289F
3BD9B27BED801BDB5503ECA5CA374B626335D3702640892078A28B9AB23AE66B
1F8339F2D184B55AC1CB0172BCA0F8DB437B0EBB558EEE26BC446F968D159872
E9A32A5562D089A65A1F1825E2CEA774CA60D8F1709FC601F34DF1C5462DFEA5
984EAF9D2ED885CD0D47132C98D9C8C2E10FA573F2D1E0565DE2E2CEBA5F31DF
A6E584333C38C76AE4DCF2E781553AD92A7EDEC8B2E936E49FA5E0DD10B79E40
76D45176FBEBA106D027B1300688E62623CDB05676C5D84907E75C1D9AA3B0ED
C13FD0369D64F21405F98BAC13F055A456D1C268CBEA1CB8112A4CFB17D8402A
16B2DA0059097ED2E47A9725EB468BD92D3D953BD70129208909B1597C8379A5
353966FDEF10C35BB479287F2FEF81F318557DB3DA9711ACB1F3706630395893
1ED71B3706DEA9C0BB508DBCDA407B3C74C1A64E2144A435883E2F8756D5937D
AAC125CB09DD6EA33C8B0386A1505F73A52069D8BD5AA8B64CE12688C3A98F32
6697965BC3ED9A4C651DF7E3FE3419D1DFC9E58F7D86C55BB15DA42E27FFDFC2
FE7B4C2CAE4D553F94AD63822A22A7B4ED36340CD545E035FC2CD23910B38098
CFD1568C4B2107ECF736883B8F3E1B7FD8D21090480C82F2BFED7A0E067F9FDA
59284049D69B9ABC11C9FAC6F2E98D5225F06A669152FC3A58E6525C9A0C15A9
C864BB7BC536E3C2AA46C5ACDA2BA48264F9A14CEA23795838831AE0EAC09A44
5F938F01E2763529B2D2C996F6D1392A044B7FE2F46D1E2BF5D231C885FC0046
A57FE659696388D9AD4DFE2A12AB3514FBEB17AD4851450A6A9B64335C8B5DF6
34549D1532A8EBA0D4E23BB092357DFA5DDE5294F7D633D7F20EEA683779153F
8DF73AE9953DBFE4D3BC277810686137AB4F58CF925F7242E54D4C579AAF814C
1F93701CEFDC65A0541BF043EB89867B6EDE53822B4A5D535C279464DF5DEBFF
5AF6E5E4D192A09E421D5A31B75764567D4B68699442FA8DAE6AE569E0AF983B
DAAAA3D2A8CFAFB7D0069B260C1B54206E16BBC9223EA5D9B7136671FFAE88C5
E56401F247DDB5707060196742FD4AE2433F68091FAFEDC6E2540410889953DF
BEB3D6495AE49B2DCA67ADF52925C781633A0832CCE4076F1D458B546300A0AA
022A5BCB5B34CB12B7F02B47DFD98B61019E9F68CC6BD6F513909D28CB3E5AEF
9A4F19838D34098B3C2A5E1D19EDED52411C46F1C06586C3B97C3F296FFBE0D1
43624C9442064EB09CFABCD973B10252DC8E0F56B84CEF3C03343A62D14436EB
36CCA89AAC779AAA194B50FE61209726B25B523D8247DCED30C5F4FC3BBA8CDF
97A19BFFBA4606CF3FB76BE24CD6EDE37C8B985D783FD28B1ADC066E851575DD
A34F7503A6265C886DAFA5666E730F71AD36F6AA937D6625C6A4B20580BC8778
54D66B4B0230C67883D782A549A697EC91A267DEF938C0B41C16824F5E17E27A
4011C0CB02559E8B90B384D75DE481AA11C262E73BF8A044314202F65A0A69CB
BE12724660F56C75BEAD533D5C68C0CC0C0946086476010D714CB24064C1419B
C73D90EDC6C9D0C2AD47B679838CD6D09373E4D2DE7B6799061D86AAA6CA373D
51A24B7D79EF802A233EEF3A9C9682696B34D7114B90C46081FBD3C2064534F3
00477BAF10A2B6CAA8AA5CFF5A751E3F95B9158B3A310411009687C4DA5D89A3
160110CD433B49EB921DE2AF489256A73D24FBFD85D913FA76321E23740B60B6
D6B1F7ED83D154E7186F5642563AF254FD6FF7270575C6C4E1913A0B63A3E9A8
5C13D2E957603462E745397233E10A6C56AB5558A3B67B5F96B1C7E5E1F8DE63
76EE3FD5530A071193E209360C2A4A03ADB32AB73FC2A199D39C2CDF865F8D31
90AE74785F79B3AC0342BC6B0E13D3AA778BEABE5E0B22DDD75102D7BEB565C7
C39266D3E4A180CAA2D58B882B96DF0C380723A139307AFE6498A74467D7EB54
28FCFE66E2256ED7410A5B3B359FBC14A95264413401E2B1C99EE78D73260B8D
B914DAB0E6E9704072EECFA48489FDB971BDB8CF6F098D21ED468F3E9D44276D
FFF44152ADD53F4EC99083FE019357F5F38B219ACF3CD56F7C7F9187B69F15DD
E7B3A9E1899E32A926A37B440D0A65A6C56CC5D185F4882C74ACDE05AC83013B
6D49888921E4560F94902C4EB04A126C2BA2487ED8E6E56B4EA478293FAE4844
9785BA660D49172E098D8C517DA1BA5DC25236FFE9977F09630EF1B40828C991
DCAADDC6D3F39635CD0EC2541023C661DF1282BA2644E1BD70C1E35DA33227BD
D675C0E67D55C4FBBA8C76364CF78C24CB440B646100A76BA1EC5682F6460D7D
2A9164587DBA6DDA6D6D4EEC20824BD6B6F391D1CFFCE79F2D98C7A7D9183C5C
69289918672655B38B560EF99BA58FC9EE39AC09EC60552DCBEDEF4366F1E5E7
2A5E762DB87122422E1E73FAFADAD78125EE5498B3F8D1313B56A166754B75B2
FA84A4AC46B1E77D3A3662EECEF626D408BDAA3699044122FFECB23D23F12093
EF21DAC4222BA93BCD8588CDC4486629F1546E47398891C7DE75447C98E9157B
A2EBC0A4FAE72F75516CE66AFA285AF58641434528F9867BDE8CD0E4B283F48C
05E78F47CF5C678F54658D55497DA7AC2F39ABC98884E0A51ABF7D6B36678722
067D837D7554E118AB6DA3F544D5CD8F8DA9EA2673FD35FCD2CC09E75AC466FE
F54401B7FA5BA81CBDD4A9A4810B454F4CF59FBE1C0241721891A5AFDB246486
1AB1CBC0DF36BC9F876A7730D984FBAF9EA86967CE0A9E6BC3B74D807F7DE678
CDC8A2EA59C31B4CA1D1428FA0E147553296D6C4F7A86BA988D63753E222E635
F580687BA5A33229492316AF5A089B4DE83B8ED0C561C01B21757CA1C2C93E74
33B94133FD5FF1D8822441B447391A605313D50934419CB359528A426DB1476A
579163C7ACC86AF39C0E913DC1E4EFA213029557170DFE24C8D89F8A4D4B4B40
DF2F075EC50EDB41DCDF39D72BE359B9006A13430F0AA9F2676886EB4F46BFFD
AD1988300EAC3064219D4267CEBE4E530C264E170A46BCDDC2A7874BA7FC9C49
7319DCD60FDDF170BD84F20047C83B45E92C1CF20A29D45BB12EE97723CE04E2
9E22B3AA08B065E3444FC2C65B633803848C92DEF782F4698C29F8C95B6B6EF4
151D6DB750B0D927DF2FCA7901143BC1E4667EA8105326F293EE64F0A400353B
FF385891ED0D78344DFA0BE52007437509D666984C090EF7C4C7826638CEDA2C
1E996F9572E44DEA3772632469D8568F819DF9554C1930B7B7123056D5B75958
E9C0DA86087DE12B3B8B1943197297F1792E47F312DCADE1D98F8F149AD9E6DA
D12AECBBD6B24939D4C915B1080A10BB20BEBA9AD6C126A72ADC4D981B65F8DD
1900EAA21DB7E46854E96B7BC7E4F4927A69F6A4973668749143D43EE23A2F67
7073115714060E5A676716C278816A99237C3D3D70D739648BFA82234879B246
E24C6EF2AF45C8DD33098769DE52013284249276AE02350D910731AEB3C87B0D
1E0E259F515B7487E0244766EA80C49B5AFA3A155F7D0A5AAD38B71D82BB761B
4E749C51E9F34337F8F8F140B308C4D3E7146C9A0069ED9C3535A8907D0EA779
2359727536971A1F9773229C002274EDA6D59580920608616B3627C2BCFEA672
BDD0706C4DF71BA6B4914F04B427F855D95D8951C9C2B5E8F0AD0F3F75789E0B
3031A07D38A9E24821DEB08053AEFB7BC8830794397E739C254AD1977C059417
A39666022592025E51E44425EE3874B6AA0F40B53A665AC49BE7F2AB768B9157
CF9DFF38300063F60AB26FC8966C8306368510F6B3EBDD8FD5A25B6D22FDF318
12723994C14307D614E2044F38542BBAF37ACEB5951D2AFB26F0162BA99A7AB7
7F57374EEC35FE44A402E06902887B4732C2B78BA6F629B801453ED2F28B1B9E
DBF539C13D670DFBAE15CE91EA3D89D7BACF8C6C3EAE9CA559F4CE96B77A74FF
302C10135E82F17B4D826C792D17909C39575F3C31D487109C2FB890440D0919
EF0AE76637C389CD2C16ACC7100CDB9C3E9326E2208483BE9B7945229B8B0E6F
9B7ECC02A992E25154CD9E6F0F2DE6050AC5A6A082DAA0AE14CDD3F4E06038C2
6A1717E6229625BCB3CB6977FF0E9EB2D08B264F93947EC13DF7B66360F40B8E
962790132176B3FFF16F3C96BA654F57DBC086DCDE225B9702EEA5CAF4795271
73EFE74BD32E7F3E47FA5B0ABA0F4B93EFFAC440EAD6EC6737949FFAFFC5B4D4
BCF987D0E15CDCAE835ED2F1D6AA91940D3874431CB507BA100708C17158131E
16294557878336748D91DF38CF74215D05298EF7E41A28A8F28BB161C536F362
4FD355E3A67924A3FB444F51AB9C57D2FBA194BE43CCCFF8EF4E1B15CD43EA32
B814D713933F676376840AAD9EE05B2C429644742C186F988693DBFA603F670B
60B2D051C6CBCC1EE0BA99968AF8D48D1863EB01B8BCCF6F2793AE1C5CCBDC31
EDEA9474963E4C8155F713FAAD81B8DEF079F8AEC452E9DA468B5307F0F5E972
C3F74CC0C083646755AAB3A04EFC6EF6E15AC700FD6A1FAEC51E22D2F5A3F002
5F99D52BFF26DECBFA3045942DB1C91F8791709AABDC0CC33A301A4C2F744079
F4E0F7EF154354BC114F36140CBF6172F37AD1DD68ADE20EBB752C9566CB17ED
814D2F8424006C4F302C221522DE4C63EFD772D6E4470C2058CB0A24ECCCF40F
CB0D3A837ABF529675A81ED724A3A96B8A8E037FB1332E1D64CE0C1AB2F5D83E
D05966952482A7E2B4FBADD4A13BB564018575CD56BE0A95F56F33F372CAECB9
4E45BD4B443071E96523D4B4C22EE38950733524EF1ED2E41BD8BFCE5A255EFA
E26E63A1998FD53CC14CA7F4DD7998945670D3F421FE0E81C0700BF980B93AD0
1E7464370E3E0F9D4551FC9A82D4A7D29BBBBE9026B2C518558C496994710F91
8879BA7B340FE9E6DFAFB2D3F8F6418D58217D38DFD17B38A71E20F6891A4FFF
B63AF9DF9D5A0C998F2B778A24DD727263D5DEB53B7693AED20E9879306AED6D
C208D11B327A4DA1BCA9DF66CFAA3E3C9EF2EE69F48C391A8D6BCEA4AA7D9890
31F906952BAEA51454F1B90CACAB352562D7F5B1ECE73DA343BD6AD4C449843F
9E98897AC4E030DBAA42C0AF1B3A8E7B5027769EB5912BC01221F7E53E7F0F95
37B45E6BE66DFCEFF42E23907F52CBD13E71BB2C0D0068D230FC3F11D351DE83
18820D166A6EE95D7AEC2C4BB1C2FB6A57B75820F3FB208ED2259395F9FCF7B6
28F44BB1024C5EAC9C7257D7DFCFA10CEFC9DD1CFCC3BFFBC9073D7950FB9C59
2FCF05040354E9ED0796BB2E74215D05298EF8903E8244324F03FA9E3E8DFA42
886B5EBDC83E10636FE7659090FB37AC278FE141FAF161ED1008C9573009A084
8C8843A60DC8A151E5878056CF8E2F4048CA7541750A5A57BE1FCE108B92B759
751E10C76409A0F23867D8BDF9E89701D3DEE0C2DBDEAF1B3F044F519BE2E058
4BEBA566A548F1F5EE75D07D8E242CD2DB8B2D8CA972455534CD83D7BF96C917
7E2124F47CD6F43157FAA4E7CFBF52FE08476689354B337A6CFE211D84FAB5BB
1C6B76851C31C2E0C92CFF820CB5F349A7E76C8375C52611AC286D4E0F3F7D05
C239D9A1D7C16D019679BDC66DE55B0702BC38EAA6A8AB983D562E49D0E42106
614179017908962C80AA5FEAD234BE9AC28611EE838256EE7BE5CD2100F5FB57
E18F08C0C5BC567DEA422241DB17459FDCF177057130D3F2F913BA1230735CA8
CDF47287CC3DE786B580E356CC64C8DC9FD238973A84F095F8B4E85FD758B51B
B9BD731F1B12E6C99E7B22C9AA2391C8994AAD34177E48CB498F4A7AB3AF246B
60BD8E8DE59349F07C18994FF41DE14A6A37F0709C4DA6C1CF8AAE46D5DD47BD
A343C7CD8801E02D97E30B996B1649E0AEF32E5FCF787B70D6B8DBD142D0E8D8
73F26BC3F9148F2A78166795C8202E4D3CA78D5AB8E89C2967D350F75F28F067
5312E62EDD80BCC3F57E30B539002A6F111DC0E8B7AA0BCD010F11E81E142263
45B12F46B1F7902B59DE012577F401B80E679223C71C225506F9BF790EA9B564
59BEE6955D3E43BA2219D0D5E959FA0B553B3535E17C888EBF3E410B8B444495
02F15CD96A0C4AA1403937B4CA18407902F07842D05FAAC57845F84DF348B1F9
8F7A6B6D360D5BFCFCFAD920CEDFF91AB973BBA8D26DDB03EFBAC854F0910B69
B37B30E5E7D817AB38790E87203864D100DD7C66CE6F1B457BA89C4DBFF7D781
DF50873F9245EBA9AA26AFA20246DBFB0B587874D9515CB3C0F1B44A1151E2C2
BE8D2A6011F8331F5A41860C3FF6EFBEEDC4D1D61D1FF7D0163B774DECCE286F
7D1D6EE09EBDEED194AE1B1CA54943AA2C3AEA4E36FE26812BE40E86B53FF382
042F803DFB0B7F50EAF306729AFCC64F4A9959E04807532944C330B781F59B3C
B401C9A267139EFD5A63950D1B9DB8A6631974ABA413DC1CACA7EFF533A5AB1F
DA2C912562546B96BF45F7B40AA57199681B46868F49671097D9DB2D373436B7
D0F896C1CAF3E4DB41F103B4C95BEC227566D416A8255758FF27A7520EDA6D1D
4AD452CEFECBC0A09369D0C1FB70A8023731722762C57875318E1A50DCA29291
1B7294A827A071ACE47CD7DB9BEDC306C996DECB377148ACE4BC2D3D6576523E
CDF0CE90AE74785F79B3AC0342BC6B00EE325D3EF502D08E9DA897B8373366E0
2FEB27F976D26E2ECBFA9CCEBBD7947B76850D38FD9A39C07388A96E980C6E82
1D6A7A39AB4A3D71176AC85C13315C3951AF90F6E030BEF3F8A2A7AD3915C15A
18D7CFD649494E375F1377695BE35668B0AE770B88FB986EFE382F1435DC8CCD
A414177C09712E9289D59608283F4864FC02A567B15FE59CC367042BEC473832
8542C6151D3FABFB8ADB166BC7A0A0FD447F078392482134DE26AE9D6A1B46D0
598415CC6E73234DFD5504756D309BD3D810926D8B5B9EDE2F0CC81BEBB8FCDD
9618820FFFF174F2E5C6BF96D598B545E49139F5357499FEC41821D197F75ADF
310542C1039ED2627A4D826B0004FC21FFBCD613E05F4F6B1A637A5F7CE36030
8CF53062B517FF908D97D874B389CE6C4EC71667C7461E08A9B3D7A9BFE66107
196B4B2B8206A4179260F7A7B9DE69D666EBB63D04376A3C4B2CC456431354E8
10C04A558C6857AE5CBCB441E9B7450EB4451078D20D89BF4D7DD01B15D0A656
EF867B110CC04BB65B787F0CDF6B37AE4908533ED893E679B394FFCBC3866DAF
29A67CB48BD09F7CD15FCF9C28228E74B02B27B070CA5ADD2266A3E33FF41FFA
11EFC86F8990DF622A189E6063F74A7A9B1875C81139D587D6941BAA470563F4
76A14CEBEB8F659FABC17D3FA9B84E93E6AA36A4B77424390ACF7566A0F166BD
693295286B0C5DB456B2790866CC1AC60E2D1453BA73139F4FA8709547F644E6
A6A4C6F578A70E297A7ABB818BA3C7BC03CC0BA24D42709DA9971567947EF582
76C01093188DFD2CEDAC61DD98DE5A8BB16DA3E011FA2B757F02EF627C88F63E
6DD1AD0C46FF03E26C8C9F8C6B72534DDEB4AFD7CBF08EB36DA75088082B6AB7
2325C2AC0A7EFA47C3B49BBB946F1420E4EE5EF8C06F500A0FD9ECF90E60731B
838940C7EB1C5E333D0EED1BFCC3D181378821E1018FABD03503A6E8B0D84921
7104875B50B78AE7D241DC88A30D3828EB29E0BAFAF48626C2BD7F32FE0AD75D
15E78F0844681A7C368894E437F5C947248D320852FC99C60CDBE800B60F6719
1E6BEAF8EDE7C36550F02E4F9D014C9AC307606D8DEC5A9B5CFC6295508C2681
3FC29132DE6676FD95641C5DF28008AA2DB6BDB47F6EB5B0BEB2DBB600BD1EB9
BCCA5FF9D0E0CD879B9C67A35FB03EC1EAB3529CB8F08292E36DC44F99BD612E
1A75953CC14D73E0AE25E7386E71C391C368D0A3743F38F2ED5C9FB49D2CEBDD
BDB68BF78DD00BB554C993CFCB786714541DFF23EA2F727F9CB7B92B789189D5
4CC387F40DD1F36D6CFBBA4E86F7EE91BB16C4CD5B7B028D2F2F64BB407FACE2
4312BBF5EF69F537A22BEBC29CE1B797094DD575AC1F9B926EE4BDA551B8C6F6
FF275D1F79F265A8A7F6EFAE206818C7BCC1532ED9B9F6284B78EC008AA2B3B9
9676E966A45DD1EA0546016146140492C221449B748550DB050635C5A7A7B0C1
C99F4E12E947B51D2876B09D91F40DD67977331228E210803DB3BDFC878923AB
3FC87A118DE0362D76BDC890C837400FA677D32B6563608ED2BD5370B7B6680D
EA945FC4E9E1DCB2C2AA2FD8623D99F76DECADA8ADF6F4F129D985A137A2EC56
C3AADD8ED8A443251DEE5EFECC812713B5289F3C429FDF271C136B8BBA28419F
EE267A2EBC985771E0A04F8728AE29D516D88F3EC67C6D62DACF67900120FCEB
62CD54DD2045890B94A3E1BD6CF881217B89631C4318F1034C48B5AF21CBF4DD
BA6412EF23BCFAEFA92D1CBBC4316EB29842A5BFA2FDFDDECCF6193CAD286332
7CCEB361E4732DBDA76742E4DF42795B495AA9C0A3102108ABF9480F259C8917
80FE3DE9E27210A87E8A4F948FCCD39941941D2FA0348D39D7C239D3D3F45A68
C64562FD549CDF910C16CDBEBED6400F9789E283009205416B991AC5883BCADD
23199A9DAC12F8932D79957F569E8F9AF27A25C0C9BCE676C8B632DB701ACD45
3C97102312A8DEA5E5A4217EFC021629DD54066F5C0E112251E8CBCA354B6219
2FDCF26F0104C427C71DC8C4445C10B8FB00D9869958B9FF4C55A1B70B654C69
8A339CC464C2A61798F06D75F1896201582D3E560CFB8D76AE4D2B6333D95469
4B8F02080D5F0107B3B7E555A6E3482DD347E01B99C58A4A95D9D56FCA5021F3
DCA34870A100E5044228F867FA88F7254D7E8133DC560718D1B2B52F65402EA0
B973CDDD4C21EF5D3C567C95C8254ED980B4211918F17480440F932C04EB6214
3FA7474F34CE9AD7801AB9C92E8738225EE653D54F24605668876D7E1C12160A
DA7FBEE273809D7DA936CFC2496EFEE70C4DFB4D72312EACE145FEB31FC23AAB
C007768ECBE844F744BAC8F57627416AAC3D63FDFDD174A58CF9C5256F201788
F1D91C31E9F77E36C699981D9100251E9B6471C0614C3FF3FE73477504F0242B
F4C84BC792DFC2EF1F831A4FE47AF98E2214180873494BD22C37474442F0D17E
EDD12DC64F984F9B10EEEC9091B0CD2BC6407F70A2A9EC46678B426514ABDA08
2D03E15849684731397B0008FCC57157E22B33C1BE8B52E4C204B4B55D0B1A47
437DD9223490727CD3329BE34FBD64A92CBA3090CCB1FE015677BDCEE792DA8E
D76B0DDB0DE85182FEF95D6EF547A49C4B1BB2202FC9E7B08E2EFDBC33B3C5F8
1E16E074832DC8AD19871EA66EF813FBEB19F192DC228C3751A91A53CEE074E1
543496C97168FF7F84F8B2874C362013359CA0612E3082A952DC4DC1B39B5F36
B33FE1B43C584E74E2AA3FB7888F0990C5002AF114FFDDF33AFB64B51B1CFF3D
49EC389FF701356A28CEA612401221391F812AD31756C00102B067D754E23BF4
44CEFB3784702343CDEF835A8093A5D5928E4CFAFD07CA1432252ED449F2E90A
51D87C93E367D9D136608B232B877FF584F7DDF33A7136FF508C3E2AAE247E17
8467B0033C8CF30E9521349D1E7E06B1E24AD9F75A1107C51B0A01AB00B4586D
0AA0FFC342D631921DFBCC2EF3EC82F1B45DFD12EE18909F6A6947CF0BFC29C7
049A90CBFCD6096789C8179E05F5487C6791D871326E26C9500156CF71507AA7
C028C014A68F9FF00D64A9974A9B72C6C04722B27140C8B51ADD69CC63E2E1EB
5AD7FCA5FD7D2D66BC2369C52B94B84BF276C436465EEC81AFE13204DDAAC57F
B017E9E49F4588C3896B7C92BC44DAD71A4FFB2A514C97ACE133FE30B38CCD2D
71EC9DA6367A8EAC2374C8DC02CC7D5E759388A69E6280FBE2FC4D83A31AA3A2
2AEF75D1FA4294A819AB33257A1194DBB449B3C72C3C8B215B6A7E9A4EFB23C1
5DBA31879CAE336B50182573F1D35CBF2991A6CFCB533925E2BC3EC24A766659
F80DAF6E37B7701F0C3CD2555034F216F9CF364AFE819063319BDB05D9330E91
E881A5FED6CE8E7F30CC560F4FF2B8C6DA89DEAC9922C264C189C0529EE86FD5
BD21ADE5D91B499EB527AFA5C8E218FB7DA2D8C40FCB8E523D0764197AB3D946
84A4F50684F23849B9FA03F4B064A1B8906557C3F2D99550F718B33DBEBC0D10
7AE77226C6236F8C7336EF3568222DBB0DE0E2697C928C3ED5E7451CD1D33A6E
BAFAE2EBE6F4D8BAA5E51AA0F8ED6E44D366CFB7EBD017538CEBFC82226F728D
892E2D678CEB8AABCDF922EF4469168F966992CDDFF07C8F1ED7F01A33EB36BD
69FE01E19750E79E017C8EB03374D3FA12109F4070D9758BB3F59FD4FB57B9DE
901DFC291BEDA3D276EA47F834124BABE9B4964242ED2D1757C42024F87D449D
D37B4DF9466F3EDC92D70AF751DCD72776A193B6CFBD5FEDEA90C0439B4C85FB
E8583E058F8E6298D66FA02073D84419B6C38AB72141224C1BAAD755DB55B854
9425FEA1E9CA81AB5D3369EF926AC46B7A60DD60F0AFEBB8F0B239A3C3EE640F
D6DCAEFD313A475A6C3E962A889C44CC34EC12FDBC15E815C70B679FFEA8E0C2
DC48B4FC886B8F6A92C87C709A01C3FE323F3D2EA68DAD4C8EFE73EADCA07755
E46A6973E2F07DA7F01500986277553BD3FBB7490A989427EA2205C300EE56C2
2F77922A956ABE8F3887F1C83877775AAA632E6889EB6660E8FE3818EE69B6A8
966E988244562AE2FFB273C4D049CB478A29F32F84D6CCF3C1D6FD8F304DC7F8
AC7BB5A3CE1BE9898DF937DD572AD0D6F77B0C1B7F2A3B23D2669C6B6C761414
7C1AAE93F3D5846616A0084BD82E5A184B840091F042630F3B0D739AE27A85B7
607036A35DF673C52F199144AED282536B05E3403D32C1CC269F143B96EAEBB3
414F5853AD8C809CF1ECBD28C293E5D8ED3C2D643E7615AF503FA353411376F4
CA4CA0C55BB8B1CAD5CD30F70A536FA29884E69326B318FE248F726D6BB0ABA6
2A8581D812D6BE11F8B1FC79511C07EDABCB07DD38109C3E2620A71230EF4BE8
F2CE60725F9B5E3F9F8BBC81F868359BBDCDF8E2A79AB6DC71ECFC497C7C2474
59228F5D9C773002DE3FA5C248FD555F45DA427F8FA359A8D512C728C4DEA711
515FBB80595143BD6E60328639AFBD82E3AF5C61CEFB6D1279F8F3060DE6FFDF
A29F45FC21B462ED1218674FC300D5BEE16C9C870598CC4A40866B3F85D48A43
985291AAD6970A7CF32ABB711ED6F39F34B542C086B0DD95B7607770D8CFA068
BEC082DF73B9B6B7D4C6388B6675516BB28AB1DD1707E6FD96CD10ED27E5C540
C8255CB24CF17021A9F188888589740B7EC146BBE27E195B4E31264015917C16
42A59D4FD06B91BC2FD96557FC7820AF2ED0A2AE812F72FD7717D954C7BE357A
CE7BEA00A44915DA198F09D9B0902F4333ECA2E9EDE6358F458D1534AC3BE587
1B88FAA112A4D204E5E90A858286C6A116310D1D474F036B6DEC36BC30383342
22963993AA5A72D360ECAE564F48386C49ADFD6420C4E73528F345A0363B4E94
6DA463EFC7B3F13DF6699705ACA820239B7250CB7F500D660ACA989ADED0E3F4
0B459413D9BDC64E983745EA3526A956645D01007A05F46FD6C6D4A17D62C437
F1EB336433797C55FEEACAE620D771A17A802E9944BB5DD29302A4BFBDDB746B
FB8F81DED701A78B0B5ABE1F844F70DAEF541D859CF60B1511E337C042B37DEE
A1177FFDA880B9086CF9C5784F96A0EBB91D66CCC3268C4CE5EE1944CD1E7410
5D7088F63F92034DB2BFE373F3E6E4FD4E590728BEA65A3AF1C073C33A8F33AB
D1138D23DC942AE261D176499FE7F5E371479A29F349958E5E58BD27430D4171
979D95D1E83FAADA9AEE268F47615F50D8172D119D1E1EB2B1CDE8D62ADE1DD8
0431F66F2F717FDCC1D445BA8881A09086DBF6C64455FBF3A46DEB750A7D495D
D2A1538BDB932AEE7E0AB200359EA69E4F87278CAFA51B5A6CCF8D331AC8CF1B
290149898D5265BFF90E71CE33D6A21862355B04ADC347257824509506338A05
3440E1E9A4F151C0C2C307FB7813A6E2A31377D059C76360A45AC552AE04496D
88E2D7626E0E100A21C893EDDFD077CB62EAD07BE4E4A71D2377401E1AE4E073
63DC36272F306DE30FC773501348AA6D2CBC9110C28526A780F5ECFE99931ECB
20A4B08CC4E639BC90F91B655A636AC5683879F4080FF54A116B6F7E0FF84C4D
FAD75C8264EBB84ABDE05EA1C74B88A823E7037775499C4AC9BAFB16202CAB24
A8727D020EBCE44430F55296F112EB67F027FB543D4B699030753850B2D33382
F407441887D1E283C573CD0A6554C8F9D3821A6731B5959ED2C054C4D7AB5BE0
0ED31645D6CC0DA8F098FD44D6A722FA3ED41EB3E25E480C0FB1170A0D9E506C
3F385BE98EB5D732249A11DE0A27A22F30E2F2B93020963A2AC459885C22AB42
A5B045F72F5D8C58F094DE594CC7E18D5B53601987A2799F420CDF9DBA148282
54AEC3E253510AC407B3B02D67A78B7E7DE095EE893E723B1061B62EDFBA568E
DADDF295B73A4E8AAD66BCC27BB09B7BAA99C2107083F1C1386040D958DF9C57
2D705F34819597CD724BC244A9E9C81785C2C56987911CB051CCE6A775B3AD26
48FB070699BE3ECA74427658B32CB52E5B2223B4A16074B367D539E2433CEDB2
CAB32B74C45D671EA09F202CA2C061835DCB3F11C013AD45EAFC4FA07C690962
92AE6614BB4D9A3B339234D7A4D793AD69E92C60B85EF17F38A592E3432F1249
DB254F0CC9B1A27F4CF71FC7F0ECBBF42E05C6F2A749285CCC8CEFE07DC59EE9
7345014AC8494BDF9B9BE122908795A6653652D5CAB613C7FAFACB32EFDD97DD
1328C94F215B89221D3207E2169EBA1EC63DC4F35D0F08063E50A4292AF887CD
75C65BC1A3B6640091A891D5E3744EE117F43609194ABD8EDC838A89FFB5B5E6
737874CF27E1BF244EA52D0481EB58DA661B584B2098979C44BECF5D7FE43000
F65AFA16F31B606E8635D2E76D17227966B67115575279E4BAFE41CD175675B3
60BBA51E516833F1B578551575742148D18FE9D9E91F6A8FD9FAC1CFF168102B
03027601483C1CFF7B8C73D178B085111FAD89FD33FB63CF135B8136591CE14A
D1FC9B67A8674FF06FD66BF78ED07B964FF652F9CEBD458A92288BDD74CAB866
1B57C170DE40515B802943A2DF28433E5A364DFCF42C48AD2E0686BFA8DF11D2
637569B500C709E34E7CD4DAE975E923D65AEB746D3554D21780E2804900CEF4
AA385580D26D7F203CD090FDC89065F31270D7AF808160B471B0960D460E86DB
F8AC050C37E0FCEE0E54ACAABE68440967031E52DE88DF9AA1B2E9D57AFE16D3
134AE41DE80B71D837F36E1DC282F687C6F48285E19A3C4E56DFB27CDA9E5C1E
68B7C8CBE666C1B1165055265CD142EC76DEF8EC2F7BEC055105A849F1D5D3BA
2C070717F578E4B122CFC9E58659B72893AAB7FD4D854EDFE9D427126D0C67BF
9751DA3FB6C8C61132B32BD298ADF9DB860857D8A551D5626B5E96DFC80CCD53
F88C9EEDD2B4A65966D4032550A32F99BA226864975A20447BF29F70F54B0129
3EA02C8DFE34CDF7D72B57A605A1D0C952EB19E36BB8F5E64ADB4047352FA87F
03CFD1EC956F179FBE93AC35CF54CCE53D1FFAE162487870E447ABDEF9607831
F5FCC516069C804676D85F6056757A7762225C5B871E2B1F23545825530B1B72
03A6925D3EE978FD6F376E828638561F5E6AE28603D42089D833108D0977C315
C06B29CC4495E71ED5DF9BAB9867D81E846374E7FB61D37811D92244B7829498
1DEA10F7A2D358EC6572F0ABA05532CE035AAD5EF88B40C2E2DA5667B74A8F45
BAE213CF41B634908174812EA97595F0C8780C41B15A6EF91C6AC7155F621E4B
91FCE1E214F1B42B604B66390521317DE736289CAD2AB30A7C8FA37C8728A29D
AAC8EB31290745855DB8C49C7573F6035251E12E04D9F57836A94A973EAA2770
00C7D223831CF2B7305ECD16641356C54D9C3B1476EDC032D5A000A4B8BA203B
FB3B464D4CA7967125D96F7C486AC2EA41459B9BD8CEFA19077C3228FD5A0720
59671ED33C8BB52B9FBD754A5D7AFFBE6636349422D49E8A78BBEC6E12AE141B
B3A277857A8625A5362E5E612AD03AE7ECF4B1C08C5F8763DB1E9CC6160CE3B3
B7CFB3D093E7BC3660541CD237D9D42379D958709DC7B01771D0F9FDECA392A8
AFC57FF30C6FC02E361DCA4A45C8EEC65A9681F4ABF8DA6E0DF087A5D90F13CC
6260BD0514C868E0691FA37C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFBX1095
%!FontType1-1.0: SFBX1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1095, tcbx1095, labx1095, lbbx1095, lcbx1095, rxbx1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-227 -316 1723 930}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76F8A3359BAB9
9CCDA63EAB4501FF88DF4CE0D9DC9F071B528726352196D1D889EC0F0512EAF1
A6ED201F5B8FD2B90DA9585F5B2004EC8159EB426405D76A85AA0ED1D29596CE
FFD55DB52BF5C0325EB43E789D2128DE66E59F9A7C84CFF09969406DA529C87E
3410723FAC317F161388C55FBDC43B850230989AD991ADA95B1CDDC4D978E722
8BEB4E338C3EC48106B4274FD9FFC7CF03EF238D8160A515EA93C009A8F2D3B0
1CB8041F5EB86F1D975BF4EDDED8B7D2C81B665124CB1562B71114FA44449C6C
4DDCBBD36BC95B0E569A5A6EA9219B151426165BFEAA914437CA89EF4B0F5911
AC054509BA0102D462A183A29DFC304DF74A289A052531CF1C505EB94CAF245C
33DEF613E4F1B785DEC94402A2C46B2DD4FAE5DD176985E45A03D85E442D7D77
A7586ECE67CC2360820AC46A8CA0DE0852F2F3F7ABC9D4FDE78321A4B63ED2B0
AE51F2F1CBFAEB6FE8142B4877BBE69FE6D4FEFAB7E5A8A4B22803992910064A
F998A0573C898D6EFC101CAE6E1FBEB97001A62893B76CDA3996BB92B7C2B8D8
F5C16CD2FBB4F8D9DDF27E66377E9BBA95CDFFFE02D05938F97D05AB348A74B9
1D39CA72320F8788593D99FE7CBBC69BE81D60CF58A584C366D2F5874A3CA93E
3D630E60D2D74E3CB14ABB6B38E8B409EF705FFD7B13420650A3E56C4B5AB090
6D15C8CD09CC2F8B32005F24D05B7E5EF52B8BA4F1C73CFB0A908D42CB6BB6E9
507EC5AF073CE78791C3DA714AA60198B87689F05EB1298F554671C81123C070
925E3F07DC46D862F6C874E548187A5EE7C6B713D5BF66A7CB3F258D2B99BC48
41EC9202C3D02C9A2CF71D52FB4D0EA9DF8BA01EB2D2192FBDE6EB1E0A7EC955
13D077AED82C96F3A8D32180720DA7474138F847B46D021414BCAD1629F0954C
CD7808E026A4B5D79809DA8477290B0827C17990A31595B4979481B57785897B
23D2BF32B2C19B3BE822E395763A59DE1E8D927DF8FE07FC2477DF176F1C4868
28EBB6CB6F740F6069123302FB770916FBA90B3EEBCCF8588EEEF3921B17A0C4
8420D87907E189BBFA24578F62C5343D2E6E8CBD8C86573955BE35E69F2D25DA
35A6259AE5BC7C6B509F0626545F7F7387C12541AB4B1AC101F62C24FA3BC408
C471AD74BB39F815884FBDF4B2835B71566E70CEBEBD2024E2B7171A88318FB6
B39BF2040286A93C2630975D13E0F3E3B38E41D0055A8261D37B1C1C5C719DDD
7E59A758BD72A26A6E2887F94E7D1F37CD59E2740E5EDE4FAF7E4A220B5BAAC6
3801F07FCCA3345FA7AF78EA136D831D1F89F26B235A2DA3C783AA8F645A3144
F9CC431C92BAB7C6FDCE70E48465DE4ADFB2C258B6D64793911297AB79551320
EF4FE96FEA411577D3922FD785EF913C55E5C7EC7E5AA539F51883A25161130C
45C00FA6B867B661FFB9EF92BD2EA415AAEB170FA7E6CC051E760943C7D7DB86
ED622EF19068FFCD71AB0EC6413ED46F0C00CEFE0191D7A6B83F242CD7D3BBE4
559246C9FA7128677760B57ABFD9C03B07B035520A5B6260C6971F4255BCFA95
FF346471992660E56D5C97932B65EFC7BC9927ADAF8EDB5E15BD6F7299699C4F
379F634CC44962A14E2B9E1C74E667F1D7B9015E4C8B7B4169807B8A4063FB8E
AA71B39B7AF0779A761BF5044BADF0E94BDBA3E59695EAB8925B944BF46CDD10
4C9E2FD5412E112ED0C0664770C7CDE1802A3EB8BBAC065BDA7CD493582A43AA
C254CEBCF49DD7C76650A7D1AA9D026CCD1B21B70D737E6FFC1DC9FE6B049B2E
1DB863F63DE07B6E811353D344022AB91C8A9ACF420976B0C9A481C36B95D9C6
F4D42CF6A8DFF7AD4E95ACFC86B65EC497B4599F155B832810C686E0964E4A9A
409D4903CF31D31DD84AE75C05893B870D4D6E8DE5D2DC7EB3DCD1349BAE3957
15DE7E2D6A64E826ACF6ADCB86762F1EF45FE6CD98BAD991A4B97FCE0FDB372E
81360F60B0AE6CC57A78839E4B9EBF958EF7FEA5F544613FCC629B95AEE4223A
ADCB21A84A453131F8E6DE1904FBDC5D5B5797EDAC56A962A56FC5AB99A90A95
00ECE26C5AFC2B4EA7C7A2DC65FF4DC79F5AD6FFA10968F62399421E0159FB4E
D2F640D9972EDD1B873B4C088AA53B20D6D5CA9C351B7BD03E729F80FF9FBC36
DA6EF5A42E219BBC9FC01682CAA91CBEF0C684F4A04243DC66A2D00963D25130
50236A727E0DE8B275C6B58EF40C57DD06D570E08DF13BDC3259509F45B1A055
86309EEB75F9A4843A2F5CF8A9DC129C439FE48383641A3A8823FBF8EDD4C912
495A5F9BD92E09EF1BAF78A2CE8A7205F678C6DF924DC6EDF7D47D9F56CC2695
CB259A25E06EFC7F16D9CBBD056789BFD24547BC5CAFD50556DF0EF7F189BCD2
3514557D6916EE21471B1A569BABFF11561F48BAE3A9ACA2352A43212B50C067
3594882B491A669DA9A1C41AB40046101C1ECC10760385A617A141E3C84C587E
ABE8B76CFCDEBA5496A4B55F95151805F2EFFA0034DD6C33F2F176B2A93ABC55
B54D75DEEE545BD8DA17DA574A2D612568A755A24759BFD044FA0B304782B89A
A09C36A90A79EF0F12EE0186666F91661B722A021A285CE225C51FE22F69A067
169DA93627B12BBE9E7D8B7DB8AC8F315F3441B03AC5827E40CC9ED578C838BB
A02506798077AF0F8853617D0469AB4F2695B5C8D556E9E6DC8B7F718C3FADDD
68B93FBB1CFDF24EFFD95E989F4BAF465B5F2C28A99FE0735180291E72DE2554
79D8E1AA7A50B5C0E8E4999EE5A4D2DE27DDE9B312FC2382410738882D4CCFE9
DEA2CEDE747F2079DFCE25E8D925EBD28BA51D15484B1CDD80A6E1FEAC230E54
A6A01872F4FB5EC0038478D33709A43319BF4709D642B23BC007F5388CBBDEEE
31883DBA8B465207ACEA1E0647FB75CD96445BF0EC947651205D6CFCDA3066F3
3F338E0FEF907FDABC9B780640CD4C742E797248AC36C802A06B3A5D92507EBA
29CF148CDEF7F5DD9E18FD22DABF8D0E29997C508774069A906E35B52FA6A71D
08C9DCA5C2B21B9A97FEF3E8465301299ED229962E805BA847A7B949628099BD
3466C25ACF8800501A3B323970B90C4E617871F1186E5FF62BBE15559C67F975
C42E572C3DC31C24AD166CBB209EC9B82748DCFDBE8CA71B8A651C080B150B6A
C722705899FD8BB1A26E4C29E1B0EA658C8BB454022D10F1B8A03CEB7E97C895
86F7CCA1EB12675CCAB1279E1D42E550C995445E25FDC5D6B13F6DECC971B55B
3305A0A4CE124EF668B77ADEFC2A6E9B3C115262786E8C2698F87056EDD8CBEA
F4117E0CD2211F854FAB4B4F7A01291129278B359A02D9A7226FBE0F09E9FA8E
E07E5A8051972F26315BA2F314DA2144FBE45A93F192193E9169720F262E7605
8489F8C5E377FA9339216A4AC199A29F919EDF2C7AF3433573423F67EC29881B
D4C7DE97FB67BCE55CEF4C7250A53039E2E933F65C2DC57D2705D72210735BCE
A5735DF316A6810ECAE11A5924B8DBE57147F596B272296258D6312288488E53
4C6ADD4FBC5B5194C54C31A79D24954346C854C033A1BBEAC0D2861026596E95
2453318252D82BBB50568CA649F8617593AF2E03E83C630D01C326DB53625860
914B248D43349D659B547E435E03A77CB799C6D544719471104FDEDDCDBA16C5
6A1CA4406098A88A052D4BE8EAEF42DFA732F4775D7A1C93B628C8763BA4DF27
B93A09C710D4F20F1745DBC1E0D8431440B8247890AA04689D319AE8C4AF100F
1874ED296162086CA756BA00EFF2F69E73F815F16D387D011A5E573EDEBE343B
FEB7CC1B3D7535C2C79E8591EB81282BA7C1BC0735A523A1F614174A86951A92
D9E5B7F13648393A6445DE15485A03DD4F727EAADF025BD411AA81493318677C
E4C13947CE200159BD172FB81745A4FC4EE5C760E0955AE53C1A046A23D41733
24176866CC81F3A1AC95B29444EFCD50314387FC4FDF1092984D348BF118862A
3CE07B5B78C0FACCF80523FAD43B16E77CD65AE2967E4B9E5B4B2198CEA897BB
8D9375EE8C948DF4641FAE3147D1D1178F768590168A53A81678CA5C6796FBA7
C1C8223F9E340C65E5CDB0BFD28142BFD50CA5E2DB14A9C2E42AFBFF44A0341D
AF5CC2DE482F244C74A69863682F3D9A7E7BFCAE7C793CC443112F20835D7B9C
E2D18615AECFB0BC29C36A255F3593E51B719F2E68204143BE17E8AEDA5BD387
D81902B12D1B449D3D8AD0FB57C473EEC8262035C0E68E14EE3FBF532ADEE1A4
01E1D954EA7E966F5CBF8BEA36CCF5585A6A93A6EFEE514B8671658FA4F44A0E
1DCB89C22EE97AA40DF560A9F2D4DF74A8F708C8F9A367930A8015C023B55382
45F2C500D0C0CCA7D1B1DC0E376B0EAD9A7C3C705E9A5B2919A21BA918292F40
A315CA76C7761DF506C98EC783D1016EF5EBF35A2AE3F38337C2C5511D90BEB9
D192FF7B00CE081D41E9FC475C5185D7B002DB51B9918709BBE661A7F4B692CB
DB8C264657478652DD531BA2BA791A9D04A029444F6DE6DDB7E78C07DFB52F46
EC9E3A8A391F570610CDF3AA871AB9A995697B5A3AB7FBB8C47A09727E3639C5
7059DC1F13253AAFD66EA16F95F8FB59D97AE939EFE603DAFD54B8C1638BB159
D8D8209A36F613C68C1E371C456FF5731B7287047422EEF2B48E8F38734EE1A7
CFC76D1327FF21FE901B3E17A24453CA57F6E65C04D1E341CB926D2E92BE5E26
D1E08C03DB4862F20EE091971846BBB054A5ED95F7B65E613A9F848C5C0B5BCD
65869D14BF65B6C9149975A538C936EDAAEF98864FC436AB5548905B436CA0B7
C8E8021AB9C18CBECC8BE089974B29A41603A99363DD7D2C1EE294353903E4B8
14933C4B8C0F9789FEEED16B790B08CDD65638E190F50D2777B03E93B3548560
082FF8490D834DA175A71BB64F2E6D1BC4166512796FB320785FA4BF17366B9F
E79815DFA2659CF5DBE572B6BA9B32F3732E7A4E9742526F5EE3F77F48554D6C
EEB7CB51000C3686E41F05B4B312D84F79BDDC764DB68A47C9100D2A9BA91686
14FEFC49DA30A8071938EC1672E9E38D20C00F0A24819524B6EECCD417E875D9
05ADE265C7DA711CC81DCD80A1136B39CAF402BF0F40BFF34526732B4371FB7C
10339A30E9D1DFF1B7CE72AE5E6A2D7CC83709E7B1F043DA647A2D1776E93B74
EE966B99247575487DDEA937DA1CADABBBEF72842C8A882CF268ABB61BA70521
005665BEAE36D9D7487F806D0BB845C7A197428482D425B5BD086A697E4DB115
88926BAE097B3F365E4653C81F2D7A43018E7057A863D1455D26BD337C5EBC03
15EB7321A03103E675D45103580B034C5C283744F0DEB375A2DE15500F281FDF
E57BB2EFA129D784901004EB112AE678F691EF83B1C169406A80FD576BAAB1E8
DC37815FD5A9D35951838F2172447C660843C041C49C6B6A8D547338F98A3D9D
962E225BED19181E8F54A4B51A49C44F4B200EE160F2C114339C982735E03C9A
8B91B9057A7877A8C28AC0B468A927AB5916C1A6B493573BE26E057F99163B8C
D668A7564C18D44C6965F7FE6757C3A8473C2AC51D4153C8D0147165F07D9E5A
C9E11B72B463666E0802CD2A120281921659DFCB21EC683B555404A81B21BF9D
790BCD66B9872418F069ED55BFEF817897D5EAE110864E1D4133C6B3F65FFAB1
7B358D1BC36FB0C0F8069E82BBCADF58C597A24C398F9F1D6454D0B1E1802509
6EC57FB6649765E73FFA0EF103E8C61554F56FC284DF4DE60ABBCE436C5D1635
962A75DE422010BA6196EDA348639FC3A0B52DDDD0A964E3CA746F7B19FFA3EF
4A1696A493DF629C518276083BA82348893BB54F7ADCF06590655A3A0A40B117
2FEB292DE03CFB1493AF2DC3305F1FEAD60A211DA571C01CD3C7015E35714FEC
C46CC6CAE184B126A69CD9E5A311B529C75D4C4A4D49D9712EA92E383741FF1C
B4D9C1D78B8AE3B5A579EEEA388C596E325A20065E230905B369D50CC7119178
3059A4A9B9E5B204745C77844D33FD21360E5D36AAD180CDF441BB5A7C844EF4
5CA7778755DD75E6E8AFC57CDE1DA2AC35965E06A372CC7943AAC99F4999F40A
35A51BC2B653BD8AB2582BDD2EB2DB7D3CFA36A2FCB2967E074EFABB241DF40A
40B30553327B08DEC34AC1A2F3FDF20CF33F46B5D047E75DAEA53560FFC9EDDE
8F9261A0ABA8D0FF2FA9ECE2EBC4AD5B083D192F53DE4D10E255EEC184E05F7C
019BC121F97E9D0B3EF5BC743B7C74FE8F780FE25E11BE1C9C9735DE70B69A17
39DCAAE01F9F13EDECBA9FA07AD35BEA54BC1AE4D42541D23364DBF0893A15FD
7D1A05B203C7E1F30D08AC73CEF51DF5ED2DCD57D0B0608779FDC6BF56576CD8
57E68E315C56035A8FF8C381FE312E548758C771FA68B1555C02AFC8CEB19D90
90F253F180F55C89355A821C75DF4EB73308E3EE1C0E6113C1A0F8165ED8FE17
7051B666261366AC491EB93BA365B38C8409B2A9E909D38B90053A65AE1FF156
CC877253324B87B4E813DDBB3CB3324AA84EE58EB639D844750358E9C9F9A5A8
8648F303D9C3B46E57D19F344791CBFB5F5E3099863E19B96C63302FD513BF18
21A66BC3D8CDC85674AB1785E17B148F05FF52FF6FF200C9274257C3ACE8614D
29B082C90BD67B2F6FEDAD76FFFA7EAE88A88398390815FB2BF837D27982DC38
15D94C9A0DA688B066133C18EAEFA24E7BD24DE5DF820F1FDA66057CDD2728D1
C9E774C89EA5F5C6F92A5092E61ED7DF47148041D25A7835DD6E3E33D548B375
21947F7C0F0EEEA74FEDFB200F719827776D823DFF9B27253F9B5E416C576393
18D5C02F31A161D538B2A2856AEC08268E22F78DA5011E19376F1FA3BC52BC6E
8755016D1DD3AF79E621DD3829673299A5BBE8999D9FA5A6C956FB2938A9F76A
DD1D6838F43A6ABB79C3B84222C01F0BA82EE8DDBB242E8DC921CFE8851CD927
C5AFBF50B504661C758EB09AC6491468078633D8DB766B0C73701B00850E5ABA
2C96965C3B4466AE5A8DFB65C0BC71CE0CBEDC1AEE633A9534C5FB8C4CE6705C
F14B4944F270A86A0B726B48FCCE5E752330E7F138E988DB4C1BD510C114831F
70B3F30E64CB7CDA4518423A338284B93D12ECB884FF5107FA58A6126D6A7C4E
73997AD9E2996046854BDFFD711ADB30AF5F9D5784D0B66AA0C3A36C5DC878F2
60DF0DFBD65171980C9059C3DBB4CB600D3728BAAFC5BE3CAB0A8F3DCDCC306B
9600A223D897157D11F8A9A4147F27E287BEE894323D0E3ACB8DF8DFDCA58239
BEC64693620C756F7A35435C2C2AE0B3E6F6CDA5F711EA0BE543BAACDEE7682F
AFD868AAF168C08CE31F26CDF6613C06CC5181C1AF49D63D03345D1AC19D5E2C
2985D22537AE369885F99C25B80FCB8C28AB4960D99A9681715FA7A75C14B685
E2004635A71361F654DFBA7B291991E1C7F2A7EC3555E03B795273BEF944AC81
EAF70C493018B8601E423F70569776A23C0723DC47BC6EEAC578111961D1CD6F
F60941A61EE997A91B9633AA7DBEEFE263B5FB83E8BAF9435EBC4C7B517886C0
1D0D6E551A6CBFF1CD7CD5FAFCDE7BC27F66808081A085F6692F09891A512AEC
D4D52EF30E214961DF4B4C6856481AB0AEC0BFF6E811A8097DEB8A1F648AFA46
D41AA855DBF78EAE46587952E2FD4C711D005670DD492FB86C8C3E80DEE3F0D3
A77F3AF61BD3463DA6ECF445C884413A42E50FC021C1549497932D98AADD0F5E
3BE9C4270758A2DE86A7E5A86B8B6249A125B4E090439016599AD6C6D7E5AAC4
3057DEF2AAA56C77D020457E53FD64E457B500056B23D1799C5063FB5F7488AB
463FEA43F7284F308300C67EE93843C280FAB65C54852D07E32A6B412F9FBA2D
7218262B37A194EDDF83EE6EFF8BA532984D372DAB56438F1B6B98016914FB7A
7A67BA19A5203A1307014C54676BF00E58C312302190E781E785A958948AFB8C
2B38003AEDB8343A57474BCE902B3D374F8563E820260D5D6500112869587128
945F0B5A45B42FB15C6F50C479A814EA1DA1C4DF97A1B435BC1AE23B20461CB3
DCF6A5A0FD2C18FEAF1789725CFECEDDFC21894E4FFED1777C2187F5E1A2260C
9C938BF7AEDA5044E0D7B7F1AFA9B3A1AA0986A8A1A9E5EB376EA8FBD382CE9E
7C4BD54F907E25E5C2E11B8754D3B2B88609E882155CBD9E7EEF98A80B4196EF
CA2D26256FEA467E526F09EC7563C1EBD95E63DA3C2CDAACA2845D66672E28B1
C5CEC739A140201151B081CC0D5BA5C1AA9B63C354E8017CD73C4D2FEFB5473A
070E08ED1AD4B59F78676DB73C78DE99213833C48B868B19724018EA8ABC62C6
4CDC2D54EC614AEAA2AEC603864A3B623EE6308B33F865E8C78B0394101ECF08
56E8B630B9ED96B914EE33DB156F47637F9A65AFB4F3783C94E3986C1F01D246
4CB1023956267F504811CFF2DF507E82D30A6AB722351016B6A2107D6A48A8E6
707F287E5C3D292902B7D8316349A0C9B76429A787123CC702047832A4B67E16
2F872F0AAA6B1A3B150210E982670824824E00F1E1E37CFBBD290F55F19CE2DE
883DEC39F755D0221FFF60AA48B80169F6CF1E9FE5B1C44AF4EC185AE196D49F
FAAD963C890C52AFC491634D70CDB4C3A70E3E69D117EEC36C547244661C1612
F6E01D909407C93C372A505F30503EF61601B6895D47D5DDFFA5EDD7DAA53026
EA2B8ADD6D65A54424BFE69402F98221D897052BED6354EDF507DB035F833171
1781EF8EB4515067DE39B786432886BF6A4CFA4FD5ED37435308E991B3E92F94
7427AABA7A146350238B1116F23609DD539BE14907B0AC22A30F427D06129602
00CD23E39776BD20847178FEFB70E633679AF53C3380BC1F17536E1902E82B66
A50670FD297BDF64D8690968B745FCA49B0BB78056DD45DDF06B651C7DC3CAD5
27A8BF9867199B2494C2FAEAF02E65184BBFB93CC260FC98F89D301A77E3528D
72ACF2D32F8EF12A3206D8E5CFAC05BEA9799B23B51848DDDCFB538B2446C025
4F5D22642493A8DD81D70700E9FBD91045D47986D495940BB9112EEE09CC1C47
BF21CB755AECDE8F606BD4C512487C4B9698D9202D4E9909EC5FA8E2E78B7A9F
D5860B46BDF91F6A2A228948465B9B025AED172E9398264C1102174DE4AB29E5
DF3BD08615FC42BB8EF26D1B453CB249BA7192DEAE8C53EB0D6C7FD73E961124
184463D0538D597F6C89318C95575AD3EA28E3E809C75CC56CD2E1A786CE64B3
39D6BF3C2672A4FB796F59551EA794895D06CF9A0255D652B35B7A469AEAEBB4
859DC449C708E86EDE45C3A9B18AB5FAFCA8A939DEE9796F30E573BBCD9DB776
240EE497D122C14696DD7A4243DB02953903FCA10DB57EABB37D68988DC77F42
82845D720CDB19CEF15AD5B5DCD21EB730EED0EC58FEF92A0035771023D0D8B8
623EC1011316A322BE26619298A53F6F7538DBBEC34C938C3DF9FAC13ED66D83
95401DC90EC3777E8D0C547C27D786E1DC94D5178DF2D33041FFA0ED4989AEBA
37A80A4A0BE9BF0D4B077C4C8ECD4ED02387A9E7A2B9C45C642F2391575F05C3
8500C171F9F70F02A59BAEC0A476A6F89A10EF64D5F63061D23514557D691345
DBECD64755438C2F8F55C139FF3A8FB31CFA22BB21829737AF2D393DA6D6161F
7804672F889D44EF3150FC863AB1B6C5736A69995E39367C5FBAEBB73C523B30
CCA6471FE1D94223F345DE0197E53E0ABC541426482B0119B9A8BE338EDEF1C9
88D12BD4E0A9C660E0EF1E6FE19A87B4DE8A43A53184AFC3E0514DC9EFA8531F
EFF6298C4728CBAD6AC3F78F842B4F746D372977AF4C08D94DBCDB7094877072
1ADE277138D32D57A64FFF1BCC6884451D1B559008927B936A151EA622E7F613
607970A7B533140495831EA0EF5A9C0538DABADC4A1E7B197E9F5FBE4B26C500
724ACF76E129D9DE5D8C5C9D00BF809D8A5A8B7A696A9FAF073CE78791C21B94
12874D8511BD47543E22BADD90F85C27DE4261086E6FEFF7F0DF0E29D2F08BB7
D0420B799F0EB54768E2BC40F003E92214BAF89EECFD647AF7A2D4381912F966
FCDFE36A4DD6D7D57FC3482DAA0E393C9CBBCC32558BFC8F7AAD99ADC7845293
9BD09C76A8C9090A4BD77FC107023E1F52279AE36597DD567FEAA8AF70A57A1E
1C7FD25344A655282EB3C71B994C85EF0D438E1C15460BF9738E8635437549A9
43D248CD123E24A0B36E1FDD781047D406DADA99113C8540F4822AE27CFBF067
ADEF88D148CEF6189F141ACE886D57BBC95995799B528EB0A09D4141FFF6D0F3
BA8FBF7285F4E0268E60958611C4623BFEE8E6D97E64778152B9917A2597D32F
BF3ACFC1F41B7707ECA0EA73E1EA84915DDD33DAB881E9B183765B71717C62AC
A4B8A7B7E13841E34A5A88F52328AB1FF8F9EC02A1E755F160F4E8DCB8DF16CC
66BD765A1A3103960357091DE0BA4C800DC4373F1DAEEDC13B980EDA84BAD797
B3D3E6299A17BAAEA088C8D5666EB8DCCDEC2DDC970696B70D055F17ADE16C5D
F665D0513F2800C8B9E2E6686C75473131F54E6002A5B9C1493AE1F9780474A2
DD0922392F1BD2A8548E5CE59F049994632EE1FA74D8AD1976867CA8FE6A3D8C
284F7447ECC0FD7782C5BAEC2667B8973043154385D0A04140B7B2A33F597602
AE501A231D325357A2463155D1F76531BC9E93052D692A88622F592C959A3B34
9887C1350690F56EF6CF5119DBC45FDF77F8A238D3B533F5D9B9600F50080688
7696EC53EDC5406F56CE454DFF936373186F263FA05467F4E6D963587F748B6F
F4153D85FE62F9DA6DC4972C27A19844ECAA93696100E1B7FA877166ABF120ED
2823A97B2B72B44BE31A2AD5A52D362C124A77F0283D6B4D1B121CBDBD67DED0
4BFE6691B06FB6C0A8413227FD6A584D9FB7982A53EAD3A91D53E5EA41A413A6
BB73228AB4796CFD6F953B2AF3D5E6F68CB3D52D76D907DB456737F1EB89E283
ADB3BF432EF46FED9BA74F1A9315E7B2BF432EA8E7D4B123937FEE34884C1383
2466823DD8CCB8AC705F14F45B4106587613E9E462B8073894F4504BFC97E15C
182248150100C4A79BE12484E2E9634147D267D5CB0D8872411DD48291C5EA8F
3782EA1EC3DF9BEC8F5E8ADB0E9D9AFB6985603555C8C6BBDF49028EB4377B88
47F3F87740C01DCC3A870D125837CA2DBE22CB19F98B56A71484D78B5CBE3D29
5F38E5B8938FD810B89E20EB80FB8F73146BA1F91B9F1108CF1B211BE972EB16
15B5DBE9A7C6ED5AD183BBD7532870B0B5C3CB9B92D2B2661BD4F3A536108E58
29E1A8D781CFFDB20F6B380B4105C6EF67AE6098C6A4EDE197738A875E2B0F99
C61C834794A3CBFFF230275EA0D4183F0D72F9FB11DAB5B6BEEFE2C4AA72BE1D
5BC146647600C0F0EA008DBA3523EAAE6CF026BC6749203ED40B1ED691AF01DD
DE473987FAB60376DE3EED657DD299D249F0E7774D5139CCF4DF89AEC2876F7A
9653B60C114056D2B8E2B5C030A7D2F1D5D2499FB1E2367860096541592C1F29
6C397CD6EE614180FBE124A1FCA663ED36340CD545E292329C59C86695E0ADB5
8254C8EF43FA8E2D78C02DE70F8435C19FDFFD5543301C72BE8CCDD7711E90B7
5801F6418BB9093628FEF9E48AFB7043853DFCE8894856D69D69D1F051425DF2
538922252BE8C5B9DFFAA29EFD8D1289F13C55437517194C29B93138CF311065
F40286D62E664D818DCDDD6A2CA7BE721856474C03AE17956D786382DE863D43
0EA9DF8BA01EB2D2192FBDE6EB1E09BC65DB1F54CF02B7DF830BBFD6032037E0
678042A5738EA533F7CE680A38083B9CB544BCA3F3F06DE5280137BBA0EBB412
1AF0D2019A7071753D8C57F337CE91F4579EB85CC55E2579EFA015B12AF79A62
BD8BCC4CDADC7359255FDE36B3E2D9F4BA8301AA84DE6A6AFAFED90B2DEB8452
55567566BA4050CA6E9CED7F13DE961F7C7EE246723C7D0CD651AC92F0A46BA0
B3B19AF6A20E796E7336B688D591B5F8D8E9270F84C3A178796B7278D3812D65
E595932E83F8A9A8145898D901A504BE94904B2A258B6D1C3CD57452E20A77DA
882DBB81EAE547713D0F7BA515233660EF9BBA972E3A523209576C023ED10B36
9C57908F020BEDF2FA30838F6E008F9152F02FD084BFC2D1FBC4CB356B5B756C
55E32D9D076014E6CABAA1A5149E3FD6CE73DAF06543A6FEAA3E779D8721C358
C416608BE54BCD5173B327CA122E79609CAC4D4B922E347AE7B8606830506DE2
64B0935CC6DED210AE926C86F93F025E9C0AC03130B03CDB5A86789194FE988F
5FEA5AF653080386BDF2768EF528A49FE1202B31E516239A2BEE4EF4BFA24A77
F44489624F7D7048D9F013E645B4972D1EBEDB837CF697A185210BD8191503E2
32DEB91F953343D5DB7CFD412ADAB241869210DDE316796C192CF1D91D2FC98C
340AE78D9296F062120371825F9F21573A53DBF3C2F4794A4608FE9440AE141B
43D043DFC20FFE0DF90293851FF940BFA1BE352721BE06A46E67A1FA5E529F7F
82AB7DBD8BC7734E69FBC5ED80B44819E7FEDF56BA20BEC7B949EF559D32A315
5DD041D321CD80721B010683A4D824C9B26852D917986D962099921DB40F7880
873FE2B2BDD7B1BEE7B326CFC131BF3308C73AE58EEDDD468604509AAC25B2C9
225DCC23DF406ABB3A8ADEC5A9AB5C9BC4EC1EA628C6F745E10D66D437538C95
EB32B984C16DDE509CC731BDA98682D940369E1D74F535D8F0F5EE34E60F3653
490AE717FA01146EB93CB56A156EBEB5DA36B5DFB2495AF6CAB1311AAA2953C7
1D73F8BC5F26AD901614682E0D743770477B20AA855901C9F952D4FF02B658FA
68AB187B8081B98489629B45ABA11C62B745D1C07A891246AA10B903905C553D
A0815855CEBA5479223FB34F4A59ECC4344E738088C1854FCD3619841F755236
1F4C7DE977F60DA668A7805B352B9039F5FB23526B399DDAECB94127DC50A40E
90BF3094539A10EDC15B3F7FA971C311215AE27DE83946CBACB418C1AC9D1C3A
F2954D5AAFEF35513A4A040D54A112DF5FC3701AF9ECA15724455D127A03424E
2AD58E924F94D9F38EE282F2E2B8AEF1FAB9B3C603BAECA0A0EA9E9B4C1C334A
0D321CF43B5CE79B3C0A88023A9C6749AEAFA8DA24A59F7B31EB76342F1F15E2
98F179FFC6D76AB3416FB3FC681F6FFB97B11A571FC8809B06E08263950FE458
8FE21955627F7978D75DABF4845AF990A18FC823E677D85F6F9C4D0F5D7F76C2
02F9C1A8588440F9DF56D327DA01637CEEE16C6A8787C84C6A212F067A28BF6C
8D599DF94B1932183603526800FC8E127CCC3794680ECC958C7961EBC6B5CC1F
6650249E86DEBB88A0116F3D8FC8FB191676B6000317EF31D5F6A827A512DE6F
39A8BCD5C987B2279E8106FBAB4F5C4C8A7AF34EACFD2A75FB1FC0547E84EC0B
4B7E2DDDBE90C7AC5FA404E4E83D61F68D73A3734B8EC9D803D4158B218E7328
6B89660EEB977F5BFC46DC379A2D7B1E5BB66882C130407C638571BAFA1D07F7
3A8CEADD6A7A37C7B448FF4219B7CC7BBB5593F52EE4FC9EC1255D017F17AA67
547774DBCE4FF97F9119649A69BDA2BD5882D99DE5D23392DF811B3986EF4BF9
BA43984680200D25785FC7E54D643F7C2E430949F2B585ADA0247AF4D8A6BA18
F7EED6F758FE0483AF93D9CB22452D028F4FCCB9FA66205F6F7575B848561365
72E6C3B0AD06E2671EF952C1654CFC91C43DA89EBC29A23BC8A84ABCF74BC6C1
DB8BD432AFA5D590582724AA6A4674CD61A6A0946805D1917ACC6291495C736E
FAA40F133E5B492FAC1E13976BFE3958EE3D2FA8E6F3F08807BA9BEB51394B0A
FE8F511E2A60E0B185C8EF30FB49E014BF4469D7B62AB03992BDE2C88A21F3D9
E4E09B375A58ACBB9E6B044CD2851B96E542C3FC6E8D2172916AF4B383915117
13901596A2D7FCAFCCCC572024A7D129E0F5E3DDCCA9078D95EB967AC2EA90BB
762DF835EAA366A11F6C7564C80EB1E4FDF23D0FDD83129410DB1B5C5DA4CF8B
C7B7A41C89710D3A8CF93BBE4E16D4177B3DA8833CFD8E114F44EBF7D381A7A5
B53E6805922DAF1DFEE0477BF751CE7A78316130D0FC9BBBB8A76D932B8172D7
D2565B25CEC34A138FC47F6449DA745CA17B5535298B7BBAF00393CB486780FF
1EE62ACC3C660E6E26D9EF728C291DA2347FE3EE6D197AA85214C1E2C208F2B1
C584E64E6B66BCB89D193F08ED0E975AB71A48E0936AC92B6A67A3E06D2B7D58
B5C0EE1B6DE181D826EA068F73234B897CDF0A5BABA91AF4CB1A21CC3C9A04CA
9AAC012C06718F3D9F12641FB177F6BE084160598EAA2084A748F021AEE56781
38203FF3428FCE6C7D2E3451EF0E79C544E241AEAAE787D478F9AC2A249D44E0
8368EA1EB47124209F7250D90FBD295191A2D9C123374B0BDAD6F427C6A79A2D
B1FB1399FC2BFFA40F45DDFE277292FD83B6E3B46B564B052B0CCE2200BF059F
C37FDDA9176F4F5EB021EB15B7A26CE0AE7631B5E4B46683667318D2C268BE08
6FC75DE3D8AE1BFA95A872A954BABB2786987A899E28EBF74C1F90A29F713C5B
0EA71791D94239667E6D199B96D29EA08280BE1355EB2292B4C3582CF203C50A
96EBBE3339D7CF54F8EF2F2FF5BC839AAB88BC160C473D6FAEBE7686F08C38D4
77CBD45DA326E365DDE57676ACF4D64762CF5D6A8FAC7F1EC8F491AF58E053C4
EF67FB6EC65416D2EB5152EB51257A0590C0A78260ED02DF9950B8604AD14004
B576F65BAF419CDB48C71E27774621D9847085D9142AE4C0AD9937B66CF2A602
5A9D37344830853693516C79F590542C756CA8B8E76033D47909F45CAC140F84
3FBD94E8BD6E52BB5725B3CF7232A908FC60A58710E338F800C14BF66EF5EB04
0C53C35626E56EA88BAD5B8B64D42014DF2B24CA9D46AE10AE5316E328F75528
C7FEE19E744752246F231F3AD5293814C37CBD2738DCEA1B36D3DF3B4787F5CE
0C97AA3D34B6AAF12B2BD21DB87F2E36CD5D0917BB65CC13406A69B73CA66946
0DB977F96C329B8C07AE3E7A3709AD890F00732A592C27004FDE5831DF5D2409
70812D42C8DFC16E97A323D7702780B3D56D13405C5CB5581D00E465F99327E1
1F4488D13D4217AD82C65D7FC13C367C81EB98A5748467C5D8CCBB281F789B05
57A0939B5898ABF14DAFE4CA472D2D0E8E3B7E1B6E779CB2303F176142CAF447
51087F21DE5E2DDEBDAD2B8F54C5E485D0BDC472C289DC70B5A6B6A9AE9DB022
ECF2993F8CF3C919E968B681FEE9D6D55AA9AEEB2A6DB96B260DDCBE906FABAB
6A8B8754885DAB6C6EBAD0FDD3F6E025AA1456404F1A33819B5B4A6A904D308F
EADA5A52B128A1777177D0141B5AF432C097EE2065A7C30ABC13E7E3F00E2DE1
B6C0843498E7CFD4DB082A05A1DE57B527A16B9E1ADEC5BB05632CFAE552B01C
82C46BB614AE96030C1ED3F26026247ADA3DD144DC91741A368FA893AD5DEDF0
222A7EB2F8CC45985B898D1BA036DBF4A91764E8646A056EB0250A550F53EA93
6DD0BEE3147C466698B872A43C39067FAC431073CD4F2D36713584CF7C81904E
742402991C90DA827BF8D40654EE39A2CFE5C8FB8F7113608F2D291053AD7B11
81E32B07F914A48D3B82EF9864BC27CBA56E1618E5234EC76F7AE779E4CEAD8E
498297ED8A373D9E9C9E53EEEB3C162C9B90CB8534D7ABFAE215965D40A4CA65
913A10283E617C4E9E9DB63EFE242ED13EF9ABA13F6E2EDECEDFD625C549ACC0
E1305A5ACF3C42024DC9203E004C5FD5C30CB497BCADBA7FEFD2757FA2B45F48
65BE3E3F5D868F7FB9B4FD20E42EA6F840410FE61E57991E73EBC160B0436DE1
6C2645540BC0441EAC09164F9B12721648DFFF5F05527A871675FDD2800B3421
5C8CCB7C74A35C7DB32715C75046EE3C710FE2D708B720F1E2D2270E55FD357B
319388E0E16B8E308838F9DC97A8BB577FCEF162734BC085962B284AE889EF80
1ABF8140B75CF243EEB242BD3644AD45C939308C5510808480E690B564FEEE37
7B5F6A886DCD1D9BD9AE3FB4FA29C9C1A257017EA997B425EC884CFCABC8904F
B37728BBBEF7532058B6ED119B8BD40A94CDD4823C41E0C63AAABF817C399745
D091D64047A5758ADB937DDD11D609150EEC71B475E1A557A52CF5D26CDF0AEA
D075D55759EBD859CB9B1E4B540F38E107A578F468DCA42CEE0631ABB01C8ED2
62075A64F4604483820504F0767B45B02B4BB608B3A26F04FD211DC5E7DC5A08
D027B4FB3F9B0808D832F3E8A21C36E32F2D603D0264F1EEE09BAAFB00959867
1FD3DB732FF2616DC41C19918DED0916A1E8A31B11A8CFEB666C4A3FE191E961
40B64E3BC78DA790994D78380A77FC1D7994CE0A65E2CE7BC423D376E2C5BDED
6ED7F384CF3E88C6C93FE86DDABFB82033FCB49A062C8460299914ED45764527
BAC958EC845F13F1856690E23EE965DAF63E1B427EAC278A2733890B47CB92BB
A1F67D1D889707A6CCBE7B51BB7A808B67BC2A11B8BDB8911E1864CE0C1AB2F5
D83ED05966952482A63DE8275920F27A27D792849CBFE02D3C634900CE4B7064
ACD328AA21CE547EA714C851110D879EF97B5705BED310DD87E31879E25B51AE
FB89D8B889B7B36B3FDF302401C613FF0737E1171F53066DEA5EB5A1FB82357E
EAB5212CC7E7E4E0717284B8EC38310422541A42214BBB0C604567136E64075D
171DCD55AA40B796AFCBC9FAD3E25E0020D8311CB9A8B115895F4DA2BDAA4EBD
37CA98E9EB411A32BA1C00842B78D7003A85E7A17CB453B0825C3E050933B2DE
99DD2C18183819D38D067C7369BD25DE0BB4DCAE75E4EEEB45D64D88A870B993
5FBA7CFC21561D7D065346FD5A5A0C5C36908846288EEEC92AC2BE5E90A36287
BE852584C91CF778CCE8FBAAC843259B214B1111437D9823465AD1466AEA3DDE
A0F3276CF6C4E4DFAD92E0B18E93BC17C4DFEC1D0D832F5335DC8F9AC0D6AE7A
E40E3CAED87C8412D3DC412CD94A553D0B33CEA34DB3AA110157B27C2B8F8E0F
B2CA1B5271D6CF5D9547A6A868DB90136129BBD100E45F67442C2269BCD9AFCD
027D7F40169342A61C784B20CC7381D5C540A787A0DDA01E52BAE86A5808D1CE
24CF7863583B7A00E0306AB7391B9607D5C88E3C19159440C44EEE6A113B35DD
98C929D223700B79EAE07C946A06FA4168083726BA8A210508AFBB60A61DB879
A3753157B2F2BB5F2586C60484889B844F5DE959F333A7E241FF0B75FE956D7A
38C9E6195EB88F8EAA8E963913624D1B7B354AE328925D2224F10FD8E081ABEB
05FD27CD6D22816638A8549C85933C2536E705A62A18A76B77BFED87163CC679
DC85C12FA2E9049715FF10A562CB14D466671B2B788F5C9DD0AF920CF4312389
FD49B2F73B15AA06EF381F79D449E89D434BB1F12F8051C4BC551FFB90BEB45A
5877F27219337D460C92AF5E0E11C90E80D5D392AED993627B44BA080855990C
0F6A7525DAE78C6326643843D440CB2E978ED5DBC5B79FFDAC29EB7AAADA659D
D12E5CC4D2BF5D2534DFC1DB9694B80F862AA47262E453BBB882B2C3D15DE69C
6639EEF91E61F281165EC1587E57946A52A5180CC1F06EA2BE03E1147E9C0C9B
BF7F1AB7D0DB8DDCAD3C3EA4A81E7FF32441EF062AE0757F119123E213615B1E
994C04A1738F2680972C0D77D618AFDA45BD0EE908E3E0B3F476A7E25825A8B8
940EBCB11332B780C812B5C8E9E6F3D32DE6EA4275E283CD196BB8FF45986D96
B7A29D1D09C9935843DB6DC3B373E90FBC96858A623BA10EDD037D5C3FE2BC9C
D49F901E1669EC8536F56EC403444B1AD64DB34BB773F0B1DD3E22ACA3C4E636
3883EC4892F120EFF769EDFC9A488EE3ED44591984D9EFB6E8A0D8A78E9B513C
BADCFB1E70FAEC4E597AE87FB07BE7B67BC9C461BB0E2F6D95B76A28CE50380D
93BB7D813CE8818625DA1A6477AE01D1876F1DA8B9FA761422D7F1492E7BDFB5
27FFEC0C70548158CA027DDDF48C40393157CEB30D3326610AA270C034258A9D
5B4C05ED4F3742774953BB6790BA30A55AC2275FBFF50CDD3529059487E75818
7F5BC655138672BC538EDAF112861483D0D8081374BDFD3EE818C316B7D3FA7B
5857FD5D9388CA7A9512904C352CC62DF4EB2E54A35191227FCD198B21709778
5D120BF92A432ECFA1E496BE684860C4F0BC346BC38ED0E6D90DAD8B82225BC7
78405F3A88003A44BC06577610497821BE256AECFE704A4BF348FEBCAEB27FD4
B1449E7298539D9CAE443F21AA640AA78A5AE4B9BBD3857088D581C48241295C
A41A497CDD10544226F5C6E052517CEB71717BC4E232465908E83AE3DA0CB0D1
06774370E8F502E4EB60263AD1ECDB84688392A12D88C8C647055A08FCCCB559
A3228C582BC4ACD9224F0ADF94ABA185A8D7039EB2169740CCA12416589D6C35
8ADF7E02FCC0C05DD36F778D8BACE3BF9507AEE3107654678288F9EEB15E1390
9E8B8405F69C6631C8DDA35E0304486FF4E5069075F9814A2F4EFF3B07B03552
0A5E857BAF0ED9DF8903E38F103A3673AF8F525C68253D79701A7D24D383975D
99A4FDAA0377419DBF63E54414CF4D1FBF05970845F651A1BA87591F19BC4AD0
6151D81BE22573F05679F709183A64D75B2B068BE063320A5FCC36FD8148AA47
3B91FD2E68B4ECB58A52EB975B479CEA1E13899A402050DDC17D57F2353F195C
6271DF3AFCC070EFE542B674820505B0BB5F32A07E44DF4DCD65AA605AC266E0
AE1FB59DA0086AA8FB60C78FC49CC4C6641266B504F4133F43F76253383CFAF4
68D983062887754A12C7B46C0BD3331BF0EA31D486F0F7B59EF67AFE6EF27770
6251C4DCC9BECFE8158F0EFA3B5202768BFF8A372958009F6979FE5466185141
50273ABD8D91DBEB02EAF922ADD47C628C86F499874588FB00735AE72D19943F
7F147ED237C7226DF86483BA9067396A6517EA3B25EAE9D12FC9FD3D516C0FAC
3DC081EFBC0F7643DDA91E250DC3AC668A774ACF3484D2F55A8DBBF434C53562
765DBD68EF6B84EE652129951610FA663E1F7544644F8CC822BF9585C90FDFF6
429109D7C15E95E85446CC93169AA043DC9DC3A194F28B30A42AC346E21968DA
A0EFB2930FE67BFD88CB321570A99412D0A69C377DDE8E082FFA5511CFBAED86
520BAEC3ABC7B1750A131069AFCA8204DACA38136E381F2ECFB341A99A696624
D2F065801B3A7A437616E2351731A3132949665568DF45E747C962AA22C5D05C
BD98E5C545E92F8E77B50E86E36BBD938C78E01F43677D7EC9B53D7DB3D579D0
3B374642131A67F71347F42BAC723663CCCD930853325C99023E03CEFBEECB20
542ABEC93519F85D5CCC07C07B6D305FE001428B1B79DCA8BE152ADDB3A77888
8E45A9CAA13DAC2D1E3E1F50739B6EEAD71A107E6F2AFBAD1BC0CFFE79958197
A335111FBF22FD87CD75C6B94AD30157B38044B1A04BE618D15D4F536D7DE623
0A1EB00792A892C5243963B837546728A7FBDA01C6F7A000B1563A50936FB3ED
E47AB7CCA4EDCD2643F98F508517F90B561E17180D4BBDAE125976D39333596F
72FD667893DD9870FFEA2E15B22A954EF05A544B48291529581ADDD7922CE0AA
351D75182D9059E837C48AB870DAD44E3C2E36023A9903AACFBA2E4CD398E8FB
E9127BCE2C74F91D1E9C2AB77EB29914B2013998ABCE00A5B4FE1A396EC7219E
60621D3A264DE1267FFCC21E93A62E9154E5DA39BFC5CCB48C3D78E33B57E72E
3AA80B5DB405DD51F5A724A6DD448C3D953984C5F9BE495C35373ADA61F40905
A8B297BE5D2373B285DBC3AD82DA3A68D8BB958DC8888051E3B2F92FEBCE2A52
D2204909CAAE98F627C5680A0E1DDFF4464AC49E4B8E3821635D8B1AD372AF86
488817BF82D908BF63F64AC1F75C4A9146D87A31D382258E76E62A5EC46787A8
CFEA90346E19ED7128EDCE3031B1F99DA62ABA6EF344788245856108F8E198DD
8B61D1049142DA40863B965337B8CE99B0909CC50B0EE4C75B3F8CD9989BEDC9
43221806678C107DE82D92BBDD30D76ACFA7900908BDCB7CBDC9C0FC006E8C4C
3F2D110060B9A4B093EC160157567F48B332D42E8D410EDDDE2E3D623B2280AD
F21897575008E6E45485A6915589105ACE1564C7804D10A5EC1255E9EE02C0C2
EA6A3289241FE03AA2A7A8FF9D993B5987CC0DE53AFAB1FD128F28FDA478DA34
343E38017E1C03828583F9644643D05EB16A7702DA1C61CD58A32A6C3CC6DBA9
0784674400A215F697F9E39BA6925BCE4FE4A96A8CF9A4F9049F479799D6C665
2EE135F41F3D49A15B82A8DAAC96BB55712D269120B0F0759330179E1F9C4B07
C9A9ADC3F860632FD9937AB9BA8FC13E745D868C51D4BEB61D0186584C472AC7
8E697DF83922EB9FF705559A56F2353F195C6271DF3AFCC070EFE54368C8AE68
5F7131B04C23ABCA88D3E224CAAB94697F49E29BF23132364003B089656EDA1D
7C8437DE05AE2F8A2DE569626641AFD0D215F39AEE5EDB6B0A4D8CCF232FC7B5
2A5A86932CAE0767AECBC8DFD5645313CD0157E001003B1E8D1E0E6288876C2D
D4E5396551936BFBBEFAF4D872586D85A70DD81EFCF24403FF6A5ECD9AB3C3FA
395199FC476E001A86D306150CEF0BE0E2B13EC5B8ADB182895378F12C7EC39B
67D945D5FC78AE813CEB1FF4871A17880235A24E7806186681FE1DB8CAFE9009
B445C8A0B21295668DD0484ED04CD35D907DAE068C755A7D1DCA5D48CA884CFC
38264C602D0D1E1BC87A7B371399DA8D30799839263D6F6E6AA2689571883CFD
32CD313DD27D79AA1B89FA400DB657858EE5CAACEF5FCAC11E1CAA1C2DCC3FC6
3CB07AEF9BC65399A6CC139E48DC4E0507B97A086AC1D2E04AE492C9609E2111
5B51A5F1669E208B2B391B3CAC4A52D627B5D7756E0ECBB953164D0D78C30A0C
E1F30EF239C02F759F58E807922A0069265D1A8ACA35778847541348B91C07B6
FB9367104EC44E38321B8D7B52EE6ED6B96C4AA9861BFEDF67E03186B32B9D21
09EE1F1B1092D172B9BC765B800AF49442E7572D7D0891B23A3B5F4E9D7ECC62
530795D3DB05DBA02CD12B1591E2A81F1AEFC08E5E0F8859350D6810FDB53285
ABCFFCEE51ED21BC82B1223864370E775DB8F10B7ED4BC31F714DD7F69C9229F
D10BEA4D986BCD605AF3E8E4F7D10A8FD37BA24A8643B6B677EE382C89E7DD4E
0C2590A0D62E179BF8E9138E8AC8260E9F8198E6CD8D33C0111F905CB1C0F03C
A0DF8237CA2CF7FC582C030F191F65598236D2F8DD60A894D3B0F3E33A5DB5C1
C39BD669061EFACDE682E4A33A0B347E9C1B955EAFC1CA53FC6452C08CCE32C9
272CC40B12B023BF954D3A52351D7E849F4112D5CF379B80B168479FA5A6A274
F69765525E2C3F5D2C6873771AB3528BFFA22495AD51A83A8B583F282C23B0CD
E261E91EE6254C414734E6E0AC1DB376EC233E3CE3163589F78C50982DB1A2DD
0DFB1E3742FA39C22894BEDED116CBB07DAC547FC68D9AE02771A7DCC07BA61E
A07A01721B1AC7A2575C2A148958ED1F852AB44FAAC287DF14E06615C14D40CE
C73182E9844D6604CCB7446D2A24484CD57ADC855A839E6797972B08E511D1CC
7821C12BF1CF21FB28E0726530D21E825D97FF15B2525074738D2EAE3B37CF83
D8D77323DED14694A1300E66F4A4A6DEABE63F16AF1A6D01E2E1E7B0A9658E63
0EFF67647C5637CC5B7C6E7874CA269FC3AEE08902BC4A7B5D7916FB586D46C8
3E9B35DDE2608B2EB4D58FDAE25B4D488C1E16D5C266A63F78388792F906DD67
0859D866A4D45390C90153A9E0BFA9A8711F86804985936F6890CDF8C72F42EE
4D1521B3408F7A3A102A013BF71E3A26F222363B020B77D87674B1BF8A5F3A34
F3F1C7C2105EC199E1E8A36943670BBA9A32DB92A30689891A95CA9BD14B9CEB
7A7F7E37F3ADC5B17E99AE43C434B07C050D29A7106FE2A71421EEBBEF47A200
02311E21F85404FA7154209D1BE8FCE5718B3C8DA7B3412A2F06E0F383AE1762
BF4A7E039FE1454F837288B71DB82BA59EA4D45B43E2F09B602044182228D103
F96CB0389DFACE15518D6D361C205190FF2731E6D35EBCB3A99F4B43E9382F63
035CA303DB744E3DA11C1557C2CA03DC396FA7F9F9E543F55019D1F687F84D2D
6EEA2C9CB7C49109F60A6C30209EA09718FAA1855482D93175835D86A7C007B8
729E6D5609B9BDDEB9C94EF15F1A5460779CE53674DF38032482113B4805472B
18493CCA59BF518E1330EEF44F3DCCA07C58E2C439AD905C303E008673C63EEE
A0BE2CA683682163C7FE5E537F300516990D0A1B7006AB21F3861574CB30D14B
65E5952E123B4A185C209D6714A7973701D6CF310F2862519FE72D12DD474260
52267CEE5EC1E23774EE902F057CCE9AC1DD3B4420D93D3A92FC33A5ED816963
37F9009719E6AF57967B23D2B98BE874B66FD0000DA03D06CDC3632EB16D347F
36C1B0EC3D45381C23D27CF7862568CE3BEBE14D201BE3D7C0BC5C139C8D1E55
ADDBABABDD2D3F4342311050EE628C5A71E50CF3B98178F6F0412C3ED6AE22CD
E89FE323EDB17AEC4E2AAA3033CB70FBCF79628F1813070E468F0B25D65BA911
4727F6C0C3EC9970821464D398A9710C6D94DC4945F48B8FBC424420967E6246
BEEA1431E6DBF2DAA38280638A04DE3C180FCDB2D979C2BE2FA6E1AA622C7FB5
2D603B96D26F0A794B05268E0F0CA7E03D2F70D611F3A68AAB9A4BA309F70A37
AE91709A89EA4E860D5558281A156DB5634D508C9E7AE566C388AEF21617420D
1DDCA42FD3322E0B75B616BD1C56E888660E0E1E65B3C300179F6CDD5F288D02
7E6D5107B96A5D26C1F781E9C257A428C9D3037BD5ACE22E77D5F78C71735E26
CCE0F5BA7AF7D320773265F7083276EBC0D33F55405E08E450EC604DBB45AD46
D53A93DC6B92872B45A6BBDE4301C03065ADBBEED6A0024D4C922A15DAA750A0
E736684CC75FCA3E815F7BD4FDC82575BA9F28BCEB30D07829CE332F29EA5F71
AECC2CD814AFF2516281CF46EA320B0B7B092B8A923299CD91FE83CEEF999136
82409B1EA402845AE26797DA62BFACCF0075525F707950562EE12B679FD162F3
4EA78CF9B2B9AF622381E75A9DD4DCF548BD67482FE52200B46F6F76446515CD
CF2A3EF6DCF2C4B6DDB2C3C5118A50A1434D1F6A19B29691C753762B9D7EC9BD
6C15323DD51F83F72F676973A687D45665F578EBE429B5C9598DC5E31E259CB3
33ACDE5F72FCE3D85F95A10F75AA497C8C91D665E77F63B44AD77464DAAC3891
528B55D856810521CF813C09671DF2FA7C1F8D6C5880C0D363C5A1684EA863D3
1E39F5CB255C5CCED9B4CBFA6766779CCF43A053A483115FCCD5D1A96B767F35
74D4361190BA0A68A515D7172763EEA48F9CD0186FE83A8B48CF33C621B7020F
F5910877B7AE5E2185D9925EAF65CF08299D3AB6F3D5C96C65291B441E14BC5D
73AE741FFF38708BD389B7E7D936C658947B334BE7BF0A0CFC12137992F199ED
2EA59D4AB69C1281476B55B0DD9465975CECB7CE2B2A804A33F82C2A6C2E756D
72EC940F737589A160EF86DF7E32684D392C6F5BB9EBC6BA115413164651CA54
284818BD2FE9A1644FA56AA5C97FE4CD31805F634C132E3E525A52D8F838C299
5643D3E7F894B198B8D5D8FC8A287709E6D0AC0AD0052356E910EFB6564A5D3B
53569A99661916214F0CCEB613328326AEEF99D9B4E076C3311356947F90C226
F9D3FCF393678993C02054EB57C24C3720094D9230B18001E4FC845BBFAC2644
E83F78D2291B0ABC631D2F0EA91C45D8E1636C1D89793B5033656BBB9FED7DB6
B36F89B339294E3D324908DCEF983AF14E13112C5752A80F8AB476A55A3A9A6F
7B81EA9ABD8BBA8CAF1DD18B73911A17746BE880C1EBD3ECD9236E1D9BC3B013
82E9A236500F577D5FE6F8124071BC9807A4B1AFD2EE8E26CBD96C32E72FE38F
3F2CDBADC123146AE98D4A60352B7E4E19B08FB40571448D2676DA180B1D8368
CB13777A334B11D51D82F83B2D2872793B213210D0B3C95914197F12EE8C86FF
F495F6B89FC8971983495E082DF7CB9856A316B2735CA7F75926D715EC326BC4
F8B72F8E22906BEFB6315F0DA6EE268A197B64270D275641FD8636BF0A83B7C0
70C1D880EFE8BB405A6343E8B1C62F9C1B9893164555EAD32674087F5D10E78A
229F7F53F9D8F521B812ADCF4A59DB073C69E092D0193A65BC02F81DCDCE7C62
3A4FD0DEB60C4DBBECD63AC7CB93D86D6878D8D01F03915ED8F1CFF3C0E47F3C
AC3D834A9D6039DA3DD1F95149A8360BA59BAEEDA51C074FAFB42D39C0C7BA7C
9C0C9939C57C0080F9CECAE9888F810145F415298DD10A78F8D5C295DC84B042
6A9EAE78FD96A0B0EFAA3EC8C7A38ACCC7D90C670DC490BA91629317D189EF75
2416CA9DC038A2A940FF82778CB092B6B498C1DD81F64F5B614A010A23885662
B048EA3316FE5F610F2B5C8117B4B9EB9815F141AC77B70F3B18C91D4D1DC26D
78EA48EFBBF33ADCC5B79EE2715CC5E6B12D879B71260013577C0381267BB2B8
0E0401C38DFDAF9281E69357533C5B63EDF778DBA3A923F080DBB3423BAC6CF5
E60072041376A9F6C79C53CBFC695F8C9EAB8F59B18A0E842B854935F14D005D
C599CC24300157E06FD01F65D3E1F28B11E21C6903B059E0AE01CC548685003B
D58E2F1D3B7EACE8273D3D81DD39BEA6D1FA0778B86072F335E7E54AEF194553
FFE3F316633831F6115F07F9318ACC9D58E3CDEC15F23F1504AA39552623F249
132DBC9BBEF23E1D236ACB3789D0C32C7FA747BEE8CE7EDC9E719ACAEF2CF1E6
A4E9DD36698617DBF67123479B9A48C3A87E08149DD38E377CEDAFF414DD71C3
46B544412A41BC2A347F749C64157705BCEF3E222ABB5C240D36FB6A0D757FED
ACCF1AA6859C739E936788BB4B13B0A13313B10126C933561AD0DFCD2D104A00
BB52D203108E8259A2324830771129C6CFA28C00DBBDB0237008CF74032DB72E
82798F9D59D48D3DB36F0EC6BE07A30B7299B214801C321FFE0FFE711D03C46E
01CEEBF4D7837098A54CCABBB4F8FD95FB8CC396D04FB75643F12CEC69DC3D28
EF0841C4E352070C5C10A6FAE496023C381533F66B9CFC59F7CAD06F18359E39
22D137562CBD9811B1E6C82C0EBA3C0E7898F20D47F0A6BDCC0D582110ADC839
CCC1C05D83AC19874145E813F9B5FF10DC9455E7399A7243B93CB25C4E837417
C862AE2229A65B8F2107CC0C4CA10D98BB90276794AEB6A1FEF6D0921C315169
2756B7DCD80B820CA85528AAD56B7C2CA371DF34BB89C8F11ECFDCF8F64A6C9D
36C06CEC280D24407DE66A7C2443B135659B17D4A782E85592211FFEF2522538
5F93D5FFDDEDD760C45AA9A19A7BDBD7D9B78C7A49217FB0BF1BC23BDAA8559A
FBC9B3CE3262AE7E0C853C2F55F94D712980F115F7041F33C682E875574CE0E8
691288AEFCBD0F6A09AF66E80D211F0819B4239189C948042CDF404D20D77C93
2490ED25A413F8653AFC6A361FEDB913D280DEDD8A22C4A026AF9D401601B000
4CF3C15F34E7FFA26C4CF5B9E6C8F029E683679BDE7FB889F51EC039D6893405
42402337602FEEF2DA5DC01D4B558AC140095DC5D8C7D92FAF862727D18942C5
7DAC070AF8E6133E8C723FAA126CD6E47C30A7181F4241370607A3136A0CC5A1
07BCC4055A843B411FF60A7B32BF2AC45144BDE0E26FB368C75C575D08F8C683
617243A14D3E7A9566E82939678D89B71FA6BF9DC1DC035BFC2AFC5CE823E8AA
4A489EDEACCAF7CE813D5E41B5103370FF1987D7324A784DCD58CD7D43FF7CE3
5E47A299C8E0B52BDA6BC5C96FC3B5076D272DD697A8EF58D9D3F6C21D895EC8
86497A0673B7EE52BD2208EFF9D5AA509A46D072D99CA51BEB559227F22F2846
9FDF1C09CB18E14E0E746E033377334BF6706FDAF0A585D843F2BE10BF296669
4C80F176D4BC9DA0827DD6AEBA82B6C1D72BC6922F3DE90C415C617CA019BF68
2DE56729AEEDC2A8F4088254EB6807A8B1EDF4ADD7A4B898BE5D79D6A80E16DF
4411335C9A3A8831FC0EA9F4EA08A0B6343D136B9B92A52238EABB723B5B9A04
227A9AC1170E1E889B373FC99D819940324B57E0D23134FC21A8D268A2BF6B74
CAF9D31972E23BD71E041135B5FA61D641B4A910DA04A6F563EEF1767B29835D
056E2244EC250705209A00F475450C658D7E5A8FD16E130BA8B0113B4C279BB2
40BD6EEF29281780DFFF214CDF2269EB9E22A99F9F1F47E51CDFA2E958D6AC57
6D59764DA97A923B3557393E65F963F2C7CAAC10A38FECB3200D74BEBDDED2B1
A7792BA7A84FB00427167A11574598826A55D06EED3A9DCEBA9C430F805C0B9E
B03E144FB1CA584B490B5F00C0C129461CA92D486FDBBFA1D75CAC2BE1401C7C
77B76E126546A4C46A9930362D2E1787028EB31660F69C7E6950C66978B403A1
C713E98291E2CA9BB2520195FCA441601E7F2AC0BCFD3AF0BBE5540654394739
C134DA441827FDE4A9359151F34F95AC6B7D173E5E653700DE0C82C71400AEC0
CD2A934A73AFA3C9C1E75F9ACA6CAA8AB452B1B6C6149618F21484836EA5685E
12B156868CA2E090C84E28C9729045FDF085629CE04D270601EE0E03C4E3EB84
96BB82C7880426B6847AE4FBBC2F43CCE388E18B64FE051F20C74DDB641AB524
B9C57DF9AAAC3C4CA7CFF86B1C7B618457794E0A3721FA03AA561087264783AB
3E74781941B4324C78413F6FCF4106BCE05A2CBC73DCAF4218BC891BB903A631
125E22EA457E431F2D209196C5BC5ED3F8674C1DC7E3BDD9C2B8589BF7B0F51C
054DCEA76DA2157186DC37582AF6744F6A7DF281F71EFB8291A2400830706E69
92F5067D13A0E671345C0570C9861B38C9EA395DF6E49B819A990204AB61E816
F181541FABCCB007B190704229A62F1127CD280E59A0742F487538BCEC020718
8388A85D0859901772DC2EE3CB33E075C8664EDFF43A7B5584B68AFE1406DA60
5BFFFD52ADB31CF31C28B6DB16751C3697412313227563CED589F465292314D7
2E5083B965F4F35CEA47AE1C9631D5653841BD0A5F2E8DA04A6E8ED71D83DD4A
916FED6D5CDD713B9213004A157152538BC27248D76D11EF5409F84C062413B3
70295658077707F0E67CBA355FB455790437B476D2C4721F608FE50D3254F0B8
00AD6CCFCDA493644D6FE6E235773F62A917E497594CC611107F7F422149A1F9
330C2EB1776DA03C9CCD834643FB319226F6E80162B4304BE5745EC8F079A1B9
994DFC940CE81889B9E7E5A0CF7F2D3233171C197C6C9F35FE326A99AD1D489E
BDF09E95D4084E5B19AEC94A2EA526DA44EADC4A9F110101E039C58D9324ED90
F22B3703D0A52A919405287EE6CD8E64B5FF3E4A82BA6C8EE60E0C9460E5EA02
76030BB5B7EE99F99BF2E1C05EB7A0D9194F1283D47FAA370645BB0CFDB60523
30C7A8C7FDDE9A637A0981932FDEA491EA525812BCEA39FC87ABA5EA7F2020FE
1DC984211B32611074A1D99F53AB330954C857612BB3DBE852FC13280FCCC344
8148F54580E54410758747BD5CDA40158332D4308511C162C5BF44AFB4D0832F
99F7DAA4A628D57AD8FE2A52D456B6C45621F35FD6CC0BF3BD444F8F4C3E55E2
5E087E436A970D7C957EE54D6C1C45321E88489D11170E52F2E192A1D1EC3FF1
BF67AD76E87397D0227CADB067EC30166C119CA6B68E56639C3E55665A7F37EA
CC1F9CEDA5AD7769E77E1A56452BC4491BC26D4D78B2C0123D4BE5E3FE92DD24
9D2C8915224A3219D07B59BC1BFD70DCE73FAB7DA6BE6927F62C4338B29D2FCC
4627C921070F8D204E128088FC596481F3A29D02D8397A7CCE8673FD66175906
B0C9E5F3DB64C24D175EE37EF4AF936CB7BB449AF6043B96894EC5099C679042
ED101DEE82381FC9C32C904CCA0800D2A0191A8E6749D04C176743CA3B9524AD
201C63677FA1DB33EAA0F876D7FAAB3B63834F9FD69238F75DB9031B474C1949
538726FB169BBD40147ECC5655477ACD02B0C33BEB8B3526449BBACDFD07A3C7
9AF6819AF5EF465DE7209EBF828BBBE846C23B7DE63DA3FCF8B2E5A18C857F44
4CF5946A6C6976B423BC53F90F700E2C6A401BBE453B99DAFAF1CD089E29F195
8141EDF0636AB9AD3F790BCE590E8F634FBF31ACDEE316E382685EA873D020EF
9756A49A484F9A49E71AA75C10E608A3D9433D1144DFC59281A2887372750D43
926A7343FE67A20E17C04CE72E6CE86DDFAF66C64195C12ABE4E1ADEF5922561
592B0B1A6D90F5EE383C3CA1A171E3509F4CBD5790021A2B7C07E96F605C6280
761A90287839EA235C76027071116D728FD2D1A3C80CBD1C5C2DABF41D64D7EF
047E6454ED22BEC20717395540BD06EAB1AB22FDC037AE705541D021CAC7DE14
57BB95F22BD69985EF2D4CEE5930855FF1D832F2D7354B8DEAA352529F6754E3
281244AA9921BF2F64904400642B2F898551E5881929541EB7227776AAB8EEEE
CDB54C2870C3A169E06EDA38DD4A85CA6FECAA6A514851FF93EEEFD4A4404284
D026F7CFA74EA5AEAE9CBC609E124405E2BC3625947903B27B6B32CE284C5ADE
E61941FE8D9554CDB19BD256BF7BD8BDA35B0D76A6F09B232E29E9ED5355ED14
C186E702FF440E40000BFA8DD0DD0566E03C76EA36DF57588E424CAEF0E9CFF6
2C52255A605E8B97AA3CAEA58515F3E70F7EF56AE62216A5DEAA1DA89BC7436D
E49390AC2371FEDC0CD0B7F8BCBA42CE6A05B95F02301325BCD7D87BFE077627
AE29BF7561A906D9433FC9B326BE4B572C6869C09DE11FC50D46FB5FEC85025D
4FA8DB3C361F181DFAF15188D29A63F0B20A30E3FD582B6F3CDED6CF12B62136
8B176A1510FB05B6D232F6834E77DB78256551B842B96172BFE1DAEA6B05D433
22B992E9D19D7614E5AB074B6E8F7ED4EE29E35325E47EDDC831933909265CAA
FC22E6CA65BB6ABC070CB2885044346322026C3D3F5E01C5D144B52C06489ADD
944D2F17A3CD06FB72DD5D5947A08DBA0232F46A68A270A2C1D871C46D44AD0C
301A8F3AE5D90B43EADA41C62B28A07235E699A8E29DCC5178A2A1347E040DE1
C55CD8C66B828515BB349F11093FB20223588A19E3C691465C5B24B8733FB04E
3AD6D9A9D68B370F93F0FB1759189723B9D03EAC70AFC3ED869F8C5F62F52D65
D04178FC7AACF276D54D52E48D571E278F43D951C475C23F2342BF9CFE4383F6
1C98B8DA3C9264D37A0D09A922D9D68D2AD15B3C3D694DCF7A64E428F22AC848
B88AF64009D17E9F61F4F0ED764CEE707ACC8B9AADB1D5BCB4C1AA11DDE9CE18
18F63681B491760E508E4729ED8046B9B2A2EFDFF25F1C6B42E803C920FD295B
FC9B482B624865AD9DC5F368E4179D204F9B0A6D54A0EDD10AE9F09332C97909
41E281B2D67C53780DAF5E9B37A3C627003A55B35CB274BBB3F3708F9A8FE5BF
45D9BC8A4A5A91A784511BC561D3DCC460A8E24A327B778494E74ABB0B789BB8
B8786EB9F04A01221EEFA282F3E95D9F626533C255B4E173F58E53C22C5A6F54
339BA45DA45F642F22A7F48C60AFF1295E1CB7EE7259028D3AFC89C3BDEA95E4
4A7619989F5A2190F29D6277961A5B5AFE16246F1CF67B281BD96522C129A743
47658B325D3CB974AC4F9B8767B533D637FDE7663E63AB94C723054E3598C9EF
83452AF01967A1B9AA90A6F56856EEA9284F2D0E905E0FC5E719F21CC0E94B93
4B679C1741BCD78F6EE17443F3A21B73722285972457E2D713367027F1FCB767
4207ABC90D4AAD9C9823A917344BB3C447
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFRM1095
%!FontType1-1.0: SFRM1095 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecrm1095, tcrm1095, larm1095, lbrm1095, lcrm1095, rxrm1095.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Roman) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Medium) def
end readonly def
/FontName /SFRM1095 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-188 -320 1445 942}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E48759F33528B839DFD4B92DF0482493852D12053A7904
BF6E144B9488970F220C299E80886366662C1276120E72472BF84082B9EEC729
F7007ECDC5A850C88810EA679DABE81714004E65D938DA9ABDF29C949A52EF02
EDA8451563235D51286E9133FFC7A27067DF0332ED614AC2D4FAB88EC84E6CB9
FAB41C933E84B88097BA8742BC30A81416D1CAA3545F08E2554B28362B99B79E
FC42281922B94604AABAF5F7A9B8E2D9A4358F38F2382EF9544B859D098DF243
034CC475CEDEBF0EDD0A60C907127BB32F7D85A62A44E90B4056D9B4B2FF3A49
786032C6B25794E2C0003C7852C6B0688351FBFC43300FB0B72880BB7B58BB61
3D1064E7D4DDB128A9B38EF7510B7E5F82BDE39489E2D1DF08816781B13836E4
89390F84577F31776FE43A5F94F817A4AA4A698AA4AE84B178FCB65F1B5A5CE1
334417595F6E40849041565BAA497F6E4B8F4305D849128C9A26A98B909EABE9
8F2659189ED27C588ADC7C744712B4D9AD0C5DD25D1233E979DE7F53C5F1C47C
E9DF254086E5EC70EBC6B7E080060BA72F15E6BB75C75011B15B7ABB6BF761DD
428FF1BD688938C75BEABA7DEE2AF49364D2E198FDC7F8FA2313BBE598ED3703
7ECAAA4670BE3A85C693ACA829A5936778BCDCDB38A5981D4CAC8994E2B2F086
26D8793AC1393D49A8F2FE391F0EF8899A7720697B908266F619EAB1AE084905
36AD29AC3992BD3D77682CA8EEC0A297C9D4F167F3D6FE94EE31C80742E74DB2
0331C9E1C649D036DA3B081DEEF6D171EFCA22A3A0D668EE3121032D3A55BDD0
2AEB87D439107FB3778AB0EC59689768D3EC943D49A8EADC779F610C3087689C
19E649571778AF3905B73C16EAED4E185C873186862E2B848A6F7FF06FD50FB9
A3250B8A6B0782FF750829F55C0655D4D6FC707E24F5CE10B99E14ACD4566001
6B380CE26B9807513FDD928653CBC3FF333C089C557483220716BECF3B38AA5D
0433AFF5A5CF19043C6EC4A49FAAAB10ECDA541E143ACCD729EE49779466D11D
A94FAB52C297569731F5BF3AD2FB94AFFB60B4E1CCB4595B2318D48BCFA55780
E205ED971C0B1BEC306E18139ADBC5AEDC2AF74042342682277EB1B742E28AD9
B0FB51CD6B4FE3335061CE19C71F2DB1522B4416AA366749D499C12682855A9F
9578800DACC9F47162A8E34FEF7DE05B2BDE24EA45C5521A5C45F278AAF56607
E60872B457F2CEDFD642D6219188350856B1F6E45AB8FE20E1807771A2C8C78E
E350D342AEA003CAE47966EE4B6A33DC92C67D9A78529F835ED70B702152DC52
D908138FFEC4801C85C09FDED112B93EF7E68F06BDCC9711D7D6033B728F9136
95F1A2F4DAF08E7CEBCC6FDC810CB54204E22C49F0317379E6B45FAF5ED8A878
735E97A895F9E3481F20137FAA0B7567E02484E7635EBF14C12720025A582564
C9931DB46E01BDC256801F25694819EA9FDB956CACD1C1D18C1B6137CF5B6869
90B9D2D6E80D8D0C3C799CA40AC41C3C5F811C274F42A9F8CC178C0EF4F2964C
F5715B61599E93DFD7C12716E8C9F9526133FFB284ED0F0B6DC0ED0C743C70EA
2AE33E791BFB54C61ACC54F273399DD819E013A3D943F55A6424FD038BFD50A4
21B796CB75AFCF6E99EDA8946B78E05E891195361D05DD7726AC8204E2C98C9F
658F1C765E754609D7266EE4E6568B22D805B0186E12B9BB75AFFBEEB315F719
5F1E1FFFB8B1FE4CEBE7C9F250F58B07189B323083B4A20D995CC1D43CC2A8CB
1B958DA526DB2AE050183B69F77A375F56488A9621814FE131604F34AC303669
653C6823FBD4D1517A9A36ACE7B2E2E2213C0C65EED4B73DA07FBD5774AAFB20
AC43C596E74B0F52B7C9720E9ED02B5C5C087AE4BE33F428F3231E4491254E60
B1A29B3D1612CCAE572B540B3D0A89652067A4EAC0BBB5432B32EED6A0425C6C
FD94B09A7A018A70BC3E35C62F5FA085F3158D7F16A563705D4D9324C5DCA1C1
0321DDCA88B03E179D01C3B303C6856735D904397FA5BA912510AC23802A803D
37EA5AB43AD5580EAE6F3FD0145DD75587C6ECAE796448BE5F0F0CE29AD1F7AC
75BA998117B9086A9D333D0ABD28289B40162534E82750938543066F7E02555C
B05210953D6F2D725214730B3AB6349BE5D19D19471AF79EC319718D7CF681E4
0CD1DB3082EF431ED9C5F63ADF55F4C8A7A7827720E30CA9B8F7D1A0A924060A
0D47AED3DEC92D0BB80AE4457D52E3FB1EA13798F2968534BD1420C1205E39E0
BDC5A72B77FC1B21223919B8F9CC6DA169D1A82B924DFBC85A7553E1ECC0A913
28AA9983695545D9056D98F884C5701EB670B46CD7200BA014041491934DABC5
C78CAE6B73476F123B3201C887915CC5EB99AC223ED5F7E7086802ED5CF0320A
A4EFB0E0E24C73234D17EB238BDB291EE126BE1B3B3DDF50DB540EE350FEB664
EC48DA42DC9A03102BB867AEA67F08288DEC08D1E49D2DF3AA901217BEFF0F70
BFEAAF3DD20E4145DC751788DFB9EE0411D25018A13A0EDEBD4C62C19E602D5D
5E7D0D0B625A3B1DB4CF994FFA731579E62A8BC5C213F2FC4146521EDF5CFADB
42D373B734D879D654E796192F554EF484F9359079EA871C7348B10C568A9614
E7705663A86C71CD5984EB34FF385AC2B99EC0A0649025A5A1D2152FB367649F
4A3BBC329BBAABAFF288240D55D109ADB818FB6F24BF8640EF573C930B71AAEC
79DCC3E0768D2DEA2F88EB40D5771AE5B8DE566393DAE1FDC15AB12D40A8EE78
384AEA69D88372E74A8C3085D6402C4D5759E2B167BB03952C823C0DED9C312C
D8EE5A583B4E98B9DC2F8C0F265C634765716DC06A04E3DCB3086CB84AC01B91
2C8F4F551E5A649B1A4C795905B30ED67F597EF4F02839CBAD948585FD65C8CC
17A2884DAD18E0EB09FFF006E7EBF4CE82ED6318CD3342AFA8C2997AA96D8399
D29D37137311D23479A3581D47752FE7FE13167E2181C9DC6678342172764C52
592909478B62A06012B241EBCFC2B9E6AA26C6AC580EE5745FE8EF4D556670EC
81A5E16C84B5354DAF3705CE174581AAA81AE1E1F727C30B163834BE704EC8BC
E9CC075148C96C95080D2AA11374718AD1FD1859110612CAC388A0C945E19436
021ADD090710A388E84018449B29BECA1E66C9860CB5CC2DD64BDF0D32D2E454
40BDCEE405A0138FB4F7E2F3E4E67A82CE6C2C4B87C4B93B734C1CACEFEC0DDE
35C1C2D5B7F7EBE4C9A81AC93B375A7F598004D9967BB5A52F96956A256EC000
852A744AADC8BA2C0BDB76755AA5778E4A5AA4DBAEE0F77226C214A10FD2D77F
685D8BA3F548CDC7F02301E27C6DFB8B68C5D30AEC52E70372AC64E7C6CB2ED9
0C397E40031CBFC33964F995741E08C2C1B302F2A877953C3C6F2A0143C87979
D8F997EBA76DC59C4B08AC70CEBB23CA066C12A23AD0E62A0172026C574CC4CF
05A5F075ABA4BD6C1C66D327BF64212E6E245AA39C5837B966F61D53D78DD57F
A8BFCC954A4C8F8B9B99B1424D50BDFA7C2DD97BF158A67240A8BC938D5C3572
A6F958C306FDB236042F6F08918DED09167A655543E6B1F15FF1AC2DFF08ED36
1E898D8D6FE65C93925D9ADC64EF67C8DD182AC5EFA2D38CC6490324B7D84AF9
29B84C1867C57F83EF6400CDE10DC961AA2E747A12C2D9AEBA64BB2896085AF1
DBCCAE27A9CA54C677132FD4C5CB85FE711E490F98595E29B0E239AC902E2002
A1BD24628F39F73426F53B4922DA93F24D2F1D4D3672A5821708792A50891BC1
B1DBBEB8214D920EFD0CC188727D59BD932BBBEA457DCEE65C9F6BC48A499E9B
EB233B21AA640A550FA7C01C0FDC4BD22E12AD1504CE91025F353124D89A8B74
43D8CB33BA1F8398DB30D313BD817821C67FB50074C2FC36E7D75DD3D914DAC5
0FDF0569FFB416C2D6030146C91742F96A4003E3EF522619B691A4A86F49BE12
2B66B523B95CE3BE0C671AB7ADE117A3CE689374E65AB7479A6ACC57704952C7
F4E58AEB1EF383AEDF5B51FAFF0174012508F26EED02B3AF32E8D6ED83CB8097
5E2059FE4D4BEDD0A1EC583BACF74670E38E33893E5D217D9F1120555D5ADDC8
C06DDF34E806E9F3CB3A9EBE51292CDAD93E182CA4B6E32ED7A4104DE8F3BE68
8314313ACBE3D401AAFA47D22117954E3540C9CD069EBA8B4DEB5C4255FADF4F
B1DD3E549044AAC962D26847B85AC030346FBE41247B30DFAB8E948261EF3E38
176C3C5AF01DC10DE091BAB45CC9BF2490A0D62EAEFF156B58282342412FB4E4
907808C003218EC0FD5DDBA326917751DA8F17D3DA7273AAE8F4DC599249F4FC
4FC3B5D92173A54E93A0EE2E90BA8B71FF0A8BB9236FDE9B036F40053D4F3634
499738157FF412F2C528A798E6BEC3675B3C8AD0A81070F12CF7244F2E70E7DD
DFC59BE732D6518A50E76592962E5BECBE729E4C1063C614795FF56C9774347D
34704B77FA492CDE638D88EC59C31B4CA1D1428FA0E147553296D02E1C2BDAB1
7C31C4CE7A17C95C439EE6974D61DEE2BBDA378CC4099D70AD1CDF997F07C9B4
7AB1EC475D3B9F70574393F75495B34B26ECD7B4611599828CA0967703105E11
17D735A50BA9D0942398FEE159A7BD1D4D134A07BDB08E12D6C08E97EA3C8C9C
89443A4652DD390A384EAD190CB950D0E91ED68957368F38574E24200012C938
8C4C99BA714838AB3B4C7FAD52033FE6CC7D57FC95F2007B6A68F73A2AD162CC
A49857A84B4AE53438E5BCB6210706817C9ECC49F2C38418EFC4958328EB87D5
D4AD7A723EC105A53E7E04196AC990715EE7F059D2A80F178A499E25C8A8A460
D7502E46E19AD1047F37AF54833D1BDA70B1EA8BFD930B9412150C1CF9C48EB2
ADF3F46BE339A32316087F80DEF21B741042F311138E6969E75BF021B35879B3
6D7B4DC6482AFFC61736736EA980AB2B882CF498FE7B23F81EE19692ED665D7D
3D24AA88D5DB5E925FB754650E85A282111A38581557F61F3299B3628E247CFB
D11F16CBB6A93A5F188A3CB8AF2A2A4F5C6DB0E9470EC4DC99E9B90AE7A7D188
0678BBA850C3FC1582CC2CB7D59516B2597A017B43110C70F6FABADF813CBD94
5DDA554507FFA6E0B6EABF4E9F8BCBCBEFD9990DCA0E529A8B41092226CBEF60
8C2A01F507F4271AD7D17A82822B5DDD71CD39F6991B917099D838466BA3B9BA
112990A2860320262F35306F9AB834ECB4EA7590C5840FE22EAE2FA6F83EC718
A824C957BA0B09212732FF45B535B736B52E2EE87AFE11A18D1A428A91B37ED2
C32E29715C85FC8532BDACD321D2245A89980000241AED91F4E3239226C6FCA6
C8142BAA2D7CCCA229CAF6C5C50274B4B1C7E6A48D18DE6EE28622CB458C6F16
BEDC3BC07DCEE474A07F4054E002D98A180D49116915E666370CB78A235F3019
0667FA5047E794965C6F2B88153054DC38B8B50077EA4CE53D164AFA390921A8
49F69A01BA71FA9F9A995CC20D591791BE806CF196816669E3E40D31BAEBDBAA
C5EC96215E0AD9F9D5BD03404C1C5076F98684D580AAA99B9A321DD9E9E16AC8
46CF236A1A5930AC881D8D0D4AE255AF31114B3F05DA6C9CF628FFE1AF092F50
035966E23506DE2DECD41144B430950821443AA81E1EA97031ACA99B4D77F27D
F349735B6CF4F0927970064E752B9E5C612529C9B9A1CB5731A18819338798E5
B95E417BC586BABE5C13AE8A3A6E15158174C787BB445B41C1CC7DB90AC97E3A
9BADB8E3F7A3E022256EDAC6A85C4123C11544005BD8C4203897C85F4D4545F7
AB4A7C08E986DD737F2069BAACFC239523C3F06CFCC5AD310C8DB07D3050FBAB
CB2C686150D7F0E303E9891D2F538325176B554D602E293239EC675BF3F31773
11F1FFEDD3114115536DA03E80C230A8FF65CBA13D1E562A3BD6E72C1F45FC45
FFC73EE66CDA3FCFFE541BFA01E70786FFE7EB4DB97DD9B19A7ADD12100D90F3
3ADFA14DCCA46F68E64BC1C54CDF3B1E073A8738C0581F74FAEBDEA9A4C42E70
F0A05D53F9515BAEE77963016A1C77555FF8EC6F39CBA82506CD515295EE75D1
A64F802753BFF9F21B83D81B9EC3D9D0437850C4A820C8732A4A15C4F421C8AB
4A6D3AB54B0A1F4B380273FAF826D9182842260AB1E11B361B175022167051C4
77EA7C5D4872F6B02B8A87DEB092A0FD53449F0E881F42404EE1EDA121E47806
E2296B8A82233F708F967186E21C33C360EC2A05BA730AFFDB80FFA13B59606C
D8ECBAAA3A5CAB5114269B71E48E01FE8E584154B6B7E9898843B47CE4A1E971
1CEBAFF2DBD230220BF99654305F720A8075B6C191B2796A7672ABFAD8A0E6E0
54364C6EEB78EC772F3189309FFCB4D57C732E6FF58171541089CF31EA626B47
EE5C6C4534EF91D8C5FD5F549FED4E719D39E5C3E62A571AF3970E6072477C0B
90BCD0F1E86F277E761B0C619AB2A66679B71CCA5EA45FFE19740DA51F07A0D3
4F90590B9C68F20E1E24DDAB059141FFEB21FDE3016BF4B4E0D1C657F70FE653
702ADFF4541B4326BD61FD8310B87B9136F37C0AFFDB80FFA13B5A172E0FA2AB
B6A93EA230341F8034395A1816BE746C5DF8665763B685F31B1198C6DE80EC5F
031964060151995222E14EC36746DFAF18CA337ED6716D87167BB986B681C005
DFB772EB6F5D9AFC92CD3DEBE6F2AA17D513994A2E8E130541ABA159779EAC75
70476F49482F924A4795DEA2323BFA60B94EEF41DD5D7C0DD9FEBED96C69A060
07D9839744089B899D47030F6B2FBF9A1BCE4E4383542222BA656101C3002E8F
1BEEEF87FF2C03EE0424A622FFBD5787738A65626477C7ABE5F5E07D9CE3B2E7
D96244DC683802807966BB4BEFF24F60924D537A4B2E556FACD43DC6705C5F70
C84ABCDF3F07E2D625EE92DEDB952FD54E0297E58B4F0E073866A8040715FA3C
39C7618D71156798E31BC225181BE0F3C2854EFAC11A396D4C7506C141B03EC1
B01FA6924E4D458BDF3DE1588DCC5B522BE4AE1C62CCE9402A35FAC32CEF6D54
1DF395C685507D1D68C363CA1385BED03ED18A1C4246BB0D54A66123F3B3A1CC
82B7EB9D4DD1BAA727AC3DC228BB1F1320408D3AC5BC38AE49BE5F5AD0563924
032E7D8BB5CC4FD77D7C4A1A158226AF3FBCBBA760BE8CDA1845E218E76611C0
CD332175E6E1708D45F25ADC9107E4EFFD9B0B6F1FACE055B8E547845C82D0AE
096E3643453EABD1702780B3D56D13405C5CB5581D00E3B77B725C804C803831
0EAD5F4268604A4EFED595318B86A252F8FCA0F5E5FAB469345697406FC1A28D
9ACED8C5E9BAFE9E1DA8419B2DA969DFC15CC76E4FB7BC2C470BBC818DA53AE7
EAB4AA9545B1C6E8517D66FFCFCC084DB324B01E550D60F47B93FC6CD546D0BB
633ECC7E500802E9B158A400A02FBA88EB5CEB89EADBF7C5FDE8670BFFEECB1D
3C2A2CD6C7E564D6CD3D32E4464E029B54F9330EEF63D68123F899F1164FAB22
A074B440786B4C449A25B9F206B73EED89379209F991C46036272D00B80E3418
BD07620D98DA1ED389D1655A30604C566EDBC7ABFBE4536219D2C7E800084917
788B57C33554BE7F16BCF5E6729806B271BD7FE5E527B5AAB41A38A796B632AA
CD8F946DF99C0E11CB74EEB223B1770649C2CEC4D91D676BB7B3128392DCA9C2
CC860CC11C6929C939F92F9EC509C609B829C596B632A6DFA87C8DD2CE57E1D7
BBD15535E200142A96928058BECEC2150D3DDB330B4EE45E699A22090DC34EEE
B947EB79F92719771EFF726D4F05D6AC47E01700F603283E0741EF2F23E14A53
F5C5125253A6EA9D0A5E2F2BC4442476C625DAC203A45DE48877A678F591B0BB
DF14175679FD9054DF1C605092F60F1C3237D4F9083FD897A05D27FAF12A603A
A2DCEA3056340BE64D4184828A20A07CA27E1B092A22CC1C05033C10ECE301BC
054639363F39728348F93F47F793B6BC3D4252EA423FEA78D0D952C1204D23A4
632FC3A74FA7AF79F4E755A55A19F08E8FA2C1225FF0F37B62F74F2243CC4402
2AB91C8A9ACF420F2E10D3CB0A2EDF34E1700C0DC10ED188D5D27CB066DA3B80
DFDC1D4A49FD15D7B590A4919021F0278F3C22A105CE53D3DB4CA6B76F8FEB5D
D091D1AF7BADBC63104BB154D41EED8E6349284514CF98E3E29C51B85F1017AF
EBE79BC3D78F59A5F4D0D4F5A7B12770AE4396DE767B8E4507488381C7C82140
C67BBC59068DBAFB562CCEB7453E64309BE6668BA1B38D365C9785A54D2224EE
0FAD167DB1589FD22AB2C3A34741728D4C953F32FB49E014BF4469D7B62AB039
92BDE55D712406DCC83B2AC33643804E789DDA75E16202619B4FC7178CDD5EB3
A60FAB4F776F10B5289F3C429FDF271C136B8BBA284AD74150BE28968E17BFCF
1E4DD24A7CC42EAB464B880F42F3E62EC84725604B266B8CBAF2CA707933CD98
FF1787CA37D69717CBC2A041414CFBB9265FB2539884A1B726C428A8555C27C7
3D19E9537688EF6301255134B01404F7E1CDD1ECB34FD0EB543249162D1E4190
17F0F364754C596FE91B3068260597D9F2EAD24718C154618880B4A972C3B048
326E6919FF106697C698D6B7F1EE7D05515EDCB162C7FDFA7F916A933BBEACF3
09A7650B855B9426B010525F287393BDE47388DC5D7D165BAB011AD527E22105
0F37455DCAB1DCD30399263B4AD1CC0FA3D7DE35EA77491700EBCBE78BD14AC8
E03BE4A1D410B5F8BC9E9DDFDB255719DF0EDB7787EACD87750C798B5DAD0AE5
F49E4A061FC09C60525184921BBA169218976FF8B59356D802A8E9C2F845BEAD
FF151E1B6BFBCF698D6D96D6308587AA86286BA26F4DF59754D36940A8AE1A93
141DEF3E4520AA121FA8439A085996B99730BD1B359883C987339039FD0123F2
A06D91E290A850EAAA5D3FA431C2FC06B8E84D93FDA5120EE98A018EFABE186E
CB705D2B910FEEFF1AAEC036756C27716078B553AD3DF63996C18B87248FEC59
D02BB317F43B7EEA873A39376A8639A4635D4E9BE4296953A4ADFD661191691E
565C9D6A2887D547AA113A772388B120C0F92CBB4D7651BAAE60063291437656
EE331DD1F93D0FDD83129410DB1B5C5DA4CF8BC19EE29AFE628E02FD3DBB76EF
007043D73C520C0C9902E879B75777395A19D63A97CBB7AFB8D7F9AACF2CC66F
3244B7C3DB349446CEF2B40D04DE8B22235CEE364ED35371CD12565B2461FE3C
A07BB12AB6FD302280B3F8AC277C71E5E111FA7659434FB3497AA7048B8B81BE
E724B1923FB8AD5D886B7FFCBD092A5623BB6B20FEAAFBEC34A6F9EC4C77930E
8D7DA817BBC7920974F6F726BAA4B0BD826C662BDDAD707963C88D594B9386E5
72728FA9E7891C5BA613881C130EBC32F2DAD0A7D875D0858619040A107D9257
58084F85857E56E07441710DB5622919C81A35DCE7F9F228FCBCD8DAE80DEAE0
F254DB0FA42B3D2A3DD3ABCB7824B855AAFFFC6A022A1FB427D91F40D47BBCC6
E1A37D7413FA79F4AE7899877F625E3CC3F21AAF113A10BE477BDAE8844D90E7
9109136876340CC38978BF01CDBC54C5080DAEFBD6142DB7634CA56F2A941488
05D2090112ABD68108C9993167747CA2DEBD0E86FD9133D41A1D77ACB10B9DBD
2DBA1F7588D6F7743A0983594214EEAF42CEC87859B4CBC8184FDB1A7CD64F71
9126C7547D1BF3BDDC1DA61DECADB87CE7DC5954D296971E82F7FC211E16CD6C
A4FF237DE46776CCC937B72974527AC6FD42AD5D6F2465D18F2525D85FA23438
9E7B447AA09BD8D2AE06A297517EF7FB7EFD60592DD6C6646A2E9E8036443DC1
9A5BE7427186D0FA665614DCFDE1D48A557EDC42BD94F2409B92D2D5D264F20D
DDC33466DD4971558B53559A8EA91F4E34AF897010DC32F6DF9F824EE4C20B16
42B77D128365DEA22858ECEE53D018076D984CF6E0EB6ABFCBAF1622211B91DD
7418E0D1C1D41CF4E4ED66EBC554C423974C8892F74F3711B500850D15256944
587A364E5DE2EF8FBFCB4C20C73ABE8126C69B7F1C8BD860B37A4C92ED2F46A0
1CF616F8EE3EDD778DF2A782D86733D70B1ACBEE3D077467C645B04FA6BA5BC7
F80772C87D350B303A3C107DD0440075818210F7AC185A4E0A0E4FE60578CAB5
46E3E66E4C75F90C4109ED2A954C28941F7D629E27D5F96365F28F36092F7942
0A3BDA2A10214F0A6CBE8FE422D24C8DA18BEC0A790ED8BD50E7E14769B5E89D
40F1B0D823D92F2190F679B4A8418A8F314D35D77CB022D606E1C404942AE72C
A5AF7BE01E27535F5AAC9EB49CCA370F072F94DBA9B15CC145F6BE3E3B8BF056
9F980612C72A9FD6369D2A4F2C8D13742200EC3147ACCB854A74DEB5C6463186
733891D7BB75519C04125C88841BE3D3C6E31D7059255FDE36B3E2D9F4BA8301
AA84D9607B7853F58542829D0BDFCFD097B2F859E32D70E7BEB81CBCF81E2BAA
51CE0B6069B3079C4938C68FF015E999F3DC37CADDFE69E10298BB121FD24A9C
849C42055BC6E9B5D553496E1EBE889207D8BC363A763EE0F5092CA3AD2AAE39
93AF46D4F0BE446F9ACCF63911280FEEE985136855350840318888CB9C0E8DB6
0C589A53E22583CB4DD16B0EFC62A8CA860BD110DF5FA30F458730C36120FB8B
7436070F4ECFE8B485CFDE039F25C7448970684BC555C8390E34A7EEA5EC1546
E1486024CEA69F907C93BB61B641F4074B66BC3EB6D74559E2CDFCCBADDDD3B7
D5830019C36E7C0321D77803AFDD3037EBB6247C6A85D9AEE633392265DFFC39
725921E396AA1D8AD2D5181ECE959BA046E5BA1B6827108319B1D48D24D6FE38
9986CD8946D757D62386143C32E53BD00CF54DBE6BFCACECF7634F4FC1AFBAA4
8EE80BD5A085AB904EA0F4ADCD4434BEC2A8AADAE75A1FABB1A76969D6CADDDE
EDD149E7E9D193316877C2AC5F92A0597AC1ED7052AB3E0C1B488FBF053E8819
1707EC3DF25242AC614D0B294D31AD1FD8651A9FC027B2BBA3B7AC99645B0546
8A28C650E3F6C38E0727DFD2E11A6F9256E19F2580801A46396212D8B3B7E6F8
4F650C5C2D856A65B9674D0AA78999DD504ADCFEF250A1AEE07334597D066C45
EF23F5F66E9165FFCA7473C3605F99083BF6B69094FD1786AE1AF13B492D0D36
DB293213F74DE267EC0077A7B5F0C2DAB577321DDF1CE1579952D19F81B2125D
3F981C24AF51972709F3D504BC54D97E201B8F1DB826AA680EDC6F395EE3A67C
4310CD43CD2CD08700741F1A2E3599AD8BF5E5EE51B331890A74C6B8C95F7697
7E198F04D14E872839663B09A989229C9FFF5747D6970F4259E1D4BD53E263A8
878378F1C62819034288A29797E2222CCFE870BD94DD09D755AD8A3B73CD517C
9B108773848FB9128FBE00BAA5D77705218DDD134AAD7C32A641F9248CECF853
DC2CD24A20558C0F4AC8B6F9E15843B88D494745C1A19AB7E93946960A7F5527
10086350CC32EACE14F17F49835749E90B47B7991C032E3F0B911BA291C0A300
D78E6E9B6E895E837A96E75454B7EAAE09463EB975EE3F62676B420E0A981111
5B54AC82DA853CF3FF053FB78EE1409294F503D9C3B46E57D19F344791CBFB5F
581D8218302104F261D59B40CE1E87A9435484434CE144E244A685A96C920B73
E76CA61EE5DF24F3777DED4066EADD277FC23AA17AA09E5F06EE8D5BCB224844
AFF9AA7F7445169F8D118914A919AA308DAA5F5DCA2601D4CB202B1EACC99FDB
EE7C4F687DB772CE1FCFDAAA6FC993115D73984DEA53961E8B49ACCAAAB09A79
B157D0C27FE57345CE22A8B4EB5790AC4ED0FE24D29C23074543135D087B650D
E011F5D0EB243F926513AAA8714476E4CEB868F1AB22D5AD4E6D502D50978F91
A1BAA3A320BD30EA9C76D10F521701AE2BE985EE91CAAF6EC1373ACFF3D67484
E0C4792B026C25EDB6B4F9F0BEB9F6A1DCC90ADE3440C82D48D6A33EDCF9D043
C6BC62D83914FA2BB53C61B5A8C71723B45D5D845C393CCFB2B652AED1EC42F2
37D046F848EB57134A80E6A8CBA72E8340BA6D8EC0225F70B19B8FE2A2577774
BCC93A61C682D582439918AE652DA97ACCF610D85928C4705DC0BA92325205A4
74D994D56E949F611D4D83A0F57B7E62EF5BDC564BC22E69AB1AF4056C369DAD
F464ED14800A6686BEAA8E5D449CB2580B844803C2BA33A438CA1A996D29B4A7
099B29C728A6B725F764ACD772DA0F5B5B75A5065D12B841D51D65FFD6DE5290
5B691191A587E3865E639AF21CB3E47DCB4E867620596515B13D1C5903B6F5A0
B75C53A9D16925B30A1A729B270EE3C4B2B3B84C5D1433FF8BAC42A5B0452146
5FAF9982B447F0747CEAE5B16A564333DB11687FCB4D1D84A1CD78ABB92C96E2
21AB5B594958908F572C3DD7CCB0A2565DDE48A32EFEB078DDDA282531E355F5
4A0252CC334383D669A54A00598E2A7DF2D36127CAA25BB0DE82027E96C9E195
2002863D00FAEF39A79979BA7B340F1B4DF41F0270B8124E09D7E253FABB454E
AA63D9FA63F8C18E68E6BCBE16E000486D0A330BBDAAA1B7D5BD036A9BF7857E
7F5573800C85466795D6508621C07AEC1C33CC678D1BEF970B77B8E29C40860D
133C8309D872F20E8070BF001B4776B972FBC2935865976B18E5AB14DB2350E7
64A75CD147BEF30AE818456D3589FF97EB2543311209BD22E8B9B515794B7CB8
E19014BF9754C4AFB0862E0ACF68CB94800FE8BFF4D4C1AF372DB036E6B270F3
C86F92D31D017979602FDBEAD29C6F317228B7B98DDFC1F6A1739BADF6BB9E13
2BF1DC744C62C19E602D5F3DC68BCEDD6C57F00BE89CE410D469A7813BED0672
6E2866F6ED2D1F63B41F13C0105C8CA7701988E9FFA82E1EF5332C61623AA4B9
B9974A804A2E22040209F6EDD7742C7513596BA023B97E873A90ACE6F1018407
405C60CE70C73720DF6757986D0633F792FCC991DFF41B1AE98045A97302E1A9
44A5560A24AA9D85699F25D3136A6958BA87A04A1D132C11D6E3C39A5327115D
FAD72385E21C5FF8DACEBE2658644C9EA13F5E7DE7C3D3306C0EE347E372A31E
9E8B0E8A184F8BE6B00707F362A83D128B7FEF54993E5D2257EC3FDD18E2A5BB
7D6CF2515688255E488A9621814FE131604F34AC30366961D2C4887A9F8B8118
329ADFA510A2F1836883330BB50E1ABF29B38C451922BC2202F2E12E294C4C47
7A9037ED1E8644590A22D348F26C78967437A1C0E5EFFCA669C4F290120F0D00
5E364D960F714FC31B8B2714E58E9EB2CBDCEFC63C3590D52F450A808A9C6C2D
B54D66BCF146221638F93B29D9CD1F6F985ED69D2DBDB8EF5C28F10E36B81514
4D0DFF6032097A528BB9AFE807D313E787434E3622D91B7B139D03476691EDAA
1FF64972FFC5C915D43364FF383F94E46DDD96B11C2CBD599A3AE29DE783BE36
D41AFBF214A56A3CB87B93BBDA5D6611E65BF378A48D9D93DAB9133829CF75DF
13F7CC3E2DA3D5FB281612FBCCB91FB008F59AC38F3A096FEF8D0E6F721C3232
36F712775AD6801C3D94C7136269EB3074E0D4D5D7E3C6A384FDCB4E6D40DCEC
120210CA1502186072754C984644114E979F4CD9473FFD8D8892AAF6389D276C
5CF78AEC964FC5E8751CC16861E237872E77748C865593BD0C121112EEF30B52
DE9C84486B14D0A56646087E79F625A526C680C184AE9BAA4C5869F73E9959D0
50246056FAEBB5C4DC13B4F7EE9C83BD99C192208E55C749E79BEB6BD609E948
51666ACEC571EF70D672F0EF58CC3A314B253D543F81DD5D5A7340F0C170D9D1
BAB5D05607BA7DBF4E63DBFD9635B4F23CB9B0943A23EC7F45612CC46E07875E
476879E6EA75615C1BC2FBBA51638B64DB98A553D754E53B726A3F7D1A965719
99D2BF7AA1E01B70CC2997B0B8880B8E01DEEDDB72B90892552B7EE4D171838E
564A9DA4101AB481BC86FEADDE5507E1D03D9328B455F0E18A0A64621C8A8674
077DB66E401ECF93019F4912B1489612D2E9E418AE444D2379B9DA3439FCF973
C4F22F8A3ED4CA0ADC12ED239F4E4499CED87A0501A4A39A29FB46101370ABD3
E4AF6708A85CB82ED746C87D1A8A83E7A209F9D650554C0136175E38B39FEE33
B756FB32D3D4A3CC1FC21E739EA13C252C60D2CAF13945B1729DA75FB0D8B861
4014F2B58F413058DD1E8BE9F6E4A7633FC67D72413CD7DCF1B49CE87E8A2940
A03532F8F28DF3EEA1A2E37A92E2B1071AAD22AC0B67FAE0ACD9C579EC29C825
30B02636A11760913198BA54FCD94646F6BFD96E5F3357C25193C614992A9179
1ABF1C59D86836997D93DDE1B88BC2A0282E4037CCE936BB4629EDBD1B678C8A
58C43BB929EF8743BE8F018A0B53E167799A3558E34D412DF23AB1A006372F2C
81E804EAC945A0DAAD30374C0538B82516DC854CB1A3062167ED02D8D3F30743
0292E7462E2C6D4340DFFD4601D597194AE9FDB41FCC4DD6D4ADB581103346A3
18B5F8BC9E9DDFDB255719DF0EDB77801F3A241840A43183502FD119F77BB2CC
4FE885893C92495C26A3A8D2ADA9B1E9383C9E1ED39406AEFFD8E8A56472EFC2
B256ACE3C88463EBB376C406BF6591E6FE5E557E255EC71C35C4E409626DD6A8
9CE01362BD41F94EFA9C8A8D56B0DC6E93ED9D24223E186C14E4C08D25A61DB5
6FE9364998A2F9A5EC09044A7067F4571FF4001AC86F1AC32F336832973812E5
0702801198D2890A99F8AA64617BAF4BC20DD657492E733A45A619BC423F7391
A9E77BF5B24A44F45F43A20BDB91831A76B01CC909B5CCE6D830DD9ED67A1D5C
B16A053495F11E82BA43DB1AC1B8659256A2AE0BC3FB01AB1F6655C06733F817
6820D3BA3CDDD85018920ED5912DB9718FBC25D1459F04EA286BDE84468F4099
9FA01AF880B3F933376F249BCAAC5CBD09D14AEDABF56F924E1F81C8DB3FA8EB
A9297958B39D4D7BE19965A9845BBFD1C91B25280FD2C960C4DF9A0866AF31CD
D0B38313FEF82379E88F8292959BF18F27DCAEEDA12C44C1B4681B0D71395E5E
9AFA55441CE1D587DE6F4DAE01CC8CCE07D2FB56B949ED08F440989453B0DD07
7BE121B3509026C8E276C99D894B8A2565B176D508B9780CC5EEFF3CFE9A4762
28181EAB622A755FE60883C1503A53DBF331002F785974A3157D9D047DA527FA
5DEE9B7A881D2F20C68D84022BAB43FFCDCFC9FF53C4909AE27D8EA106DF64EF
C0323D0B916DDB46BA5421CF7574684B79F021FA6705E559E73933D9B1F688D2
4A8A62509515B1FC16E8CE6AECA765BFE0B82F438FCF577D636C92F46AE3C394
02AFDEFDE65E02AEA249D05E950B9A0D50B5016F672352A15A8465DA544615AD
22FD6EEE377A4DAE834B33C39EA129FB2BA282BF891B07CAA6214FD0A4D62406
2F5BEDDBD572A87DD3836D14BCDF2E11367711A7609BB8EEBBD3459DA6CE11F9
C441CF59B230F711A5C1709C10AF5BB3F92685589F36F15BA84639C5C1AAB16F
247ED2EAAD1A8CFC613755EE8125BA078063017FBFD3510DE8CC5D324479CB59
9C048B417E639AA00B0BFD806FACBDBDE0BF9E2FE040F07021D7F914209AE12B
6E1CFB1D19B7F3078FF824236037C83A715BF2D7A066890F4DEBA482090FAFC2
29BE5D2196E0DCE82EE459969DF4719F2DB45BBF3B7D2A1725A6BC15C2983470
FC5A9B850E1F67915DC71C9950EA85FB40BBC6EB914FB2879ED2B1095A4AA096
D39ADFD18C0FEC10611BB36852FA54BEFDF6EBE5ADF45857F15304A088124786
5F4F1E64D8E2AEE753177F15D51485D359FBE02A5640E188384FD86C57D580A0
33F8F4DA39D7A73C7B544E19B7DAE41B21F27A9A084668523DA612F7A345DED0
DEF9EC98920946D8371C933E0BD1A92320F903293F21B8C23D885E6CB81DAF4E
1E230A7482AD52C806354543B9FA47CA8BA62146F1B4A2A76066326C66CE46D1
61129C498FA2443E2C76C10B15269A9DBE9A143FFA48EC469D611E0EF07AA173
DC6D1DCF06D54D5DFBB9E1357DEAF2DA109CB859DDA25BF7E75218CE0A873A42
666E1555A115FAC627430F2AE7A1813E3586234E8877B5353D7A4846BC2665D2
109A8642A9D79D69A33131F96752FBB00F384FBA149FA0021CA8A60E7C8A77E2
5389113E7B1D6467EEB4CDAE8A4389C1993EB5377C1413BF8B9B64FFE740F636
68E58E258EDAF9CC8EF1456788FCA95C9DC181E2C106CAFD43DD7743E7084262
2153BDF12A3CF27E0E431FC719F4390767ABEEA1F8653C2ABD53FF2080C9E0F5
4ABC5BCBA3601D9EA9EDF996300CBAD5A21C3FE284FB598FE53D05FB5E12C8FF
FE0BE66189E35D7031A7D3D5A3A5B353B1E67FA2CF4C383537BE246A91D355B0
50FBC4A6B84956B249AD29281A22EC80BFCB3806606C72FF2EC1A4E8BE81D977
5BACC2338B943718ACFFAF4410331B1DEDAA195A3416BCE3E965D6FEA3EEC98A
12422AD09A48086B40676990E4B52975AE8DA76043BD88A24F09BDB19B1D690E
0261FDD87DB755E60DBDF786F18A838536F3FE0B305BBCA0F3AF410195B67FCB
78FFAD6ED0F7CB6612F8F670436BDB461500B64835A13983030F8CAE76FDB2EF
B32AB56AA0119A6FC4825F01B23236A1C09BD5F86AB267E500865FE3D545AF6A
D00BBC1154F701F3F96347213507DCC56D04F2D7627B11ABDC3D6454FBEAD895
FD0DAE9CE1E7A230A42FFD64B9E4603A9F9A21A59F7B5EBDD2FD0460CB44246E
EEE4394A3AC5C6FBF29D2715DDDA1145F0FE8A2882E0C4C32252163360761C97
34A6EBF5F6422739D3C0DA698B0295B59B1EC234FED7B6AF81A23DA148F1C2A6
2E72A0CDF05C62FDE67FDFBE1D5A364A21361D9B6A7B9CFDC7AC4D0B76991CF9
63436500886C93F399D8FEAE3DEEA5ED6DE07CF0B1910ED59D59AE3EBFBD531D
4E1C1F875120AA80B3AA3DAF2C4305660BBC96D6C127CB71E6A1D218CD7082D1
958999FF76F23CF17109BCA7E9DA9E1997A468F428C0D3B196FC1A3F2A44948C
6D3C64672E270C4656056C518B5F7BCDD5202FDE6AAE4A8B7760829319C95757
E250C5CCB95232F9C84BD242B0CE8E5ED3920C4C25F152F379BFD87F95C194F4
3CA7F386E571161FF04167E0FFF971DBE1A9D19E5CFCE0CE75DBCD73B2DC1D83
D4AB1457A7F5C9DC14D6676853A4FB7069709BD5C0B85224793A46E9DF867A30
AEB39EA37525A3A0E0206C9841236414199EFB82B1D1E2E579AFD59DF01BA053
1BA38D053F96BD81DB1B3EE38DC2E21C2C7EBEB6A6D4E7C9DDEE26C2B86BC41F
E30BB0C3A11C93F641BA7B986438AFC875A8C56343428F175DF29B44D45C4D71
9259BDBD3AD41F183B5F100174DFB96082FABE2508EB3B634F656E97438B5E93
EE32499BE799ED28F05EC53C2689DDEB0C85181C11CB1CA4ED936E00591F7823
F60990C0630A952CF06D0FFC6138CFF4C80C7866ED125B5C4032E97FDA8BD4FF
A261A41CB85A17FD4BFD11FF528738C6C6322A5ED32A89611C252789433AC37C
9A5242693B78A81E564B947D7E456001D08AA572C53C2A1A9B23B06E0893AB41
8AF9623945555B6E057C6AD831515C0A6752C8EB0BA712A3F2C15103EA47597F
CC2A7AD2D7F96129D720B2E1E9A31648A187FBFE762B859878A23AE05B49F9F3
C45B01F056552345D693642D87C6F50BE00D29E9CC2EEC2487B221B011C2DB8E
D9DDA15230B623E4A229EC83F57445229B8B0E6F9B7ECC02A992E25155F48875
BFA359D398FE9612687ED7D9A4A0A95B979FB9773F1D44EEE7C8498CF1AED76D
2FF9798A871C8708C2EF80C5220FFBD8FAC88946D757D62386143C32E53BD00C
F041ECD6B187E4AAB9A553355BF3B07AA2B402FB245D2B8AC53C60CD071C47F6
E34CBD88B6D27E51684145A3D96036B2FCCCD0B1517D73BA673CB9E41076C197
1B846D7705419E8B06A797E749FD3F531C6815544586A17E6A771E55A0FEA82F
02A1F5CC19C9502B05BA7BE16CC0093767DCD47C32A89F937D413562341FCD30
FC5682ADF171B5C073AECADFF89925CFC5D85A28B616B9EDA1AEF9D81823FB0D
B0688342A5AD4B030980891DCABF251137797C1909EAD87BF0D60C43FD0EA146
B377E88BC6FFB14E7A93AA015B404B7B23622379DE103464A4A0586058D1AEB1
BE4E30FAADB18C03FB174B84787F644931D0AFA4C6E7E80C73B520D4CF563020
75FD30C217896BA7187757D085229CD7C2497ACF909A20045A27C28AEE8B8FBB
54F757EC9718B5E58124D72167FF0410C077533F4DE3B676CBBD39CDBAA5BE0E
DD15F26521D3405E14009AFBA50C02BBC09D2A621E911BE4EA740A3F0DA65419
F733D2AFAB8477B9984F6C1335B0BCC0F1011A20E4552BC3AEDAFEDCEB766723
36CCE4069B1FCA4BE08848018B90ED80DC3ADCC0DE305E7AD601613AE57A4192
F92E6042DBACB6271CAA991BBE9CF951CB89162EAA096308F77828E58DAAD3E2
123E3BFD7676768FE14AA8B0402EDBF1E507F6D8F511C83745164220E73128F6
C74810EA0AF8546B7F4473BFADEAD747BD3B71CB6E61BE3B7ACEDE3C2E0172DA
A8675A50CE83B05B899C8E82821E5CF1638144F8F9AC480826C8948995F6F36A
35C879356131CC2B0EFEC3E7100592B42C01D9912A78A7398779AED87FE99307
01583FBDA16B19690AEB1C1326D3E1A6AD802B4BBD2CEBD30E446DDD80E69C37
51EF775FA0AA5DA74B5F3FF6CF40DB53A552F5999A1EE7E0237EEC244189F8BB
E3F05FE0BED4795F0C8ACF5FC41BDD0A881A2221E3430AF41DA50DB24AD5B1DF
73699D3AA808B9349A2B5DFF63A7ECF2508C4EBC8F2FC9BABDF85106C9945A62
CE11E32B57C8CB78B21AD0F3BA7F18F39F5E745918F4174BD1099205D2529E3C
9D02D83EB34FFFE660F09D52090FAEEC128DBA3D5427137E8EFF765ECEFA076D
67608076C2482A283694578C408CEF54571686CABA81D388F65DE1E9830AC1A0
86F5E5190676E87D84D27A196C1202C8C1014C26187EC086ABA17BB167CCD897
B64E945599D9E73E5FFF2D9B27CE56376867A2D8BADFCBA8347351C246C8F579
148DC116851B5FCB8F4793D691586DACB628F3C6FABA5BC31318FF123B5C9425
D499C3B01F3A94AFDE0CAD84DEA4F3DD96CFB4E59BBAD2D13AB64E35828AF5C2
F3966893386573FF1BC921B0F221C9D45C221D32E00EEEF6FBCC47FD46260343
B380D79C4462598DF203DF1DC42EE70D0FB6E64530DEA1DB2820B29D7C9E322E
07D84E71335C35899FDB03E91545945DD69FAAB0C6063E18CD20852B1BC2C0AF
F7176E12C6D9DA4E8533AE56E653EF290E4522B8230055FCEF81C570156358B4
81C4BF3437ABB470A584F81C699DDFFF49882E238B34562402323BC15CCB46BF
517FAEE8121461645C1DA146F1A3F6EF5B3FC5EE679701BA8D40FA5E6DA65E52
5F8F8230AE70953CBA3CBEA08FD702F68FB524A9A6AF14283F240E45057A3057
1336505ED86B0290FF394932991AF43C33487DC12D9CA6F9670AB2F6D4DCFC5B
3A4C827CDD6CDDC73F9B970CC45CECD80A588033996BA4D9949DBE2F6DE676F8
438D312B0962D3056F7D68AF0BDFC6B550B46AEFBD456FD432A0A94F88F6410E
C7F646B235BCFCFD9EE27C286392C1CC224E742ADF2E32495A66AF783D459682
6F8D6802846CA4CCE8081C579B55157D638580C68F8F3FF0AFF7B14D7A71B561
2CDBAF3269AA700832F83EE3AB15B1EF64CB47CA09716AA96786A2DABD754A02
6916738B674C505AAFD8154C8E1B920AE6159CB03A4209092986944D7E455FB3
6495CF17A9146B2039BA5CC506AF734B02EDDF2FE6504165D7679A3A54D45B7B
EE096BB7DA8CBAB12B237EE360DF200B350C4E6F0376B951A0D7F2797ECC4810
A3C21C3EF5D24F86D4FBC3D7C9ECCA5E08A8D4B645F9F6F09C23AD5D0D297563
3E223250D29D0959A8DCD3AA1B21513CA108E1F0D8D3FDB4A6D6B36045BC98DC
36EAB74999F86401C90ACDAACC3CBC4B641AF58E2F6D3CCAC6545E3136CBFEDF
A6F49F16EF9459F46EB8F26F4B83F13B1AB06FCE61FF91623674B6D30E9E2289
661318F8F3046FB8A31037794F4F4DA817CCA6C463F832D410E8361A0B154168
E94FF8C9DA4D697B9A54401ADDF76A46255F1AA1FAA1B385A1812800BE5C0E9C
EA424EF99538BA919A2177FAA08809DD7D18C8556DE3BAD8B65327FBAB408A3C
5A4C1AD005E7B8DB8822BE78D25E9EE0EA3A9AC1C5CC312FE844FD358292E6FB
0CD22D1FA0BBDA5522E5F5ED2C20064D5D092AA15AF87C846DD3827A6CE3403C
32D1B16D915D12BD1ACE130E816893CEE8413A7DFF74FB23AA46AF1ED3231FC3
23B61F2D00FBC3B8B6DFCCB354318BC765D5729D42E5B580183C9C6C4869DAF4
4C0F1E7B7837AC58D1199A564431469F69C6DA7AFCF716CD0FBAA679FCE17CDA
144E151BFA7FF7D8C8143D82B25BF258FECF7410B345C5104D507676DC5766CD
9C773FD5339BC2FE802C38C1F90BB71BC039FFBFE95656251B4137C6829BD630
9AEDA484CA6A8BCB6F00B45CAF27EA13CEBCD8A642F3446017CC472D0A27CCB8
861AEF1415690F81168831D46AB72D994EB3071D9999A8642527A73618D4B172
82E0E8E1B23A839E7948996BC2354209B1C41C840EB5A34DDBF619003DAE15A4
3A8F771F250EBA275697EF2B8F2E1F8C472CA9D2E9E55809A4B28A0573535C9B
F741EF2E5FE3DA12A06C8726812D48D72EB9074C829378B3CBCDFFC993615ABE
53960B873FF400FA6719724FB5ED0E962DBDF49907CAAE00370C65A7DDD8D2AC
C24E7BD59F484553B9FA726C871CC49BDF40D7BAEDA47B35A08B027A9FB390E3
88CED52187798D2DF27E4ABB6A50E646E5D05F6DF0B96601557AD6C58C79C8EF
7EF7EFF822A61C83F3EC86DB92A96EE9D929AC3F8181F450E43B54E29C7628BE
E024385FEC1CC965B34EE4684A78E555AA891D77C6C772100BB7A27592606385
4F2896CBBC8F43CF423A0A3542B89454BEF1CE1E3D239AF526FE79697A8490DA
94432700265E5ED3E0C42F1DFC08403E844430EE5950D7C01AF691049BDB845A
89CB627FF617321AD017236C2856D033AF265209B5450B2C0EA6CE900F29B093
AF9E3DB42C4B7FC61C8E81112F3BB3DFE6859E9D692FC4B662FDECEDDA396F2A
2D4010F8A4F9FE190426E1D1E0AAA2E15FE0F7646D548560234049D7A8A4103A
5D67C8DB2C944B2CAE237D61C9364BCB22EA90E70FF0D2F0B1F43143B4CD95EA
21C731E32DFCABE0F21AFF9C7D9F9FEC1CC4768126327B9695ECC791D09A8E81
74043F06F8F356E6F513C7BCD891C640D6519D457970AE609BF2CCB9CD7F56E8
721B0FF68F92C1B827B0FD6592A2DEB7914FD3B6D37D35778657D606B706C3C0
F84A9135C22D7D89AA954248D671E3A084527B253458FEF2D0EB314092D5F90A
1781D5FEEF0871ABDDEFD50BF9711B2FCB89DA837DB327FEC5026511E4E123D2
86C4AFE7CDD624C8ABCA990898BE1AF872467BCD8D0FB18EDE6E3B7AE31DC4E4
78BC402407C3E8B5C051BDD0CCBC3DEF38E748C63FFE14A838DA21F73BB1AFDD
970902F18F45294464CF8DE0A2F6B3D25ACA513CF11E9444BE3C304250D32FDB
743ADD30A59EE1CD82A8406397326755788F9F664A32C2B8E038512CAAD865F2
D83A33916178E43315232DF9B2146419E8CBC6401CB36D3A58DE584BB28C1CD4
0FAD23C48CF0766BB19823C8C243273443D34A5BF16EB5FE80F7D65525FC476D
929190EC7464913A02D55849A7FDB1CFD6B98A8E921E912308962A407B79E14C
7313376891CB97D9F8424294BAE2B1CFAD2B0287D2313135AE90A09AFE548DAC
49260B3D3DC480352DC3F9EDDC94CDD1287DDB61D9447CD7AD7629B9E09ABAA1
9AC4416995C4AF69CBE9CE9A7E48B9AF530D5B53EAFEE450EA02A9830207EEA2
2C862E98797BDF8207CDCECDF396469DA1C4A8B580AD22AE88BC9551124097D5
E266D869EE4AFE5B37D279252F8318D4C43646F53F602E15615E1A066A740A0D
EDE6C36FEC611D605F42AB91250D14C2219ADE5D900D3DD076347C3551A4910E
23D0F3E297B95B28E153D5EDF2AD6172C5FAFF1F9284067D74640D04071B25FC
F5099729E9428E016C4C1B4D2198CFA7B6DE310A6B51C10ABF092DF0B953DF5D
1E5F4D03362155D6FDC2C8351CD9B3CEC0E3E2EB66309E1D7E72B3B9AFF8D4F6
6C22C904813233EA068FDFBD00A4026583B5074D4A2598D19CF2F5BE528744FE
0C42360A4824A79D7241A320287C85FA8ADC6BC5F77F3B71D68BFD4ED0D257BA
104540AA011D4B0D70DE40B5D8571D23B792A077246C850933295F7DB565F573
C24D042B9696EBCCFA1A6B403E0E037B977D0D48D3EBE7DD191EC395AEEAC851
3C3F85C7D14544EB45BE5B05C8E833CFF0999A92F2ADB3FD1ADF5EA1F8EDC6E5
CCBEB4465400106B1FFEA23C5DA65CE7C1C7D042BBD4211A9432C9754FB54724
D0B91A92620147678C913F2C369F969E9A684D54B199C1BAB30DC7313E111637
FF69558C16728E1D3B48CCD907B3A156CC551BEAAC43EC7FB144C19C249EC058
505012EA90897A2BA7771D456CBB0697E8ED772851885DFBA75922FB7DE41774
00F6EB17CEEEA2A6FF384607B6304A3E6BFF29B0C3951B66929CE2E6E762AE63
A72740DD2476CEA7E77BB710508631817B0AD1EF67E4437230F0F7E497BAD780
10E48460A055DAA410211EC8E0407D0F8985898D3EB68959BC945735A9139C8E
8B2659CDA4820217168E2247C205A76F50A555461B841B5B60930135D9CAAD12
2F782C4200ADB3BAA78D28FBB0B4249A666CDA78544922CA2B1F8607ED795A07
789D522427764079288266C4917E4CEC900B34A6CC68AB2AB98069D66D351AA3
425D46C12E17F910A5F0143FC2E82181643C1444964F245F162F3C0490E780F3
A76A12CA31DF1D0A7DC42C6AB9322CC5FCE13A73D7D393E585E8BEE2F0657481
F1BDCBAA04E2ED181D9945405E91020CAF362DD9C14061A66D03C13BBBE24EF7
B4A8FD066DB03DBEC68EEF77C900EDF2EE2A1B984909D0BF5504FB2FE02A7B73
339CCBCBFBD463B3C7D48D0F0E1A46A7BFB6DDBBE83B80EDA50A32F5556D2FE6
3C23FCEA4A18C6D9E2AB51271F8AB82C6FE874980A0C97693F8BA5A0722BDBA8
0BC44B072BD7B164A992002E35B0A6868FE268F58B5AE4A3EB77C34DC7E746B9
583B273E177D4AFE8BA9EA85AA24C67384E82F6E702E6EEE0009D3027A318A79
90DCD272B4CE46610B9BE081545D816815B3AB6D4CE1E8D0D69511C89377D956
578748496CEF900AE997A2C2C07E9BEF3FAC662B95FF68EA22903CFB7CBD223A
E934D1158CCD9C3300EBEAC1053D06EAAC0E2D058438EBAC968B99A1246D6ED9
458AA017DBB18F1FE333911485E3D2632AAF132A52C682DA76190BF5EC3EBE14
9E7E64030627E9C43EEBB7EDB94C4CCC3E8B52857D64C93B30CB7CFA19AD499B
79351BFA3CFA6E87F1A97EB3AD7EA642A18DDAC3754BB927B4723694AA7BC36A
292B7E3E8A4D0F18D8C2CA7318E4531116D369EEF6BE88518D6F0A916062CED1
84795DD13DDA777CAD924A0BB385A78F0203FEE8D7DD12CC8C1E3B2326482381
B55A8971239DF1E4EBD70CA409D6693D526CDC8829EEA4009867263048281B68
38377181339FC429D359D9596E1F4C1E6C44098497980FA8962B08F38478E6E4
E9390EFAE33B4539AA3F92B397EE2BDEC49D080F3FF9E0AD29687748C1C8A998
26047BA005353821F27B68B8841F6C12122735DC8B774A4EA96C10562D2D14CD
54C12FD6740BB2C7C5F4F5730E7BE7D00CC4337924B2BD5C70AEB56B3519BC4B
AFAFA5D792CA7117FB6C6957A53320409D34037E33B41B6AF0E194081B1DBAE2
3E158C3A5026EB9811334330BCEFCBF0E8C33ED491E14B25D05501B750BBE100
8DBA35754B7247B537B3FA6550B0484833906881370CE38C5FDA596E33279617
A6D81BAA4C84634117811A141C6AC46A28C955E672B4E278D02C3C435A94231C
EE0BB2014677E2F002C0C9D29AF2922D9BC08B19F00D3520E17F0573D822BA63
DD25393F8D14200D87BCA2F9C3B1F021BC7A2EE659F78AEAA9F421D0A282EEFE
082468954180291A6FCD3E64360CC50C16C1A12574E2B4CCB1804B7290F8E5DB
CAC67DBFFE4787DDEEEE8E7689F1BBEDF7931F303F2E30F5252984DBC6D0717E
A4ACCCD877BCC72FB10E520BBB7779260FDDB2F01B741607B848A942702E565E
FE3E07E029FF5BFC6C0BE1AE64A8EE2AD54DB51F28ED88A6D0C060393785B25D
11DDEDFF7BC2C93BFBE8C9BBFBA563FA083585DA4CC7B95F8A6DD9A430C6E38E
C83A402DAE229BCF2E52D669A6F41A95A62A92D87F6F1DFC2F4AFF79754E2E60
2700A3B96F99E108838EDCBE0A876F9963C1CE991E95BC8E5FC4AB1825C43CD0
4606D26BFA9729B3AE9A27DE18C254EF31E1BF7A6AB4AD3C8832943D85071734
C7EEE4F0ABD4378D9F754D11DEE579E7EDEA46440277EFA15AE06C8512772F0B
0A7ED9621367B2B19EC5F090D2ACBAF65DDF259D6ACC336666DE5E62EC0F27AD
F1F448A00A30F242AAF50886337EC5CD1366F5A7E8F913051AED35F72FED1CDF
C0EE56D7E7CDE077DD5AA6B72D12A1A0A4C0FDFEF79AFEB2214DA6D2DD52B8BE
68C04B7EE9947CF6077690CD002E9F42F2A1826795671485F19B04BF278C83C1
2EFA575C9F3DA1343C4431217E33A956DA6A99E6AFD6F20B2B57342C9DEBC2A4
710A4B5EE7F7D1CACD5DE239CFF4661ACA2EACD16F6419AEA75C45DB466AF866
6FA1909650C4AFD2E70DE5CD36C776D5550AA82D3687FE4AB913E02BF3AD103A
1A00B8D14B8D08C61889B7A93B962A2F8428946161EFBC3766A9749C4C0C747D
13D9DDCF32BF8B630C8C1E6FB669C5F6121F2E0D01FE21AD254FEE67325776FE
67ED1927F016E0FEBE1C7DD2F156ED077F7C332F930E420DF40BE16907FA0473
6612AC630F23B27068EECA22902AAC7841D8CD2DA3A7A0C4D8BFA94FF56FD3E6
80524AA0CCEB6A048E68B671ABCEA6520EA13B2C04396ACF4A60DAECE11A017F
BFDE79F326FA612BBB9B014DFD289915B008298A06CA8DECA16D4F1881B9706F
AA691D901E50C4E2AFF1758DFB45C7185B66521484D51AB9D284E9042ED3EC74
F25193F8EE89A8CED7DB1D74CA8A7948C2A909EB91DD1F88A1E6D03C379A73E9
51B1F53B6896B536E8BCE11B283098E9F642BFCB54F278FB6119576093E98FFD
362A380AEF2080E73CC52E69FD1D7ADE7E8F9AD844D350B1D53A0730C19D7DAF
2B851425743BE6D5358959C8F1A5A9BBC8D9C30CCA053EA269C638DD315D999A
EDE3F7EB6AA4689CFA9655F468C10D6F276E8771061086FE2F3C198548BD19C8
FE9C491B648AA31D98E13131FE47E11E5A46BD742F85C6AD8107BAF5A92CCFD3
498D1E6C8FD64EE6297E82DEA2A048674ADD0D6069C7C66D86133396F53D419B
542B1ACCC31B429FFDD3C84DCCB672E69704A88AC34433653D96E3AD2CA53684
C369F0764EDEEC2007BA15251335AC0364D8B749CC87A925E59ABED84A7845AE
B20047F944957FE6FDA0A4B9897F52B4C50C7628CE05BBDFAE1FAA716066FE5C
BC4582EB97E8F17FF69AF9C5C88C2212DA854B32009DD744A737D71962545F6C
5079D69C2C804D45C2C51D762E48DCC138E8FACC39AA878A0EE89EAA88E33A90
29515CA552300CB384753A5D6B12C34D50C2E1C6D86BD7F08823BB69E99CC693
450D5617EA4FFACBF009FD063392721751682EAF53A95F6217FF67CFD7A6D265
25B2AE0149EBBDCC6160306F327DBBA6A1E1881A73FB3A0C6A6119268797988A
B3408FD6A32FBEE3B6D0C1C08802CFCD76A6EA2C5EACF3F4C0BCF57962731D17
14174DCEB54EF945828EE6A319AA922145B6C7EEA533FBFEBF4EF152C8C916B3
D5CD864697BF368BB2B1B58DC5D13A3EAA5399D30522BF25EE9A985BA9ECC826
1583CC52890BCAB91D2BAEBE374DA7C7A6FA7B7CE979DB3284A418268FFD2EA5
262BACC09CC5BFD441C5A2AF39614F00938CAC3EF90410EAABEAE0553858E927
590ADE5608F72DB4D1308F1BA388695F65D315F8454D5A0895710D186894AD4B
4510CAB41102DBA0E488D49350E43E9057E8047B19D7BA43AD61BB4A827590B9
F7309598B11097BF1709036A2549D100D878804A2A2BC1303CDF55E994432A15
2F96BD94EC30041C3373BF19909D27D03697FE95E1D2569DB66C9C09303ACECF
A0B01BC4E2FE1BAAA3287B026C0D99B9AF03610BC3082DD45557FAED82426BB8
21E0CE3B04719A47A001B8A89AC165220F961CC44C5E5081F8E2F43AA28FD01F
A78ACD285F25C01B56BBA95C73ACF591B95B98A5E543B44210A498C3BB05F183
5F57667BEBCB2B9D17BBF3E6AE9F3A91D9E7F6AA7C2426E9C4D7F2751FC9B72D
8521481E4462D6B134B7E6BC6C0E9217D225DBB2F3DC21796A6687A28AA1B3D2
7E23753BE7B8DF70C8A77872AAE46716234A7247064D63A6AB103986824746D5
242876476382110EDEC12FAA02FC9956977BB3809D7BB41E23ECA6120F8861EF
3E755DDC91AA11D68DA86638D8682E569D16377DEEAF68CD03D79464BDA4BC13
9D783E445384FBDB6A9710C799E1AE466B746B42052FEFC750C05C2B27526F2E
A652CBE25CF8AF1367EFBB6A3D9723DB1C886F63B509B5842582682302D964D6
0160104E673D6A89A6704653C265A748A010A0AC12C58554B31414CE11D648B1
87E89A078A3623A27D7E36DE5A3E246BE725539506D440C769D73F1DB3B52545
00B9E7018B1C081C352AFE066667915BA6BC61B8465BD43C84663C009FDDA477
754652404B6D0EBFD196468D5DEFFD3287D6935EE22488B210B1406FF9FD1D70
E80F8B3AE5E91620017587DE96AC68F439100683DBB99C1C9B528812F0A6F468
45F386499664BDDFC8B6C3187F0EAF8DAB51224B31D8CE4BDCAAABE965E3622E
238C1377B56A90E70AC047E2ACCE7330007B8620A0AAFE42661AEB960091D971
8C8122F576CB85AEE46DB7B9BE363EB1BAE574D5F224CD281941DB67DAE58BD7
D2F2ADFFA3964C0905196AF3BC8E0F5A929AFA47116DCA2919729B38780B276D
EF36BC54DA68250F8BBCE08B609BEDA23A968E8407DEC8F67627B2DC56CD48F9
0A72D06470405A0757FA43E37DA13B0FE6FA855C0A4B408CF16C235846BDC88A
961B04DEC3B8A400C25D64E7519F349262F27FCD17A9B66B0019A5DDFF53DEAF
26F69AAAE368853DA89691B10CBF94FD8678655E1C7A45C304954E1910903D8D
4231948A7DC2BDC4F1E1D511D69E941D8D751B4FE8069B610C4096E8E2A8DC44
85AC46C57F691BF112D7F2CE102C4B348CC9C7832DDECBDC3706074F8E0E1CD2
C12A72DA2B9E38A3F929DD15511E019DBCE91C138C83AF62EFE3EC0986B21A7A
1E8D1789F6876C04D7A14F728B97704219F8E70158C911B4D520DACD386CC452
A6D79DA38AE984AE032537EF33E732538B300896CB2D0949E4DC63EBB1AF79EC
1C83576AC5E8EB700E314AED3B553894920B6B62392CA0AD66CFFBC08AC271EF
F3E466F9B52CA201D3FA36AD303F1BD6344022D52AE07E106933AAE40B0DD738
46127D06A2C25C05E31E2B9FEE5665C92816515D91655646066A07CF887AFDE2
F89372581D3056761990616441D44B2AD9D64364AF4D32EAF80C9756CB0A25C4
086A6D01F97681FF73C55090A496255E3E09BF832605BF49D5CBEBF40DBBB133
97AE9EACC5185740A7117ECD89A34F7DB624FC6DCA1AC02B721FFCB47B74101D
B7738D3C3ECDB749994B49D4D90F66B2AF22B9D4D6AF078F8C6775D967F0540A
1AE9CBF7B35406EC6459FFB321C94ACB40238D524D7BDCACD370C75DFB4D657F
3D71A19DB9BDCC63EE88EE1E2EB01DA2E804301F35993AC49E547916944FFECF
364C43E2D8A6249744E315F7ABDAECA748A332553D078FF30EC61A353630E300
6DA978EF60D3038B408C33C567CCC819560794F57595B503632D71C0D8E408AF
9270F765B540F4409C0BA0947D83CA28789B46864A1E02BA94E4F949FE13700E
B237D15D360454D6847846575E59CA9A30721485EE484078530482F8E1084153
822D7B54F7B38A2CA1A1311CFED2B1E503DFD40AF0A3BD242FCA7EA16B5E26F5
6B3B2BC5982C0782380BB7439589CDD4F3A8144B917E285565463082A60BA21B
5450C00807CACBF172155EA3AC7AEF7BDDE5689C9F205F773B909A3CD620E48F
8A4F934F79DC34398684E0CC41D7FD4F25361D253D369F31E33FC7BA79D11223
EAD460FB18233FC14B1122098ADB8CCE49CB6E1257486313C71C022F1D929B24
6C1F81239301E85F599328ECB02FEBA854240C522FF0227DB4EF037275D9E334
CC17BDD4BD3C1444C2A68DE43DF00428CDE4E68B345B2328C30C059E3ECEE9D4
6DA15016F359A66639C91C92B74A9908B6AF2A32DC433F88EE0EC6441C2EC90E
01DF5A3FB2B6FBAF5A8D0AF88661BA85096F14EE61835153E9BBDD6150550459
92FA9A9AEF591026B2774A1FC114E7FFDF23570D542C460235F90F657CB05A75
687B4AB279D8A34E9B52FC9495B3F43D1D265D84C06132D1AAD37B9CE76CAFA4
36E5B1DBF6092EEC33A1F717AEF55707D9611475E8218860695F289262F9920D
DA6155C9630B6E0B231FB0769F91E883AF0E73814127B45BF5891397ECB8F943
A858286441C21475FEAAC17DA1BD97311BB29D1BCE6CC5EF1B784005514615AD
225ED1E8E66E06CE534F6CFFA8E3A40120B5AA03470E8A30AAE60F6446FEE6DB
D1E6BCD6C73C882AA5A78F5FC62541F3BF10360DF4D795F05952D5F8138F52C5
579B521E3E1F0AB1D06F4FA7A31506AF59EE6DDFEB0385179884489F4877F083
A6B43CA76687CEC195ACA1F0A81F9C1AF4EEAB63B92103D3B04EADD3E0D13DB9
4057F1C809BBF343385CF895602DC8F325EF3FEC5A3CE15DCCFB5077FE47C88E
A90FC22F06CF80F054D54CF1974F3BEC4F14FC76B774C300C3406CEC7CCE1BFF
A5ADDF6416903FF2F006374E589A0A855E6C1FA4227AEF285A10AEB244AFA85E
7BB7D12D41C2DB3B1789C63A98C3B961AAEC3F1C0F14C8D09E0BDCA092F97AD7
9FC21BA372AC5F1790C88A23C245BE59B13785D01441ACE72C522BEFC56865C0
9ECA1C72662551363056B85E3F007D03BABDB5158FAAA83578A2EF1D64F80AA2
B68380BCE7273FC6A6196CFC2470763790F99DD158E20FF2F6201A877ED5D07A
4BC1DECC4CC6A022D43F821CFC3F1B2C612103C7CEDFAAE374510182524543A1
6B3EA7D1EC4C7E2D9682A32F90E8DECAC94CBB6FD2DACA86C6C25468601A0D56
9C2815BC3EE279E57429CA4BA90C377E30FB0F3EBAE96A05556397C973C9D2EF
9CE717CE64E60FC60CA108ADBBB92F5411A292641C455D6610A28CDB6597A44E
DC7500D1E44DA14BC70ED3C70DEFCCEE2A12DBA1E101EEBD61FF92ACD1FD5A5D
C67B8896B4935D2A65610E4B761FF095A4AD89B19287CEE6EECA1843CEFEC6A0
79F2A2D37F14C92640E2FAAA3E6247756145436DDF57483878E4612F39486E75
D1BD31A6AEE5389ACE288DCF66EBABEAACEE196A581374BD2DA874CC62C06C23
753D63DDDC0A15F8BE5B27C7A4B2EECABBBC7F8301870C386092C1F1E1708921
FF939761FDFF1A581B0CDA88C9FA664B853B586101083672FD2CEE49C9E1BF0C
E2AF6E9BF5D3537F9F1F96128565CC1660F77554ED87E638480912ED5C1D58B6
75184F3FBF6C8B32667D2147E97434807989408BE3CC019ABE89BD838371C62B
29353F1AB2F5EB46CBAEC44E1C4F4FA426E2755EE919914086910766AF6BD570
74FF5397E6616239C908B27AC054961BE88E4D380D1474F49BE960799D69154D
89EC260FA81EBBE0C7275E1BB5531C79F30A9BC33A101A7DC4DED589A9B2F479
01E46AE3567239169B0C9F8421FD50BC303DDFB1DF2F61BFABCA962046D6A816
CC794990FF0D2C46CE2219A2B2BE9E08A7ED91C483FE92F9FB89B14701525E45
8F1B247AFEA2CF289BF995755C41AAE4003E38D2221B2E2E43010F7F100E60B5
5D1CDDC086288BF08BFCD78871633DAE36881D0D49B527F0EE97C90CA893C6DB
9DE8886B0F539AD8F639642B13ACB6AECC995AEC063E1BBDD3DBAEC6989EE32B
BB986B51C8C26DB2D380BE5CE79485654A79A63E5ACE9618AA72B9D593FF3A2A
642294BF064420C68B8D7CF96FAFD870E79FC04974535D967A4F092315D345EA
58C408F245F0541268E8741E1F1AA780C0600763A66F5F98C1F4FA4D93DA20E1
E9A1162BB8639CC4B60C541EC53717537CFD000F7EE86C0C7907CCBB85DF8E31
92D7DDD4C6EBDC55FAD418A06828B560749793E1E14958B3A46F0E6E8EED0FC1
98A7B4049973E4882E95548CBFC164BF843BB2662FE20AC986DFAECFB1FA854D
A22F4679D274CB325EA05324FB2DA1E42C1797FA12042C9937BB5EF71FAC316A
086A1379232DDA7C41B52F9A0A6E515B3E26C00B2A26392901E06A0A495E5736
BBE08E476F9D6F579C550C829735C017412C15265FF7C9682B19619D3EAA52B1
E06590E65F6ACF60B8E47C49B7E854D9E69F9FDC28FE1E99D529A1F390F61EA0
5FA5A67A20F248D369D7AB1B6285D7210D833AFB81E8BFE172A8AE37126B7190
1B31FCEB2952BB3093FFF18EB3751875EF3D8DA6F87B4B77287B81DBF88E3F19
2D1FAFA81FB4B04B630800D2EC276B046BDE051E0CFC6862FC5431E0C20750A8
07B5D0CD4A581967C318252C57844D80FA82FAEC00EAE5A9547BD7EED6D6A377
165436AF1FD8A67BCB952A8872089C1AB413087B889F9CB616BA20527385A2C6
289325A72724EEF5CB9BE2A1921BCD93C577E48254B0F25EC8FE39A8DCFB2868
ADBA8AA861701DBBFE32D21CE3C3CFDE1D50E8CD1FCA175D61C60FB1DFF0CC48
30A1B88803810F919D275E4FADD966F686EAF2099EB0F7A5DC0585AEED344ECB
80FC9196E6954A9FA657ED87F873700ABDF5B5064C061EC2E5D2AFAF373FE2DF
61B00840CD50F226327A37D5F18C992236405E3CC3A3D9EF57E5F7FAB6F12670
05C51206CDD132432E42E794F9A1CD8FD10748CB79EBC684E6370D87CABE1657
45DB2EF34F4AF902BD2F008E7F2DED57E7E18B04952558862E621645E5434BC1
CEEB02D5937781E7A82AA458E781E6E606985645326E99D3C16CF74AF0B6A72B
AAE76AB307FCE9BCA7583B25599B49529B8E5647597CB185E72F40526F19DEFB
C8090984195FC5356957ADAE9DCE57C36F03E3B0974A570A7B53E69A0ED4F36B
CA75EA09DEABBDFD58116DA3C43364198A40691365A6CA5F63ABF731B5892EE5
0159094ADB1845C2626A46AA2DBF379DD3B8BE9BD87EE1157D872510262E073C
7F733B8A02ABE20381D9331D2A7E01EAD2958EC59291F9AF50A1AFC4CD1A5973
69577F7A42DE0703A9B7A40AFDD9D4A449477473B5F4911B4110736356EC7BAB
9B2B06190531692EADD811A015A8DF710BBDC4F0BB9B2CA6C767CB64620612D2
6FF8730464B80985562EBDC54EAD5798F3641BCAF3D7D5A7FEA202B695D7D5D0
A848E17635D922EA8B85B6D97B98B257A9177D8FA8C70E2FC753D5BC9B97364F
DA1B521739EA2E2A2BAECEB25F12036CB943A358B89181476E6FDFD5450399A7
156799EA07BD333768BCE9DCD84D0C982301AF0617BB0D61703972197414A5F8
B1A2F12594BA92D1BA9B09A4A2F6CAC41CDC0F24C1B7AB24735326B5E4988141
6BB5F0D972E7A8BFEEF41847600FD3B3F2B41A365AF97796C63A537EB06EF35A
AFB4371E41E5019D6128A615D5D06F6B6B5585DE787AC48E923931F6EABF23B1
489DA09E53CE4F3BACF5E38FB4D23C78DC950F5E6FFA19DF575A9CB7600C404F
DDCE3E002ED7D204CD014AC280BF371D1F63E5EE812550E3FF3E1984DAB734D0
FB9DFB2077A55DF535CA709C76E67861A03CEABD85922AE2B2CDFB76C329ACAE
29172C27048EEFBB60825218BF182AF7EE41DA4BA4213A5845F07C3EDDDF5490
769C8A70EE8E72E3C9DEF5887CC90779975A9B7B5BE9AF12AE07EA865F360047
C640A9A9A256E179A260875095CB95B9AB673D49E1676BED5F26E66BF175E824
414D7DD81CD2659AFE611FA3114EC4FA02EB5EB11FEA0B181D78ACBE608E021C
9F957BA81580E043107C7E6246A9C51CA889A30905F803A58F105E8F1653699B
938EC86DC5199E7B88035006F7120C3610E289D144A499AD855CCA33F18BA119
8C3744E2E4508D833A21B4AF73B84A864A764F4B34E9C9662123C567A864EA06
06ECE3721731746031547BDFB0368EA680D3E69C399BA1521F73447C7FA3970D
A9F3DA2644301D04A9E5A6368EA8346B9819ED9946E28FC61DFE558A3C56A1D8
09BA89F66D7115F151C361A1480BF6C4CF25F9C8E51FD4A632467A2E8567DCF2
3CB128A6DCAF493BEB69315E02C1E68DD75489C7AA22BE15EC1C4B4265356D37
6CBE9F7A5090E24A4A4F14ADEC66B84BF3B640B47D60E9E4B95F4A814945871B
B316951CE31E2BCC54296B2029B7FC236CC748ABFD0976512CDF881D287E7261
A9A1CFA26689BCB22FFB60AA2EAA4F9D22B27DBCA6B20D0839A1688F600E7929
C5C2BA69CCA76FF7ED57D6A5FD12A094C8E8166AF50362358F94E4874E67CAE9
F066B25007F2485621FA70C990043EAFCD36995A388C3C2A70470FF3006113C4
8DE68E1F0FDBC269849B58C1EFDF4BC6DFD75E0E1006D392CCD773188F4C68CE
D95931B661701D929A69DD02EB5B9973E685EFF2388A2D4DBC12964FCB626C69
1AFA7A1A7912AB51DC972CA3A4F943D783DB8A46B7B591342523A56F672FB1A4
E2DBCF7D7EBDDA47F8F0E960272E725363D17F4FAFA61D9427BD2FD75F83781E
A25E915CDAA57309B8A87F63389AC59A212586C3D73952D048A05B251AEE60F2
FAD51B248875986233A22184553BD90EA99BF8E18D05D874D2D5A75B3370B088
702369BED098A5DF042D10FE30A211D1E39DFE7BD5746649DEC0388386F8340D
C6BA1B6C82CF0340B7093532328CED6E47913459BF7B54481E875C4FA7939B6D
5FBB298A493C96AFEE049B656DAB9535BE21E53EE7D394B27265C6AD9CCF73E2
F3173423B33DC1D38E6E8C7010A3416622693896A5948CD8545FCF0D78BE21D2
C36A58D74657B85C92BC4D56E7E9387B93A94010D0EB19B6E55347E0367A7218
EEB14DF8F23A079963003EAF55B838A914322393AD241247C94C6798259D9246
C5B489B6607C052DD5C812B969A392D43AC6EA83C6E622DC953836AE257AE056
2976FCFAF38256D8CA8B5EBE405089A1E1C80FED5DEEA17D1E3E32E68631D8BE
985C87D2306B2A05A49FF455C90D31351E5B11A200D2CA37A6200125584914B7
C4D465D990326C34A3D46774B9F935B05C8DB78E2EEA406EF612FFBE6C357810
0044C8DCB03BE4CAF5E21BFB0F875508F36F721B27A1A73319FB6A328ACA8782
E11E31F8E132C317EB4B081D2A1178438FB9E09560C05401EC1D9BB28F468596
7590004394D5B39C24EE847DFA7217C26147B704181FB157F5DC813DB7B32EE9
23133A42B44028F3C4585B0500F78C183F708A9B8C2D85150C9A644B7C9CB131
E5108EAB37EE7D28C06CB4984973490CB2EC4692D4A1A7E3774F6C79375AFE8D
2127AC902D32FEBF981F9B6FCE7672163B30D93E3F3CD7B017DE2082090B555C
F0AFD28E624E7B066182AB2891B0046D1DBDBA5D0140B3D3718367A5BB16365C
0D61258FDE0614D6131B8A1D27E8EA33AD7FEBCEFC3C030AD9FF64BC9ED10F16
3DEC623F4D6AEDC939A752B6C999410E2582DA9DFF656385AB73D67C943151FE
A2279AE786FA2CFB59F2081BAF2DA13D1F0659291C637F02B417E9034B882E30
404284474F683613FF81BC37DFB730DC97F62BBA744C4E8EB69541E0350E82C6
D83F0B4509D43C8EB25CA51C61DB5634566C31237FD4B53200E2E4D9D7F734A4
166B90EF2250ECECD1C35A4BF01269747EF878FCA3CB91F68C3EBD308F827491
E0BEDCF3CB33DFB48FFD67633707943D7845E4B93908E6E510F1068C3367E6BA
85C5F78A40F961DF49A4E06D547EA3E1AC6AE339488C8927F2AA6843B959B76B
6397C37A748A6EE762532BE881E725E15B0D347489D89348C2DD179A4D3580EA
61F74775A097F09D7A78E62EB299DB2E8E8212C5BC680502BF602B733CEF7E50
ECCF28043A2D2DEA4EC30DF2329D0787E5F091837FF4CC22DFB899AA73A6149A
CCF0807BB9A75AC467FF56CAB80AAE850C57A891E0170486662082E2C2E1312F
A0771E48F27972A7074E253BD96BDCC12796CB42FD6A29A7E396BA6B1C654A5D
99AE4B938552B7C03D501023EDF7AB92B7C6FAB68C5731502F218FAB664447FE
998CA8D701DF45201D3A8AF187A793625B48ED70CDFE582A9812CF92777717AD
B0EBBFE2DC62F65B9115EE46267D29F3E3C850843ECDAAAE97148C13E752C382
7E4B28ACC43AA5F5540DA279E09BBB1C0B4A852331E4608386AE47C7820CCB80
11E3ED35291BEE87B114F1C5C1E91AAD41DE1715D2EDA14E549F178F678A64D7
8E6A1A449F20DE3ABC5D3CFD1BA8821A072827DE8CE57389124EF7E81EAEF95C
DEAC17CA12BA80AE16F3C1A9EECE161F1A724AA9A07F66E4EB6AFF996BE11D94
72D515D923EED026EADB0DAAF403F3FC87ABBBFD1565B3CED14B17E33950A2A8
7E40DC9B60AF09157735EA1CE6F83BA5572D9493CC5C4DBC373DC4A7399D0F93
CB99BFEB4A1CD6FE21542CADE1CFF4D50F9A1EDEF15C6FFA20668ADE030E6214
CDFDE723AF6A1A6D9E14B5E139EA9D978FFDCA198630EF007E5F137B3287332B
8F1A86BDFBDCE68D4BCF4AB8AE9B942E96DEE4477018D8DE4E068D4A0F22293B
020736B6538181F0416419F8B162D2261E415CE5AFA3A359FD0D358D02015F07
8F34F3EF25F750F17B03A472D44F2CA459A8BCD4B8A38476CA94C6A510026553
E72862F5A7B88A536209AF8A4AFD96635D48211DC93C537EAAD3E3CC5DB44200
59D2F9A6733BD90E227F759ABADEB714E4E527277CBD70BF60D0559AF1AD8CAC
BFDF6801EBEEB5B94E8E716547DC666407D59E3A177BA6B2D6CFE54A6491A00E
B7340273149148B1C6F7ECBCA84425D35265FF1D618A680AF7215CC3FDD4AC3F
B08343C3176DAE48A97F7481E3AE3FFA89ACF3B66B62D7B0418534BABB3513C6
D1ABBB100D818DF26123D3CCCFE18359E2C716FBCC8944C33607EFB3802C4CEE
B1BB04DA9EC9270755F04BF85A4453B998D71C6F90102C35A09DE9F8398841E6
ECA24878C64392E65C6818432DF5EE0EB9969812C72B9F37FA15BBB4130D4DA9
C6B6B84D6BECE4E2C419377272B5C1C2DBAD9499F8DB41395EC5D575E245EB22
56BFB218360EC8709C37F3F1242DA15B3D707E88D22229FC04F56C6DEC6DD40A
6FA7110D0A94D814F8D98A1AD0F92BEEAE719CE76C8F68DCF1BE7468B60DE0DE
B227B09CDCC083CF8B111C22B403385D5BBA4959F25FC03C00A5D93312C00559
1B0AFCD72883130B6661AAD65C8451B11C1AE95E36B01692E746FBE8539A5538
561C0299F3BB9372290D2BDDE61859D0D3BA3966056853198BEEC9897DDA1C40
8E852AC380749EB91C11F53E951B70221931959B622A33DB58BA87E6F192BFD0
07067AD40DAB18E6E3ABFEAA48C43C41AA7340F6E51B5608911C0B6014449A3F
68306AB5A207722EE5C7BE1752488F584950E9F478822A0AE2766997D7A48F5C
30E63D9DDF2CD0867B47914B4AF004442D688D3082DE81AA35B280F3DDE1D322
D9F276709AB9DB791A73EF1D501C81C2E3EC060EAF07E85F8DDA43BE74B29E02
8478294865755E42299733BF15CCEB67442317941213BEB1F48649F127115C4B
D5347160CC7E3DFC4A0C2A5CD4EF8655A3B2589F1FAE7B159AD03AA7E63E484E
F1C84FFE0914220C80ADF824E55BBAABEDBC3FCE0435CC4601CEB3D650EA76D6
FF2BF02DD07A6E09CB9B5262E9DCA57AF3B96DFC2C893A8EA59C6799B5058F88
B566B292A98F8F16D6896589959B1D1E6DCE37741EB9DC6D2C08333A9E4951E4
4AB4B754EE39220A93D47C72B785584731051C8FC4E739BCDFF402026A1D3F23
47FD336469D605C5293F0384BB53AEBEDDD2EBF51A0760687112DE2A1D373801
0C6C2203F3DF77033AE125F242BB0BB3DC42FDDBF2B7EA1D53EEDCA964DF2A7A
C9419A9FBFFBE3CD8D0BA91282E8EA6BCC727AD10D36511E236B6D0F6C6A1964
3086FFD2DE2844A82ABCBF0A0B2CD69B5C7E3619E5986FCEE13B8F4BCF365A3B
2B7B7848D5265970D83CA444325EA385928DBB6F0D85286A30BE431149D861BB
7E1AB947834332D058CADC778829614DF95EBF4A41B8C4B26504CEE2AFAE635B
8ACE8A3804E12B775E7ACAADBC04EA376B287DB0734203712DE87C45B91FEDB5
A407D96068F801FEF8E9B293D1C61532BAB640F329F4CB8C888B934953AD4481
30374307DB2B95DB286DF169AFA04056BA9964CE0F72ACB3CE5150D43946EA02
C2A84741EB41E0FF7A502D5D7704937312B6FB9E88C229AA4DA392CFA9B27ECE
4457E35E4D569CF8AD454FDC6F2AF49A8548C902D1A9BB99CF9EEB27747DA8CC
EC081A43C138A78B0957A2E97445134AB466161E955B5FCDF7B208656A486B92
14CD52D7C26B4DEDB29F847E397F349F8A844B3066C5536590EA6B055CF14F89
29C02EA98247BD7D68E332A97B5FCC2B00FFA1356CE7A2629DCA3FF482D65F3B
1376B3F2E704BB179750D400418CCF8271797368507EF99674A5885496669AA4
814960A1BF8209FA2C4B5B853385483100333476BF2FAD73DFC4EFD02AB7184A
706E9F093D198F13200C9D76AA58C015D9835449C59962E1715CBAFEDF38D898
A8853765388A7A824273057D8299EBCF2385EEF9B2BBB7E2F5BD3F09C884DA11
4BC3D939B0B0DB4F0C497845BDA083D193E7B5529DFBA22B7F97DCC1A349DC71
AC3AA53ABE465388167EB9DED8546034459362F24E3D9EB6DE97BA893E835894
2154AF26FCE2B97DCAC186AA1B2B40E13BADECC955500B3B2BD3FF82BCEE5326
EE419869B63BAE8924E43228EBC1C851E70F93B7C5628600716844FC7BDFB18B
C52E774DE6877C07E7DF72BBE0753E6BC2622FDF2A7CC069E1F7827493978F5B
90FC2C5C6C5C076C08B07FF5B2A2D2802E6F1975775B62947AFDAEBE27313BDD
99D87554B83E3EF9AC95950B53293F94A7AB81BB1C5F185D64560ECFB265D43C
1BA3D88D38E073F03E2948E9BFDF1E34DE0FFDAE9B8E33F68DA192A76F1B5D5B
D25E0DDF74A1F008B686CB13AF7EDB50E2795186BC8CEE74FAA9FD4C59DF154B
AE1E2FF4649105839263248654E749D15E5F9CDD504ADC41851C3A6AB2496A69
A1EA9170BC0842FAF4C2578794465156D65F9F33A39FBA6BB3D49B349419CF43
8949DD71B8FD00821B7359F8C4F20FDABDE2FBACDD6B8E20775704564DA925C1
2F220FE6065FFAA6AB378CB9828F4EAF56052F10397A0CF362319EE7D43EC408
0291081532540BAAD7DD83B245F37D40BB8E86F4781588620F7B87CEB25CBCDB
71736F46590F5392A37E32D57F81F0CE25FE56C8C290BD2C8343E4F7F240EF49
7BA3F20249215A9B2F3040F3497821D8BC1FD19FD7DFE6DA12D097FBA14B2402
E93F66688D8A92103B24875E5241BE04F5E09B2DD1CA35E013BCBE3AA0B21683
FBC491A6E346FBA13202F840DDE7051E929561B0619D2550D0979D635F721173
A8B4F5A960BF1543A0D71A45C3D9077635628EA5C75494BB40701F0DE2CFDB90
113FF7183F21DD2BDB79421D0F6E523ED74206034C8393DB3204AA71A46B9D33
AA3D5284255ECAC9573C302FC7F66129B15A334F41BD3F9C125560C085C280C5
1F29C2DA698B02324E1F59E4A7649144E02A48C292E6533D3D2A58A5C40D7529
5C72DEA56B10FC835926AFEAE835A18C7A28BA4F97436865E7781B04C69A8B7A
893E22E2824178A57EDF51B0F367673B3410FFC0426C7052170BE069AB953A96
965904C0FCAEF8630F29A3CFD3C42ADA77E9A7EFD018A0EBBE13BDC81851BAD8
072B1BC72B9D0DFD236637C673DADDD41794D9BD1CC64236277EBC7FA7259CA2
4F0B305262AEF415ED77C4BEFDEBDE20928B33437CB006777BA563F4BE2B30F4
13D783231D59BB73555460B506152FF8E72AB9C9C8F511F0614B074A3C025222
BB4B7C972810FB2CC01CEAD798DC93CDACE5DDE75C0CC683386078F0CF216782
99E5BD08A3B8BA11A03A882A634D7DA4B6134603FFD63A74B84D460DFFC70986
D5DB14161E0A426367F13F593F2BFE685761FBAC75F8ECB0A82E7CD78B9B4DBE
89048A3ABA9C21D72C00A7830C0FC12EA1583033208E8FBA2FD741CDE8569B7E
E7A3BF2730B33B52E385ADD48906F11468F6AA83E211169D29A4884372B7308C
5B51870266B63ACD31AD8AEEBBAD0C58B061C31A3113E50219E961E05E262A58
0ECC1DB85C7BEEE1E11430CB1D360B828A7F2AA9EC753AFB60690E50D90477A8
419475C11CAF33FB14E92047DAAA90270B8653EED355088B406B6478C17A555A
1D4D09AF09C41DD2D3ADE1CEC93030905A6D30D5693AC17BDDC3F46BAEE36712
65FDB194CFF63E439F0B08943D522975DDBB9F319DAE2A38CC7FC9945036B01E
7E0AE01755BB0341D499DD57230D7F07E00857AC4A629E16F5D7098E2EB250CE
81DABBE46C402A3E4DED9075D0E82F2A69459EA3737C98F6BC65378983AB32BC
74FDA0DC97A9F4F371E80DDB240CCE12B1E8A371C8EC7127919F1E0F7415AD75
2EB1A6FB641EC4F91806D8BD5EC971A39DEC682038AA25A8A4D13300C8049991
4B21BA6D6BDEBB08C20A741D51FAE7EE50D842DE611AC13A1C56DEFAD34AD27F
49409E75D0D375275E48DA1690BAE4F13A142EBC616A71D2641F2AFEF8444110
52DD72850928D94A2B3113F3182F9F9CF9EBAF3C831EADF871F6CB6F0E59A1F0
34415365F123DB6280A0B69F288C16D741AEFB3347BA0A7C4F00ED16165C77C9
2B98BBADCBF9195F962C7B4032A625B088F199B1084BB715245D0C3256DD1241
36510E4138B0E66DFB49973681EF021CA45BF58E02119BC1F9268E3AE9945768
156DD1B04796B89BE83A63A4FA8310A4479E09A7AB9C11F20E151C135806AC24
291B83C626DF618114130163DD07693BC072A6B36763B59549C818B5AACC9D4B
1B37EB8F9AF03FE2250B0E214E7B6BFF938460C362DD6B1114F24A3DF16D723B
0B6EFA03C9616892681FB3A28B64652BEAFE15738B68A5536E37B795173B5E98
39608A1B9263EB0294797DAC2B8B74F1FDE9D95F67EA76B195DB550C6423A37F
83D66A3B72B38EDD78CE386EB03FE1524CA7142AAB0BD3747CD374428AC1BACF
6B1BFA735DF8AD5765CA015153EA2C6F66417AEF6715066FADE46010AA96D338
3D154BBA9B467C37E1C254C3E2A881D2364A5F0BB9E1ADE11B68FDEEC79CA8D0
F96C8A3DC9ED9886A7D27A25DFBBA79F7447F8F350CD3CFE5FAA889DD8430723

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: SFBX1728
%!FontType1-1.0: SFBX1728 0.3
%%CreationDate: Wed Sep 12 2001
% Copyright (c) 2001 Vladimir Volovich <vvv@vsu.ru>.
% See the file COPYING (GNU General Public License) for license conditions.
% Converted from METAFONT EC/TC and LH fonts:
% ecbx1728, tcbx1728, labx1728, lbbx1728, lcbx1728, rxbx1728.
11 dict begin
/FontInfo 6 dict dup begin
/version (0.3) def
/FullName (Computer Modern Bold Extended) def
/FamilyName (Computer Modern) def
/ItalicAngle 0 def
/isFixedPitch false def
/Weight (Bold) def
end readonly def
/FontName /SFBX1728 def
/Encoding StandardEncoding def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox{-213 -316 1617 918}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052BD0CE60552BD63101D7CDBEEF5B11
69C468645FE4ED1AF2541AA0770C1DCF81623DE0ECDF49F2B522618F650CE6CB
CC8C21885DD61AF8A523AA677EAEDDFA51A1F9B1885EEE0456196D634E04EF89
F17499DAD982502ACC349B9EEAAE4A71A73D1147318C60A8BAC10510DE90D8D3
F46E47295D27129A5AFE0C65E22BAD10D06885A2EE623FF8E1D90287A083E00C
EF25195F68A2A98170E4875AA0E2F461BA16EADB32842B6D00C76EFC613FE56C
378A7118B11F76344E713CD26DF030756573726C0D62366E1E342C8312BA05E1
B0A074FCD2F70DF2F3D7C98495CD207B000C61643DFD1BC8834F0BFF8484922E
5C9E7117B50B56B283D9B837194FE4A134EF5BB803C17804BDF1A1D105BA681E
842148BA9977C9DD073D4BAA4730B0841A1F49FD91315FE66DFEE18E021128B3
B5191A215A8851799794539DE22671D92BD7876EE885B34F5A81B541C4165575
90458A8C4B43A6C0F80F4074350F3E459CBF7B410D5E4D8C5AE8D28D61854CFF
FC46BB845B8CC7A3AB794BCD69E2EEAA4A8E5FABFD2C05FF6C847801476FA15B
2E58525C34637D9D0336BD35F96E99F10358C7A36A89113FB06342DBACE1A098
F5BAEF0318FC90C9ACF0B52D47C77FC9FEAEFB5DD47F302635953A1E8F56045C
AF090FE879C1D45C713AD3FA559C43C5E5C13C1B0D6B241A7857B6F8DFECA41A
27A79DB116BB13E0348F76B2A073FA3CDCA420E12AEA57B7D3A82928C1E8B6F2
2E32DA0CB2EEA2A88F43738CCD32D764ADF56E6B16B07AF64C39924894404D34
617AED4D17985D7C26D6F573F386D1F0E5E8DDE90C6AA6E3A2617468C2BC9585
57EF74CAC582DFCAB70A0EB7B3759A299A658A8F29124B759B2DD2DC3B8B90B4
8E82E946CB85818063C52AC2D428E67C007EBF01C00D2557BF449AE8F9B27A66
0A4018B6736AA4B5CA98FE52406C35A577D1761C26A48EDBBF3CA3C6956F370B
279F33262631F6D3AD49FEA5D9959CC0D05BC3BEF4FC60D37A84A600E953BF18
BA66A9D200AF577494DB3EF83FE433B48E64D1E6CC4662AE69D391FA8209D8B3
E5A4D5A85475EBD8F6CC5AFEBD245C93892E0037F310E0D03A3A1B713E78C761
C1BFDF12E84E750C163DCCC732D6F1EC89E5229DEC8EB54A63529C546D95E006
6529F2381A3981955A38D4727EC262FE3A9F2CB79E19B54C00F149261C3AED3F
2EFF8D5513665633A36D23D439624FEC302AB2A9B42CAF3BC02A3CEA29211E58
1EDF0FB10738AFD43FF249A68BCE7CC3F785BEF436C7B0C5711382856031CDA4
94966A1EB11D5CDF6CAA8CE73197F2E345C1A7344ABEC0D139E314D9DDCF50F0
EF0C2148458327A48F379A02F84EE298123F362B36F704E817D242DD5BF8D8AC
0D5A27F5229C1E361D6C447B54A81B08B5FBE6351C775A2DDEB30EBC1F2359AA
02C33FAE1FD33EE749DAFFF6EFCB3A63B41BCBB1A8C9A7838F8E969633C21586
839E7E23ED42257A27FBE65849CC4C685CBB70D2E2CE7BBCBB7B122B0F83C29B
A816788F384091223B73E0BD48F00A107CC83508982D97D74DCDF6385CB51FAA
9735E707BBC255BC629762200435BBEF52D0AE34E4F64A28A14FC8D4323CB976
17B6DFCD0A5FE74E6494B81B757EDEE8AC1827B2CE9FE8FCC56DFCB8C4D530AB
E8C8C33D8120EE924576EE2147CECA13AECEB6625800A7AAE8E14224792D078E
9602F1AF100AB715FA4ED18F51335E9070DDA6AF45A0C932B5E3516B2AFE0DB6
A4576B6E6BA2387436930B6D0AF1F8A2F5CBE41551BFAD362AEAE16E0643A87E
6BE3400B41F28F26C0F5590AE414D27701D0E726598B0F9E10ABA2319DF76873
A6F616F06DCD6FD5D40D1DD84DA1CE262C7253F898C0915BB7CA2F2357386BFD
24B880132C032BCA7725D0FE50D102CE5B0E1FF8897A261017117B8DCD665F4C
A477FBE8891D68A761DC32855606E5038BC8FD9604200678179BE171E874047B
1DB87FFCFBA03FB3E4393609A66A23CFC11D284912F6D7A5FF1416E5AB466B36
79D0A6ACA5A13D4D3058594919205F68F70D1081284AF072BE9D1F7C89272E92
295C7A940A9F2FD46685F0FFF9160B705CBEAB890F194BF2331D47803F9E6774
BAF1240F85747282757991B5C361C205B1CF363D965F07FF04C07303216C935A
67EA70BF2A427A048A8B1021A1547CE8DE964251431B59583148FB3B86C31681
A1A74D2BB8468C530A52F4C6B69D8B0DC6DBDDFA45C92FFDC3135B0471B9A02F
00D1697E844D9A5F91CBCB3FE86346E3C9686CA3604C6AE3B802CDE8E8ED8420
7F03AF52728719F0CEA50C044DC353944646C614AD01C66552950504B0A69AAE
D7F693B590FA4F9FB25CEA8B76FFB0213D6A7E7BF78257CE77F40DCD8E67325E
4E89149E4BB2F33508AE3F09C457E98174C7CA36ECD6A1C355176D004B41944C
CC5C74894F8FA10295E103B6736DC721C798772EFD0F5B244B34AF54CE1D6FE2
4AE46FCA7003A22251C1F89AF535E6A6C0865F0519E0607A6ABD3CD79EF2465D
3DAE1BD9EE4C3FE66EFD14B85AA4059A0CF9D5BFF0C5A0A86234B3A93860F093
52255F29DFE999E95C1F022D10C326B7B54D1376C25B6E250D2FCA550C9AC359
1DBC485BE6F550F939200F3A2DF32511E0C0585AD48A97F117EDDA21FE8B6043
6A82C09FEFD6FDFA76A0E236BE67EC5EDDB399DCA2F57D33E98AF7C0A4D945FF
1E2FC2340BE37B673D3FF2FC10A3D9F0DB24F1F9D8A1DA540D8EA130EE0855F9
7D58434C22E06A761A6859943F366071DC9A447AD731198DACEB6EFC346AF6AB
2E0E9E392B7E9F7C4C3BBB939808958F7557CC7CEFD34C4EF05206A1F9320561
4BEEE01DC6DB2E1605953DDCB53293157F6EA58CF8150494A7CCF4EF14C2C0AC
EE037B8ECDAC62DC7394362630D121C51BB9C186D59148324E70D09A1866FEEA
2D5BF2E30D6791EC4E84E322A38BF3BF8363D8E952B2E5EA0584FB23971A00E9
468DB00CCB8DB3A68ED1C5AB3BD78147524D5F228B0A955302C985EB8EB27522
EF1EC24BE0186EB4EE822699103D98021731C541FF71FF5FB1829624384AE314
BED285D78A786B1A04B649E58EC31B946C41CF80911826F482D7BFC1C0733B0D
929E9A74125599564D1FDB2084857EA1B48F85E129BEC5AA33A74F08964CCE33
BB76902C3E3196A1B017DD67B489D07D7BF3BA998726FCFA82A47B4E79099C9C
126893E3092C82E0B5A87FFBF46A3FDA5E9D9C43E6D20691B072D844EE68C052
C2AB4706E4FD2663E6DE20CBB8323972D071B660741B4094ED90D38FC4CFD6AF
5AAA31F6BCE3071812C0CF0B6144C00C3575D071AE983A067379B86394059C2C
5138162F70288447D1A233D1F41DF8AB287F2B88FBAC463A004E276FB1022F5B
D12D4D6366FD49F464EADFBF3A4F8710F676A0A508D8A484BFF7A13160217573
2D52AAB614956891804FA10249E595C8382A0E28CEB92CE0B1A92B9E779953F8
1EFD2AC9FE16FE502A429B37D6709766A4A39619C076B0CB5271DE847A8DCDD9
AA169A55757084EC1B33C8D55BE14637F6B081CFCC2382D7CC5E36F029814149
0546598B1382AA53EFAE26EA9692022D55C1741CCF688BF21BF963A15B1C0B77
A25B6D4315AF193EB08FFB2407FB95EF046AE4DD0E382FD468D8E48FFE92F26F
EAE810824CA9779420A3F95B6305892A6E3E47AFD0E21ED1C80F69170257C056
6EA3C792985CE65F1B69A3522EEF942819204B34B13A342D0455A8BBED700E81
31D312A1ED909EE0774B75867918D78275C27AEA6C72329EA0B850CA3B28BA73
32F4540E579EAEC0B0E30969AFC46C53F0B559DF9D1404A2ED02D364C418534D
C850CF09377B26CC9C90A80E7CD73B3743C5644A34BFA6F5B74351B94E500634
9233EDE98FA51EEF5326873E69B2046845E54C22B6429F716F0319338BFDD256
1CDA54E91F9576E7900B43027AFAEB3CB3B1ACB097D4936D69A0B280435BCA98
AEA90247173EF28A442BD8B84473B12A617BCCDE708FC1DA5F5108063281861A
41777523B47B3058BF2E7A1054F7CFB59AC6D9989346D9FB2B7B442D8C057782
853F8915860BE8D809D760A7AB40F922F120A85FB82077F8A238D3B533F5D9B9
600F500D0D50B69159A9F1B94D11F94905EDE64420043C21B869BBDE0B47D8F2
3A620060C06C31B485A1945E07CC4426594CBBBC246B3C73143711E33B4017A5
7297AF5A3E1C9CB596CE6A4EDE1B93153983953F359219DBE8E86C973539D90C
C1F2CD3BBDFA87FDE559A0C8211F039ACDC637FB5B629CAD8E550B831D9AA0AA
E36231CA92D437129BB809BAD13F1F15C2C062E827D8A4B62D82E068EDD08398
A231D3A44BC29751CB1B2D86051FE3C880D26A0B642859F3C692932FD6EA76A2
4DE53F5093F01B5A44313480D1DDD176CF1D28AD29196B9CA4D48F1BD5BB3282
B5A9AA0F3BA42B9C8A973FC6BB777A18648D3CD6FB5D7AB1755CEFBCB423E67B
18643BBA80F133C8556B061B4C24A3F74A2746EA05511998DEB5E794057AF9AC
654B29BE5C5FEC4448324D8703BC41B7539B62C9F30249365711C6819D719807
96227F74A1687942AF04AE32E82045A6C6F7A394B908DA28EB29FBFD61A4E9F9
68D1F514A69D62B30B8EEB30CD3A82DA5BACD79AC7D43D95ADD71BD5CC01A2CA
DED2AC0425575B8AD8AD460B0F69E18F78E60E54717F52C70B1CECF007A9D989
1306AA9B23B2F84391785BDA33C8ADD6F2EB450C30349BD1449253111FAA6BFB
B6439136D6B21B19FA01B48C7E6DEAEDFB506560D8DC44A6148AA1D82680155E
E45BFC831B8BE5063E171B1EE40A46E235F2F7E3C0BBD1A49AD6470D730DBAD6
65A323B1C0E8F6106A6DCD89B881AA5DD8D1A6BC36710B70F0361CE951AFFDF4
C04A1EFFADCAEE48C1BBAD05D25A7FB16C84D37A6A9E042920E4FB4699C8A7E5
286A37159372E71C27E0E363837FBEF2C3F719A8EC53A557D38C3F486B34024E
1981DA97A4265D16643A970C05BAC6FC62158A5779A6802E2F69AD218B39F734
2607F6D4FB4CD2BE21FC107601B8DF668E4CE7A420F38A9C82BD03C7F4A4DC60
FB182399B2E0F13C4D3F2E703A7063DD7694F9E96DF2D1AE034C078C70A94366
AFDBB7A8231B97A3E146C23041CA1EBEA4D1AE7F28784038E7D1AC1A0CB1E379
5EA9326D5103C15E8BBB23AB548C2BEA8AF5EA9D9BF92A475EA07450F9C7257D
03BB99C4797601B3B3D420CCEEB0FA4D0BBB5C3F21B6E541C0AB502666821D6C
AB6C9EAF53D4FE6D40731746F4A1668C93BCA47AD112EBBCD7AE0C3674F88EE5
8DAC511D9B8C339284FB807D6639DD898857864D6CE3DD144AE60471A6341C6A
F1D108A573F2D52BE1797F31CF6C2D709DDC52E527C49A284A1A6B6A6CFB72CA
41ECC81727528710C95A6EE0B575E02B02E5960AF9069ED5C3D046546128DA85
8D558BC52779A8EF9AFDC21E71B7393EE5AD169D7D3FE7D7EB59D752095E0236
CA81A204105A13CB53808E0E41368A2CEBD0135F611B05A0138FB4F7E2FABBDC
090D0402BF4B9AC4EB8E1B9C0308C6C5AAFA0A82F8B05C2305E7322583134461
E01BA5B981AED053F4FA2C9D09BAD4E0AB50BD2917793A90FDE9DF67FFC99027
842211FED3B545FE312970E0F27BF495FA39F97BE887A01273C71907C59CFEE3
C5642BD5266DCCCA8D1E224A5E5F7FB2C6F34650E6DC8A1F21256C5B1A1D5D23
945A2563ED5A20D6F13E6DF6F48B29D161A061F6AB3B2619BB39F8E136797BFD
E24078C8D01D6B27660588FD131B82CD491A14660AFD1DB39C4B05ABF69816E6
54ABE4CFCD3ED8A1A2F1FF88F19D496D07FD3C487D200BF30403E05482FB9F6D
9525AF815B7105705F38761E0260DF0BA9C29C80C6A1797019CD90C60DDEF909
ED0DB2D7F14914548C9A2915286ACA17210C1FC5002FA5CE7DF550B6569D0522
6B7C49C6438A48267435901C7E8272CB3076764B4E2A297CD2A7917DDFE923EF
6B66DF6BDF1A6AC943B633F6E5AF6EA9E6A92758E31EC678259BD9B919BAE4DE
0116512C5F3643ABCBFE6A18BB2AA38617882994FA4E8117A856D6229A3438C0
9E0B928D1963963886123D401B61057A2993AA3BB06BAD2AACBBA649C2350712
9FA6DC7FAF8C238DC08490828A95123B87DAC7272B77E369C706848C8AF58B73
09BD4AB80818F6C1C13B4B85A41C27BDEEA7A48CACB4AC69B3DA0263BD640056
A6398BE03DDD1BDACB1A0AA32C38EEF6C6D3C3C00DE376AAB9B3BC37C906947C
5F9CD8625A3228959F428EB9105451E942D28806B3432C169BDFD6C700D8837F
2580C6012C8B68FE9EC0BC715F29817EF99B0D77C775B26AF9C3A198FF5739C7
B44B479B36011E248411E326DAC5A3245B0B34069313F9FED0D24B010813EF55
1EF157288AAC438905581FCD322693F94BD5B41CEBD244FAF529699C152D7E11
E78CF5E7141AB904D6DE0A4112CB06F622E8D4903D25A5025A2AA12E25B6814B
742DFC488518BA7A6B50518DF172C2DC0ECCE2408EC84961FF9E1D138A169EA7
09506573996FFF0B0B9B19431FDB2645A5923265A89F851C48C8D70B264C4F8F
FEA0CD9B800347C89FDC79DD3CBD6099CF4C958EFD2861DAE169C5A526D1F473
2CB2356C4A3202CF5BB04BE200DB52A2D5D67B095EE66027673F40E02C1EBB92
BD50B564A47878CB4832DD2AA8B85FD32BE265DEF0DC4086867A2799F1C34996
51BDCC492A24A9BC12C952BDD61FF280179DEB2028B9CE6DAEB974689851A953
7DFDBD648E9D483630D24F446E1ABF47D5BAD9E7DABC29F5146AE73C996F448D
D51F37E3AF8DF54BAD95A08EEB74CACB293FE23E3E0C71C67FDAA0252945263B
0457985BE7872BE50CEF2C847FEC4004F906E8DB9E442C9176AD3F388B2FFC56
3024205C9F1795CCA446A626C909CA37AC9AF549C06ADBF1CF3422C432A5782C
E932F701E4A7E246AAB89CEC1DFD7208D8FF8351BFFDFABDFCE0CE1E2BDDB76E
ED55775FC965F9C9AE0CB0B4D064D47C6619BA475606886D3AD63FF0704DE9FD
C847D1A7FC826CAAA9635A1EF2CBAA1EDE7CDAA21D241DD3A13034B8CFFBFCD3
36DB5027ACA69B3E3D43EF22050DB2B65170DF178A67A0BEA8293F44EFDFEA95
19C8FF17D667BB9A681A62EAFCA393AB828BB62DD4BC9491A7BA5AE34F43A855
888CC241BE47EDA465B1AADAAB19CC4FEBEAA925D4B8CC4C8A553D79290A66AE
5D870FEFF06FEB7BF2615866CC5A23E7DDE410D27E0BBDE19EE5FD1121B122FD
E22D2D46304377E1A4C90749E7D33F88C39096D27D3D6EF60B232C6872ED0EB9
A57805037D9212401395F0BBD05A4E26DF502BBB968B61EEE38BD655EEDAC7EA
440A5A6247F6C48155A2479826A104D9601F647D3B89066A22AB02D62FB88D5F
50736578CB47D50503F90EC6418BB3F590EB8F915AFEF97670833F82D3079F58
F7C14D9538CB0F04E833D5916659D8D592CED8447E651DFCED5CFF852770A7D4
0F78370CCB234E1A25E42512E4336F135B129F8A0B9FEBE110796DA873898332
B8C6823130BDA375007F0B938357D4DC0527C60EDE2BB53290AB46B939B110E4
35A6C93AE4C5178533B46EC0DC0DA0AFC48D883F29EF21F613AA546BB0B92756
B07DDF69CE9F7CF5ACE48AE21DC831C4C5FE755C4C8844B5193E4C99697E8FB8
95DDD8C16DBB6F3B1C49287EBF18C72A0FE7EFFCF06FE0F6AAA7213F0EE69E51
63C8DA30F989B8F2461D8584B67206F029C337273D7D502D719F153531FD237F
AC80995174F58650EDD6F1C51C18B1330494CF64B5429C93291AC0E094ED4A5F
4204CD43E67668DB02447082F988394FC9EFC84868AD49E3E103D4CBFDD3D4CB
0A677CE4C139C3529B6A2C1D28C57D7F51B081BE1D837AD5E333EFA90A3DD116
A3261816CA4EE59C8CA5DA126B8A392F9CC836847C04A4A1815367DAA1C3F8D5
518ED3BAAFC9A5E5DE1B501FED72D225FB207454B6E3B4F2910B9D5037ABC68F
DC7940E0EA98409C3E7865A3E2BE808C8E508E600308E84D8E019ECB955B2F7D
BF533F4F66EF2594829737B529FDD96D6C22A99E04D65270E0C5445CEF95CCC4
B6B6F46FDA4F46E1A46A2E0E005C6E33B12EC9AF54218EBF27FE59FC80A22010
8282768F39E9641FBFA1DD5ADC97AC3DCC1FAA14E557CFD01E477DE1C89DE493
ED0DCEF137C83C168230EED7CFE498A76D82C9A1BAEBCF7F9B68DC215681E301
8ABBC31201F7B7ECDBEA2D226A96B7155AF67EE7BE0E1B393FDB13FC3B396FA1
035AE0ADA08924CA7598B052AB49A5078CA640978C7EF757EE3E1345C0B29C55
D3FFFB895AB2BE43926FEC1266786659050CBD7B338D8927F2AACB7E04FED3E0
DAD6139873D39EF592578BDB60BFCF0F6B4392F98FF6E9A503FB22D7690A4C60
942ACF0E31404B0897CDF0542FE383FAD1143830B37E570166B0CE681A263AE4
02D5A81D91A822B9EC6D2B7D58B5C0EE1B6DE181D826EA00D78EEA635D04CB10
9022B6C6EA2E25C8C2DD77DD9D5E944A4B5023060F377820DA5B7181D476D9B2
95A44B3F371A6F7C9D6984695CDD51099756B23C6F1B1674F986C6A5F29030DC
E5A6DFC81C1504D4D09E1B5E7E6EE25209EF7FBCEC9D6079042E52D5BFACAC60
43BD88A24F09BDB19B1D690E0261FB713FDFE4F198CF3E4A5FD31C817A7836AD
7EF644156876340C4A0922B75E7EF41A4BFCD9CE2261883E19EAD47F38A85B06
C5676AF19A45BCC2905987C2650C76CD606A0AB5838BA246B5175E563BED1BEB
95A8CDDE9F3AE66CDA3FCFFE541BFA01E70786FFE504C70BFFAF39D5E8DA57C9
C850205DBA7C6D0EC352F86AEF7C9FE4E357C303D5481A2E7AEBC1EA4D9C3E7F
59BB1384DC2E6371D9049DD16C817C0BD591F2C27230D296623AE30E3EE0443F
B925C4500C7A0C383EB1C0F90A94C7B0249990A8E7538A784024EF25B39142C9
3F257088698990D6C8174248CFB08414A10D24B105850CC1A175AB640B3F3050
F1420A004610F818307356DF0F8AC4CDD4DC92AE7B5611F02B515DAB47B68168
691D1804686C70EB4148F87FA9F23CEBC406F62626675D15908FABAFEC6F84D3
1A7B501C88F8B273C852538E6D3FD1BF86816301058B2BEFB7C31EB88C28C754
1E751782754AAEB4318FDD9A16483BEB00217E53220463CA46431262FDAEEE23
6F281460A76686E06C32B258AB1D8A85906A93EEBAC763AF40D574E169FA977D
85F62801A8E30DB60A204C8350D380896CBBAD28A99ACC3075A2FD834565AE45
F8FFCD36EED1C09E800948D0C155FF78D7982EAB0BA65C597DD3DD1CC2AE6C1B
02B769AF3E7F42656C12DD51F7D87BBF124DCD505020A6A86E554A2C818487C7
945B95C47AA9277A669A201DA41B63489158282486B1E158A0214124A76F939B
67A0255A3696EA7F933FBB8306E5B5A648948C62649C9BED4822772A24F02D54
717D33E8072E14A68D66FF21828005E45C4A8D74809E2FE040F07021D7F91420
9AE12DC222F5EFBE6E43CB9CE348EA8B89AC8F808978D36AF64FBE7E00791066
7A3F47EF603B8CB171399D7BE340C7F804400B355B7B16270383617A69143988
23A388303668237ACD05AD2E59536C5C37427FC2343D5A463164A8BFA3E85B31
945FC3835331091F75D92BDA2897568AE3E4FFEC4ADC96CE3BCFBCF633BC9D6A
33D38AFB5B44EC192B5DF9750764D49AECF0C1B9B9D8755ED03742CDA829B6A4
26B837E53AE0B35E28093E1F80BA17AD7EA8C80342CE80C1EA3C1E46B8A723A2
09E4871FD2A186B7A875F9939AF35F80531CD78DA8A17D79CDB0A26FA7826C8E
65DA6EA2C3B2432CCB2032EAF44C1CE2CF33653C769B773E687147530F269AC5
F0531BEF9E153A956D5B252A337AF57450300BA1FB692FA79C18385AB1D9BC9C
5444AC279DB8FF256B880F0157C7A82E60F8B23C56D80BFBA9D2D722ED67EFDB
1660A6DF6AF34CAC88C7ACEF9A2429A1499A5C7ED90C7FE0E6BBD9E9873B028D
E788724EE04828112A426FCDEE9983EC240FE6AC17006539BB646FBFF510B167
E22DE5054DA764311370023BDF6733B37F9046C9FD2653A98E5F426168676528
315266C0F5724566F3E762FFDD46E29935F1ED8CB7E5CE83ADDABB3BB5D9F4DF
7057BADB6D8034A78055B6746E856EDDAB5C3BAA8979632303497214FDD8FB04
77C6A1EFF3C89379168E937BC89F9969BF2FC0F850649FE00857F72E5C852E8A
76A43AD83B4EB8365B1A4507D9F708B799C5966E04C312FF1DC94992D35FA7EF
605075EE144588030B1EE37BE829D688B22246BEF211780BE563A048F2DE8A17
FE18AC45D3E7C548C1F9D5E10F35AA7CE302EA6C22210F618B40A0FA36CC28AD
A868EC0355E52AEC878BA066639FE3C62A5135642062BD8331C5537832F4D1EE
C52A72ABE5B8CE2A20F23C883923008C105FB38F6DBDDD84705B2F027B51DC74
6E6E4416504E1CFC9CC9E9849D674A182172D4F4681BA9634184A1DCA02591C6
BB37B633A03AF9B9088A4F371AB06A04B309E8E1D7B4C1704CE862440E66028F
E51300B11D5BC2562888AEC1B6E5565B25401108241414A429CE44093FBAFFDF
9D690162B7373CCD94BAF313FCBA2FEDCE2467F98B23BA5E8D59D1E2BDEB7663
DE09062DC1A5CC0B61F07E6F84F225078B3AE4A7D1860345F16D9781CE06CBCD
8F468A565C6D5DF5818344B0E3C0541583C5E05147330A129AFA9DF18D1CCC76
53F5D8ADB675128BC282144D38D01F5F607F29471FAD15F4BB351CE2B183F59F
C877E0F83EB6062DF7B78CE8CE4E884DB5B8A57B4933258DBEBB982926CF2AC2
CF664ACD4A281A775C8767829CA6F6B139F96F7BCF6091112B74B1DC13AE97E8
980C374B3732CAAABE0957516A242DA2E5FD5665BC93BC44F42AE56E9FC168EA
5065EDE33EEA4A57151E5D15484BC76429816A834A41DF382D517B2DA362674D
7690DF6C092648DB221703170BCCE2B9AE46EBA95DDB6C2D39602C603E1E126F
458663E94AA30411DB14F5613DDA0C472B6BD100DD7C66CE6F1B457BA89C4DBF
FB2D30378B50865E862763F01BF68182687E565D561685306CEA0C721CEFBF2B
9817CC4BAEA40C3672FD2C013324EC3800A443852336625269C99CD4EC635FFA
E067B8FC16C5785D4D785FF632A110F6AD7DD65986035D29E5AF02348C047F08
32E0E10A43011BDC4F52F356B4399BADC5BCF4C85CCF00ACF0172A1501FE9F1A
8755B76E99FED552ECC75DFF6226EAFF417E42B5D9F39C0C4E337B747194B869
AAE4020D2784FAA9A2DDD41589927FA68A4CB2CD32AE61FE9546C44A94938BD7
13133D203642762D07BD8A312908B0B5DA36B5DFB2495AF6CAB1311AAA29565A
087B650DE011F5D0EB243F926513AAAB84A648E7B9399E4C35376EB323B1CB6B
4BFCCC14BB93939B5B9E26AC8899CD0DDC9C0C40D1FAD97EE9845339037E94AC
894776D8DF5D2ED7ED7B72A899398776E6126E0228011489F7004568E3A0FD94
96C05FE652A0C617842F3217030BAB2E5EA8412EBEF8BC7DC3A2540B73F09533
31F59BF1C26BFEDF892FACA4D1ABB9D7F23B4654B265ADBDA4C869554CE7D5B2
AAAB4D558B0F46B95F1E0386B16F18F123C92882539C29065F2332F5B58D9434
714E6BC323B160A29C62B4DF7CC8D4D22C6AEF1ECEDD99CF4DAD685B51B3330D
7C06EEB941600716E17F6837AFC283B68045723EDF58B357DC349736AF861732
AC146DC646E7F5A922749CD74813EEA109F6B7F0CE4770C4F1B687A20A0BCDDF
EE77F9905B3BABCAFCAC2FCC33FE8711276ED7F5A3AF54BCCC1ED05DDAB14D19
C0782EC2A14F575FDED8A21BD43EC2C275EB12DE998D154DD37FC635AF8F3CCB
DCFE6768C69D152A095BA29CD3651906217FFC0959EFA134F7971F7503C2ECE3
6AF6F84F4B72C43672D2BE1EF5B375FC98C21C8B2AF4EE771E4AC529026DBC56
EEAA9623B8674BD6B47482C53D58F76AD53A43E30046E871C1F247F56F6B3CB1
0EB6F7E806E51B294420FD39B232929B577C97D32873563D5F852DB821325988
33C003943BF3F246E5094EF3CA6470EECE0CA646BC9A508CF9AFA3BC38F2F526
D49B5CECECFFA98DC52C5A8A9194EABF9CF84D4070C0DB74DB6319970BF23A87
4C7193A2A3A75F986B999760A7B34940162C6B40CB11780D7615849FA8B3641B
94551D55725B5F206DB3276A13CBC0EB3B0613A2B98397DDE23BFB018A6E1ED0
C4AF919D9CC0CDD8A6630630CAB5C9AD96FDC23AF099667DC9970684C6AF78B8
FF538B6B39D82757FBD524DC503026E9147249F0A88134EB23EA75ECB0DE30DD
247FD39D2C3E32C3346482C0AE9BAF7230210C06AF5BA64D8635BC8BA8ED6BBC
D7E66D36F5A1DC172A31B53AD992781A873E5982936B54E27CCEFBF6B3122E2C
6888CD41F906E940C81C1007CB3D9BBD1F16D657CFBEE4D2F72B3662095474DF
22648F56EA1504A5FBC6B7C2418170CF2B8057D55EA0852E3574BD6CCAE8C270
7BCB4A3CD42FDFAF9D3A8E9661FB1F7B1128990701A7A98C563332E44815DBD1
78CB6EF5493B4E713CD74A8908F2FD6CBFE416E7BACC2FAF398974ECF53CE280
1FFF10D184F38C786F5189E87D2EB55FE301E0FCDAEF598F0FC4FD7901290A52
66D5122D00D0E80AF5CBBC32D3841C8D92AC30A2789B51B945E8F868FAF53FA0
8E6E4CE489E77FC9675775DD67F8D29B5D9FC8853DCAFEDCE725943116D297C7
62DECF25D868557011A4CFDFB484B6D194782C2AEC08CC5A44DFF83E7AF220D2
955685EBF14829EEF46E439D769900193133A4588F6E03DA82BF51C15DAF4CE7
2F439B3B683439DE579963220E7FF0ADAE13A589470177FBCCEA97DA4A1AB06A
04B309EF4A644E335BF08533B95D4287D3020FB2D82D38572CE34885BBB24333
7FBB5D720CDCC4459A9CFF91A898827FAFE03E14C9CDDD658EFECD298979C100
10D1C3524F6F89EABBA582784932A401A078508B3AF8FCAAE5C82ABFFAED608F
A62FDC9AC0B279D8189364006E99F76AEF8A6F3FCD0E9278AD0676028569C8C8
E6BA568DCB81B36BFB0B0C55FBEACF10FD9E3126D02E168507938756932FEEA5
2204E1B4A7F6150C47C28A0906163698C559B8F85CF19BA44F74281CF76D3240
1EA1FC6D423BB0B319BF1D3D2FB8641838FB5062A8A3828F73A1A4494C1B514E
A6DD2B60095111B9F99FCD5BC8D570392BC61E729242C8DB9FCEAF8920555EEF
C6781BC312D51F58B2B8FEB1DF7D06346EC0D1CC2BD7A22FFA4FC35F359BD191
D7ADE548FACC40CB766C53C470ACB5373760EE57E29C8404E26526EA49DA7AA8
44666ADC003C56BAD4A0747F955B8B12955CA3015DCD86D071EC1623BC94D113
02755F197D83C3C70DD8CF0D2F955908B30132F888DB95C64522D7C2444737D3
C35716F744DCBBDD28035F7E7EC80FAF800DF632FD28FDE5C179F991C3A7702B
E68487BC39774F972BB2058BBBA9E088927ED2F381800E097279723CDE6BC113
1E47812B71E9CB4D53DD7141CA37D0FBECC64F9FC5A25584F929434AB51051A5
2A440D365F87C2A14EC1CB7EEEC0E5F820B0183551410AAC7462A043C6E71BB9
9A7806E891E41314CADFAA981A653C123F6ED95934FFAEBF0C9C50605643454D
7956423B51A4F7061D19DD47BA2C143253E16641944229DA31B2739EA7F1EE6E
563DF6C1A78BA46AC9D87EF65989825BC69DCC82CD4C7102E3E2B8C013C33AAB
F44C38AD9BABF29158DE5F86B06F9687EC033B4B589E5130B37C6542E51E05C2
2FBA35EEEB8D108D5D4158C46A6298AD0FE331A3AA7B54636DD7F1BD48B6C886
DE7D53C0806166AF3FD1CB7720F252A6CD0C3D5164A942D07762CC0CF6833F53
BC72C569697BFDEFD4F3AC8407A6755CA22B0A148207BF14507E481477F57116
AFDAAA32F7099DB21B49CD381D4D4E2C24F019829F0771BBA0F28F59CCBEBF17
ED2DC96FCA7012E997D1D47142D84ACDB121E12E0329845F3BC7EAB962C66EE1
189FCD3EB9174AC38455DE718F73EE178DE5B78FB63468B70929E0D69831B33E
399DF5A876C99B3F56AD732E961F26471F8F5CF98018E7844C1F36D48AF9D67E
8C66271CB507AF0DBB552FEF2C1F4C6D47143439E759378FE67D5C02D88A204F
EF59FE82F3517E76D93D8885AF993BC6B32A4EE2CA8D9051C475274AD8A00D81
48B2C445B9795FB5A32585D12A414063D3C5E228847EE458E23CBFCD2C79D864
201EA612AE9E84AF3E2CD65304AD51649F98E57CECEBCE8FFBDFA0CACCEF5C05
83F768ACEC07E81E3816908FCE96FD5DC69D53D7D9715150002FB51F4E5752DF
67CD8EC956AADB0AE22D0C120DED1F1C028556CC2ECBA97448A10B6EA9C0C76D
22C1A6367739C0F4BEF00764E1FC96182FC9D68189862BE2071760D264A8C610
BA6FD22976662AE3B83DD9E70854EEDE9F9C40957FA817ECF432296277FB702A
062A629BB1FCBAC975890334DFB95287B4006A7500F19A732EFC6013516EA2D7
7EDDBD2593D232453465C3AD782A17F5558804C5E59D0A0ABAE9AEDB55C98F02
EB370B1E3C5FA43256D3E10AEB9093B5BEEA39537B324AD11C430D0D07281714
BD8CEFDF0A912BD8B512F6687F317C1820330CC16A0D31B6E84388BE8BDADB2E
2113E6B3FC22F5A347E37CB0C6EE0FDFC24AED60471F12D21303DA6D4C72003D
5D78E462585040D4FB43657E75B8C9E5A7A672E3F203AA0EAF0CE1342F4E2D07
64C207D93C9B26D657C1F172E4E3C0D62E58972B152F6904B4CA351B66EA6C0D
A65BF0EC1D62771CD5A8F0A1E84EB03D1A55005C3BCEFB827188CDEF3435F23A
93A10455862FA33DD23C24704C4B51718BC61F60372981D2AD467336DE93E682
3ED2E7D6D3E6B33240030A059A51B236FA73672753AB4F86D0D984D48D583410
5B57199C598D7A4C362E35D49D605CB52612E2985E411F67B69E691BD50A73F3
323C4D5E87A796D26B46657F6EA9383D1DB57A8DEF7D867283C3EC330F83B5E6
B2BC9117DE25AE448E83A6E5DD3FAD3E31716D831334D91D76B0AEF468157F88
3DD88D4EDC63DDE705A96724A416D7231C86629E226371EAC8E19B04C1FCF650
B2A33B074B1F5AA22175E51A5B088E9333DD0CB1A92C912CA4BD928A29257F19
3E71FDB9F3035D8E78AA7F086DBF6833EBE8E567192E2D85C16FF6321155B264
0E6EF8E7036B8D2F010CE5631381F16FFDA3DB5414E6F8DB5042EECF1731E4E0
DBED2E480CCBFFDC3F22AEAACB2357D51DFD90AD2C9965642CA9101DAB6C118A
C5F6CDBECEBBF8146921F8FC748AF8169A91406730E835D9FBC8C8FA183A196B
BAEFD1BDCC797EBAC60AD75A2FFEC275F25E2AF8831C754AE27A9B112AC43EE9
3E8D3967592ACE4DECEFAEF04882A516630DDF077226601AD4A7376BEA0B0651
DF66FADDE01E853A5405B935E256EC0EAA00529BD599A8F9E1B6ED25C7C153E6
168AF853171FB0C32B4D4628F2758DB633C23158A3228C58894A96713AAE442C
91F788EEFC48002719FC917A4DA51AD7AEA538FEEA2A0453FE47CEB63E9F9701
E131AC4B53C7446C24B5551C0DE6C14E61A37CDFB9D20DF0E21982EB9F4E24B6
2997BF08364A3CA2AC92AAF1D94596CC87BDC42596B762AFDF296694AE48C006
AEDB9B3DCA7508FF1277E653983539CC5DC0D6CC676172B7F9F5456D5F5E461D
FA76CB2A973884E2B65755B46BAC901D4CCA07E88633660FBDEC90DAECA5B8F5
81953940F99A68F30ECE804B30647E988957ED67B38988BD7C3B155E5E6DF5ED
F0A81F69B33371BD275C291F17C040AA99C88493574019A9859B50595219EE85
FE07051DAE1788A7A9333DCDA9CB1A7710557C2B46B9A7147706AB6B9E11A3E4
937329001E11A7424A74FF35ABFD7879A745B7AC0D8AD70C6F5EF00EF77E4AA3
17FF8964E77604EE688F5763990171A006E34F6C3BB220D02636F1A63193AD94
A9D8838DA1674C8A26F18A3C1ABF8512FFE4A1705F977BAFFD02E83A90077271
9D444A9DEDA9747DB8C58C9FDDDC4DCCA92AFE63FFE2E29B5DA8ABAF95200786
2A9B4E7A806E81FCAF3DF0FBED0E250CFD073A2EA13DDC238D08E00EFCABDC81
91AE7B909113602AB9141F5E949372A81C47B4F679A6C108D0061E93FEEFD529
F9F98ADFF0F4F07D7C77B8845573CEE53B9CB7537C9360DFF9ACC35E49750A61
195BF0DD8585783D9D2B58746741DCB4DD02CE95CFC053D3B4756CCA0CD82C72
EE779C09B319C46AD29C0444CFD9F6DD67C3DD15C28461B00AE89C34E312C2B2
78FF5AB2849733EB97BF3BFA9B3CA22E7A80192A70F8CE9267A5911B9E6A4B42
A12A4F6101055969373193EE3F796C27BB010B9CBDE722C85E574DA042D7A70E
90AE1B155BFD730C30E9214AA68E20E15D650D0CCB25E8B7E8A8F0508D81CA69
1839445D2387D8404E140E8A03E47AFAA1F4D18236AD0F56E3FA19183E370476
55A2FFBE4EAD1AF389A03A7237DE918DB3B789BA119C3FB1DF7DE7BAA3F6E54B
64FFAFF21F4B1E5EF7B4D7A00559CC62F35338843553684A0B10D449D1D7BFDC
81AEE17EBF01CD53BA9D7C2D6CD31DD03C78AEAB3C3B8763C3D690B56C5ABB48
6C566AE0F7C68C390393CE4F5781C6F03B2EB74070E20FABFEF04953A6E64A7C
3AF546976F360699E1FF8C3B9A4105DC015442DCFAEF6CD0707252CFE443AD0E
29806C5710515514FF0C0C0CB9A41FDC64B25E80C2829C3F91EE3D127F5D136F
D0B7AEEC5091E7041869C106D870A46B80D90A01A4518F772D474F456650DBC4
36A8FDEA46EC2C2606A63F956129F40AAD63D033FEFFF2762C16725684FFD71F
45C93AE4B0C7B9E64CD5622749F76756D1A87D1A1A2B752399695D2BBF87E272
18598217ABFDBAE721216791A98103E0A620FEC8C43E41845E44B96442051B26
F01DC5445EF105B34E236F8E355A619C518276AA46DD48842FDD73FE61AA975A
EF560C51BD203B7B6FFB1E8B2986E409B9B1126FB91B9F3CE3E1712C83AFCDF6
D8732EBB4A9D7E9FDCCA14064412AA16BA18ED890DBFF3AF2B96D2C8EF2F83A1
9631B1F5CCF0EC6F73B55125123D35ABA1CF1C1AAA119A857F7A04A00A781467
8FC1AB2B83E91CF1B9C908289B7F1455B4C307F2F1FDBD8B102524F4B008F6D8
2FF040CF401F1D4A3EC516E25B371AFE190AD1462187F691FE1BCF948A261DB2
63B55DD193EC8FD56EEED5C76E0C557AA46D12D91AA940330FBA99EF46775C40
129899DA660391FFD69D5A723D5A71BB08ABDA84DCC023266D215A166458343F
226FDBCB11302FE33903FA74EC10BB3F71FF8A41815F60DAE1E45E3F19B7D609
AF515B6EA4B6EE71D6E730F8AC5B3CE5F46B59B6A813A9CE99CBF96A2AE1A27D
17B11AC2A225DD2A70ADF86D45106343E262325437E5E24C35B46CC7D238A3B6
5B8E3FB3A528958820F7012557EDD1351D64B1F3925603E33D06B654BC91683B
DB70D7848993896733B870898C748B75CB7BF175BDEAE4E53960B54140A5A0FD
53C67E9CF8D0408829690D6489027D9110F1CBA96E6E33766A122D3590CCB393
EE43445BE6CD3B71EF862B22D015651A5BC4607B65A3721551727C8D875AE154
F65F11BC74BE68B6FCCAF750A8D34776284DDE1AA363870EDAA7A020B8A76F2F
1CABD1325690F655ADDC3AD83F45084E6DB6E7DDC9B7F947599874C92F5CEE5A
49A5B37955BF7811A44A620C32D7BAE39BDD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158274 55380987 1000 600 600 (resolucao_A_B.dvi)
@start /Fa 12[35 5[20 116[37 2[39 27 28 27 37 39 35 39
59 20 2[20 2[22 31 1[31 39 35 55[27 41[{ T1Encoding ReEncodeFont }20
66.4176 /SFRM0800 rf /Fb 137[96 96 96 91 1[91 77[53 53
12[48 48 7[30 10[42 42{}12 90.9091 /CMEX10 rf /Fc 28[42
111[33 33 2[42 9[37 2[46 42 10[62 19[59 62 23[32 32 40[{
 T1Encoding ReEncodeFont }12 83.022 /SFRM1000 rf /Fd
148[45 62[91 2[91 7[91 7[71 18[71 3[71 1[71{}8 90.9091
/CMSY10 rf /Fe 204[30 51[{}1 49.8132 /CMR6 rf /Ff 207[19
45[55 1[55{}3 66.4176 /CMSY8 rf /Fg 155[39 44[35 35 35
35 35 35 35 35 4[55 43[{}10 66.4176 /CMR8 rf /Fh 155[51
6[25 1[25 29[71 3[45 45 45 45 45 45 45 45 45 45 4[71
1[35 35 2[76 26[66 8[76 1[{}20 90.9091 /CMR10 rf /Fi
139[25 2[32 7[24 41 2[33 36 31 30 13[41 43 5[68 4[58
2[52 7[35 2[20 58[{}15 66.4176 /CMMI8 rf /Fj 134[45 52
1[44 1[33 1[41 41 2[55 80 27 2[31 6[39 11[53 1[53 1[69
3[73 88 3[40 2[58 67 1[65 69 68 48 5[25 23[42 8[52 2[55
22[{}27 90.9091 /CMMI10 rf /Fk 30[46 106[41 48 1[37 38
1[46 46 51 74 23 2[28 3[41 46 41 1[46 43[46 1[46 46 5[28
44[{ T1Encoding ReEncodeFont }19 90.9091 /SFTI1095 rf
/Fl 12[52 5[29 5[46 3[50 1[50 102[46 3[55 58 40 41 43
1[58 52 58 87 29 2[29 58 2[47 58 46 58 50 14[78 1[71
3[62 2[39 81 2[68 1[75 74 13[52 52 52 52 7[40 41[{
 T1Encoding ReEncodeFont }36 90.9091 /SFBX1095 rf /Fm
5[50 4[45 1[45 5[25 2[40 40 1[40 3[45 45 45 45 101[40
1[48 1[48 50 35 36 35 48 50 45 50 75 25 48 28 25 50 45
28 40 50 40 50 45 3[25 1[25 4[68 68 65 50 1[70 61 70
68 83 56 70 1[33 68 1[59 61 69 65 64 68 6[25 45 45 45
45 45 45 45 45 45 45 45 25 30 25 2[35 35 1[70 3[45 25
3[50 50 53 27[{ T1Encoding ReEncodeFont }79 90.9091 /SFRM1095
rf /Fn 139[60 61 62 2[77 86 129 43 2[43 1[77 1[70 86
69 1[77 19[147 7[102 30[120 38[{ T1Encoding ReEncodeFont }16
143.462 /SFBX1728 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black -128 -364
a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -128 -364 a -128 -364 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -364 a -128 -364 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -128
-364 a 0 TeXcolorgray -128 -364 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 -364 a 0 TeXcolorgray
0 TeXcolorgray 872 -47 a @beginspecial 0 @llx -1 @lly
242 @urx 37 @ury 2420 @rwi @setspecial
%%BeginDocument: figs/logo_UA.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.11.2 (http://cairographics.org)
%%CreationDate: Wed Nov 27 20:55:44 2013
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 0 -1 242 37
%%EndComments
%%BeginProlog
/cairo_eps_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 242 37
%%EndPageSetup
q 0 -1 242 38 rectclip q
0 36.7 242 -37 re W n
0.317647 0.705882 0 rg
130.371 27.919 m 131.18 27.919 131.914 28.243 132.449 28.771 c 136.066 
33.267 l 136.313 33.583 136.695 33.786 137.133 33.786 c 137.203 33.786 137.273
 33.779 137.34 33.771 c 139.711 33.419 141.375 31.415 141.375 28.993 c 141.375
 4.837 l 141.375 2.165 139.207 0.001 136.539 0.001 c 112.363 0.001 l 109.691
 0.001 107.523 2.165 107.523 4.837 c 107.523 28.993 l 107.523 31.415 109.188
 33.419 111.559 33.771 c 111.625 33.782 111.695 33.786 111.766 33.786 c 
112.203 33.786 112.586 33.583 112.832 33.267 c 116.449 28.771 l 116.984 
28.243 117.742 27.919 118.551 27.919 c 120.184 27.919 121.48 29.239 121.48
 30.872 c 121.48 36.173 l 121.48 36.466 121.707 36.7 122 36.7 c 125.031 
36.45 127.383 33.97 127.383 30.872 c 127.383 29.239 128.734 27.919 130.367
 27.919 c h
129.277 4.81 m 128.016 4.81 126.922 4.099 126.305 2.97 c 126.047 2.517 
125.559 2.212 125 2.212 c 124.438 2.212 l 123.879 2.212 123.391 2.517 123.066
 3.052 c 122.516 4.099 121.422 4.81 120.16 4.81 c 113.145 4.81 l 112.723
 4.81 112.371 5.15 112.371 5.575 c 112.371 15.001 l 112.371 15.427 112.68
 15.79 113.102 15.79 c 120.152 15.79 l 121.418 15.79 122.512 15.079 123.125
 13.95 c 123.387 13.497 123.875 13.193 124.434 13.193 c 124.996 13.193 l
 125.555 13.193 126.043 13.497 126.363 14.036 c 126.914 15.079 128.012 15.79
 129.273 15.79 c 135.781 15.79 l 136.203 15.79 136.531 15.45 136.531 15.025
 c 136.523 5.575 l 136.523 5.154 136.168 4.81 135.746 4.81 c 129.273 4.81
 l h
f*
0.615686 0.611765 0.615686 rg
146.766 9.111 m 146.766 10.618 l 147.621 10.618 l 147.621 9.111 l 148.684
 9.111 l 148.684 8.493 l 147.621 8.493 l 147.621 5.2 l 147.617 4.978 147.648
 4.821 147.719 4.732 c 147.781 4.638 147.922 4.595 148.141 4.595 c 148.23
 4.595 l 148.332 4.603 l 148.512 4.634 l 148.684 4.685 l 148.684 4.068 l
 148.563 4.036 l 148.453 3.989 l 148.098 3.907 l 147.777 3.88 l 147.426 
3.88 147.176 3.954 147.023 4.107 c 146.875 4.282 146.797 4.458 146.785 4.634
 c 146.766 4.861 l 146.766 8.493 l 145.883 8.493 l 145.883 9.111 l h
150.402 11.017 m 150.402 8.404 l 150.84 9.005 151.406 9.306 152.105 9.31
 c 152.914 9.306 153.43 8.939 153.648 8.208 c 153.707 7.779 l 153.707 4.068
 l 152.855 4.068 l 152.824 7.798 l 152.762 8.392 152.43 8.689 151.824 8.693
 c 151.535 8.661 l 151.191 8.63 150.898 8.415 150.652 8.017 c 150.484 7.751
 150.402 7.349 150.402 6.818 c 150.402 4.068 l 149.551 4.068 l 149.551 11.017
 l h
159.488 5.525 m 159.41 5.228 l 159.383 5.114 159.344 5.013 159.293 4.923
 c 159.16 4.661 158.941 4.423 158.645 4.216 c 158.293 3.958 157.859 3.849
 157.336 3.88 c 156.848 3.907 l 156.789 3.919 156.68 3.943 156.523 3.978
 c 156.359 4.021 156.227 4.06 156.125 4.107 c 155.508 4.368 155.113 4.857
 154.934 5.575 c 154.867 5.829 154.832 6.161 154.836 6.568 c 154.832 7.407
 155.023 8.064 155.402 8.532 c 155.809 9.048 156.422 9.306 157.246 9.31 
c 158.125 9.306 158.719 9.032 159.031 8.493 c 159.195 8.196 159.324 7.884
 159.41 7.556 c 159.496 7.22 159.539 6.833 159.539 6.392 c 155.738 6.392
 l 155.77 6.032 l 155.855 5.634 l 155.91 5.38 156.063 5.122 156.313 4.853
 c 156.535 4.607 156.867 4.482 157.305 4.486 c 157.645 4.482 157.941 4.571
 158.199 4.755 c 158.449 4.935 158.609 5.193 158.676 5.525 c h
158.637 7.005 m 158.605 7.321 l 158.602 7.361 158.594 7.427 158.586 7.521
 c 158.57 7.556 158.555 7.611 158.535 7.681 c 158.469 7.915 158.34 8.142
 158.148 8.364 c 157.957 8.579 157.664 8.689 157.266 8.693 c 156.848 8.689
 156.508 8.571 156.246 8.333 c 155.984 8.095 155.82 7.767 155.758 7.353 
c 155.754 7.286 155.746 7.228 155.738 7.173 c 155.738 7.005 l h
162.809 9.31 m 163.598 9.306 164.211 9.048 164.648 8.532 c 165.043 8.048
 165.242 7.404 165.246 6.599 c 165.242 5.79 165.039 5.142 164.637 4.661 
c 164.203 4.138 163.594 3.88 162.809 3.88 c 162.008 3.88 161.398 4.138 160.977
 4.661 c 160.578 5.142 160.379 5.79 160.383 6.599 c 160.379 7.419 160.574
 8.068 160.969 8.544 c 161.391 9.052 162.004 9.306 162.809 9.31 c h
161.293 6.361 m 161.324 6.122 l 161.461 5.029 161.957 4.482 162.813 4.486
 c 163.328 4.482 163.695 4.65 163.914 4.989 c 164.145 5.349 164.277 5.728
 164.313 6.122 c 164.332 6.361 l 164.332 7.044 l 164.316 7.419 164.184 7.794
 163.934 8.177 c 163.703 8.517 163.332 8.689 162.816 8.693 c 161.945 8.689
 161.445 8.13 161.316 7.017 c 161.313 6.931 161.305 6.861 161.293 6.798 
c h
169.098 8.693 m 168.508 8.689 168.047 8.54 167.711 8.247 c 167.457 8.017
 167.297 7.716 167.234 7.341 c 167.211 7.22 167.199 7.083 167.191 6.927 
c 167.191 4.068 l 166.34 4.068 l 166.34 9.111 l 167.191 9.111 l 167.191 
8.138 l 167.324 8.486 167.539 8.763 167.836 8.97 c 168.133 9.173 168.469
 9.282 168.852 9.298 c 169.098 9.31 l h
170.758 9.111 m 170.758 4.068 l 169.906 4.068 l 169.906 9.111 l h
169.906 11.017 m 170.758 11.017 l 170.758 10.103 l 169.906 10.103 l h
171.965 7.622 m 171.965 7.72 l 171.973 7.818 l 171.969 8.154 172.141 8.493
 172.488 8.841 c 172.797 9.15 173.324 9.306 174.066 9.31 c 175.078 9.306
 175.703 8.966 175.945 8.286 c 175.98 8.177 176.004 8.052 176.012 7.919 
c 176.031 7.611 l 175.984 5.279 l 175.977 5.044 176.004 4.888 176.066 4.806
 c 176.129 4.724 176.273 4.681 176.5 4.685 c 176.5 4.068 l 176.461 4.068
 l 176.418 4.056 l 176.281 4.048 l 176.113 4.036 l 175.824 4.021 175.613
 4.064 175.488 4.173 c 175.355 4.282 175.27 4.478 175.23 4.763 c 175.125
 4.575 175.012 4.431 174.883 4.325 c 174.848 4.298 174.781 4.255 174.691
 4.196 c 174.41 4.025 174.152 3.931 173.91 3.907 c 173.531 3.88 l 173.09
 3.849 172.727 3.927 172.441 4.118 c 172.191 4.279 172.023 4.462 171.934
 4.673 c 171.871 4.802 171.832 4.939 171.816 5.079 c 171.793 5.388 l 171.766
 5.755 171.906 6.099 172.211 6.411 c 172.492 6.708 173.16 6.9 174.215 6.986
 c 174.445 7.005 l 174.648 7.001 174.836 7.044 175 7.134 c 175.117 7.189
 175.176 7.372 175.18 7.681 c 175.176 8.154 174.984 8.466 174.605 8.614 
c 174.488 8.654 174.387 8.673 174.297 8.681 c 174.059 8.693 l 173.801 8.681
 l 173.75 8.677 173.688 8.677 173.609 8.673 c 173.594 8.673 173.539 8.65
 173.441 8.603 c 173.004 8.462 172.785 8.134 172.789 7.622 c h
175.18 6.65 m 175.141 6.618 l 175.109 6.599 l 174.891 6.509 l 174.594 6.458
 l 174.535 6.458 l 174.133 6.458 173.688 6.376 173.203 6.212 c 172.852 6.091
 172.68 5.825 172.68 5.419 c 172.699 5.228 l 172.699 5.142 172.727 5.06 
172.777 4.982 c 172.926 4.65 173.211 4.482 173.633 4.486 c 174.309 4.482
 174.77 4.798 175.012 5.427 c 175.016 5.45 175.035 5.513 175.07 5.614 c 
175.082 5.673 175.098 5.759 175.121 5.872 c 175.16 6.22 l h
181.727 9.111 m 181.719 8.423 l 182.168 9.009 182.719 9.306 183.379 9.31
 c 184.125 9.306 184.695 9.032 185.09 8.486 c 185.434 7.993 185.609 7.361
 185.609 6.587 c 185.609 5.821 185.438 5.196 185.102 4.712 c 184.703 4.157
 184.137 3.88 183.398 3.88 c 183.34 3.88 l 182.621 3.88 182.098 4.181 181.766
 4.79 c 181.766 2.232 l 180.914 2.232 l 180.914 9.111 l h
182.18 4.986 m 182.488 4.65 182.84 4.482 183.234 4.486 c 183.754 4.482 
184.141 4.716 184.398 5.181 c 184.594 5.548 184.695 6.017 184.695 6.587 
c 184.695 7.302 184.555 7.829 184.277 8.177 c 183.996 8.517 183.633 8.689
 183.188 8.693 c 183.027 8.689 182.863 8.661 182.699 8.603 c 182.035 8.364
 181.707 7.685 181.707 6.568 c 181.707 5.845 181.863 5.318 182.18 4.986 
c h
188.879 9.31 m 189.668 9.306 190.281 9.048 190.719 8.532 c 191.113 8.048
 191.313 7.404 191.316 6.599 c 191.313 5.79 191.109 5.142 190.707 4.661 
c 190.273 4.138 189.664 3.88 188.879 3.88 c 188.078 3.88 187.469 4.138 187.047
 4.661 c 186.648 5.142 186.449 5.79 186.453 6.599 c 186.449 7.419 186.645
 8.068 187.039 8.544 c 187.461 9.052 188.074 9.306 188.879 9.31 c h
187.363 6.361 m 187.395 6.122 l 187.531 5.029 188.027 4.482 188.883 4.486
 c 189.398 4.482 189.766 4.65 189.984 4.989 c 190.215 5.349 190.348 5.728
 190.383 6.122 c 190.402 6.361 l 190.402 7.044 l 190.387 7.419 190.254 7.794
 190.004 8.177 c 189.773 8.517 189.402 8.689 188.887 8.693 c 188.016 8.689
 187.516 8.13 187.387 7.017 c 187.383 6.931 187.375 6.861 187.363 6.798 
c h
193.242 9.111 m 193.242 4.068 l 192.391 4.068 l 192.391 9.111 l h
192.391 11.017 m 193.242 11.017 l 193.242 10.103 l 192.391 10.103 l h
198.996 5.525 m 198.918 5.228 l 198.891 5.114 198.852 5.013 198.801 4.923
 c 198.668 4.661 198.449 4.423 198.152 4.216 c 197.801 3.958 197.367 3.849
 196.844 3.88 c 196.355 3.907 l 196.297 3.919 196.188 3.943 196.031 3.978
 c 195.867 4.021 195.734 4.06 195.633 4.107 c 195.016 4.368 194.621 4.857
 194.441 5.575 c 194.375 5.829 194.34 6.161 194.344 6.568 c 194.34 7.407
 194.531 8.064 194.91 8.532 c 195.316 9.048 195.93 9.306 196.754 9.31 c 
197.633 9.306 198.227 9.032 198.539 8.493 c 198.703 8.196 198.832 7.884 
198.918 7.556 c 199.004 7.22 199.047 6.833 199.047 6.392 c 195.246 6.392
 l 195.277 6.032 l 195.363 5.634 l 195.418 5.38 195.57 5.122 195.82 4.853
 c 196.043 4.607 196.375 4.482 196.813 4.486 c 197.152 4.482 197.449 4.571
 197.707 4.755 c 197.957 4.935 198.117 5.193 198.184 5.525 c h
198.145 7.005 m 198.113 7.321 l 198.109 7.361 198.102 7.427 198.094 7.521
 c 198.078 7.556 198.063 7.611 198.043 7.681 c 197.977 7.915 197.848 8.142
 197.656 8.364 c 197.465 8.579 197.172 8.689 196.773 8.693 c 196.355 8.689
 196.016 8.571 195.754 8.333 c 195.492 8.095 195.328 7.767 195.266 7.353
 c 195.262 7.286 195.254 7.228 195.246 7.173 c 195.246 7.005 l h
200.668 5.568 m 200.664 4.997 200.988 4.646 201.641 4.513 c 201.699 4.513
 201.762 4.505 201.832 4.493 c 202.008 4.486 l 202.09 4.486 l 202.395 4.482
 202.648 4.564 202.852 4.732 c 203.047 4.896 203.148 5.134 203.152 5.439
 c 203.148 5.614 203.09 5.771 202.973 5.915 c 202.824 6.075 202.539 6.2 
202.117 6.282 c 202.008 6.302 l 201.891 6.329 l 201.582 6.392 l 201.254 
6.458 l 200.977 6.517 200.695 6.654 200.41 6.876 c 200.148 7.071 200.02 
7.4 200.023 7.861 c 200.02 8.243 200.145 8.564 200.402 8.821 c 200.637 9.048
 200.957 9.196 201.355 9.259 c 201.633 9.298 l 201.898 9.31 l 202.531 9.333
 202.996 9.216 203.297 8.962 c 203.594 8.7 203.777 8.427 203.844 8.138 c
 203.887 7.958 l 203.906 7.79 l 203.09 7.79 l 203.07 7.919 l 203.043 8.056
 l 202.902 8.478 202.531 8.689 201.93 8.693 c 201.645 8.689 201.41 8.63 
201.234 8.513 c 201.02 8.372 200.914 8.169 200.918 7.9 c 200.914 7.607 201.027
 7.392 201.254 7.263 c 201.383 7.181 201.633 7.103 202 7.025 c 202.137 6.997
 l 202.289 6.966 l 202.328 6.954 l 202.93 6.802 203.32 6.665 203.508 6.548
 c 203.855 6.325 204.031 5.978 204.035 5.497 c 204.035 5.439 l 204.031 4.915
 203.813 4.513 203.379 4.236 c 203.012 3.997 202.555 3.88 202 3.88 c 201.258
 3.88 200.719 4.036 200.383 4.357 c 200.082 4.63 199.895 4.993 199.824 5.439
 c 199.816 5.497 l 199.816 5.568 l h
205.902 9.111 m 205.902 4.068 l 205.051 4.068 l 205.051 9.111 l h
205.051 11.017 m 205.902 11.017 l 205.902 10.103 l 205.051 10.103 l h
207.781 5.568 m 207.777 4.997 208.102 4.646 208.754 4.513 c 208.813 4.513
 208.875 4.505 208.945 4.493 c 209.121 4.486 l 209.203 4.486 l 209.508 4.482
 209.762 4.564 209.965 4.732 c 210.16 4.896 210.262 5.134 210.266 5.439 
c 210.262 5.614 210.203 5.771 210.086 5.915 c 209.938 6.075 209.652 6.2 
209.23 6.282 c 209.121 6.302 l 209.004 6.329 l 208.695 6.392 l 208.367 6.458
 l 208.09 6.517 207.809 6.654 207.523 6.876 c 207.262 7.071 207.133 7.4 
207.137 7.861 c 207.133 8.243 207.258 8.564 207.516 8.821 c 207.75 9.048
 208.07 9.196 208.469 9.259 c 208.746 9.298 l 209.012 9.31 l 209.645 9.333
 210.109 9.216 210.41 8.962 c 210.707 8.7 210.891 8.427 210.957 8.138 c 
211 7.958 l 211.02 7.79 l 210.203 7.79 l 210.184 7.919 l 210.156 8.056 l
 210.016 8.478 209.645 8.689 209.043 8.693 c 208.758 8.689 208.523 8.63 
208.348 8.513 c 208.133 8.372 208.027 8.169 208.031 7.9 c 208.027 7.607 
208.141 7.392 208.367 7.263 c 208.496 7.181 208.746 7.103 209.113 7.025 
c 209.25 6.997 l 209.402 6.966 l 209.441 6.954 l 210.043 6.802 210.434 6.665
 210.621 6.548 c 210.969 6.325 211.145 5.978 211.148 5.497 c 211.148 5.439
 l 211.145 4.915 210.926 4.513 210.492 4.236 c 210.125 3.997 209.668 3.88
 209.113 3.88 c 208.371 3.88 207.832 4.036 207.496 4.357 c 207.195 4.63 
207.008 4.993 206.938 5.439 c 206.93 5.497 l 206.93 5.568 l h
216.406 9.111 m 216.398 8.423 l 216.848 9.009 217.398 9.306 218.059 9.31
 c 218.805 9.306 219.375 9.032 219.77 8.486 c 220.113 7.993 220.289 7.361
 220.289 6.587 c 220.289 5.821 220.117 5.196 219.781 4.712 c 219.383 4.157
 218.816 3.88 218.078 3.88 c 218.02 3.88 l 217.301 3.88 216.777 4.181 216.445
 4.79 c 216.445 2.232 l 215.594 2.232 l 215.594 9.111 l h
216.859 4.986 m 217.168 4.65 217.52 4.482 217.914 4.486 c 218.434 4.482
 218.82 4.716 219.078 5.181 c 219.273 5.548 219.375 6.017 219.375 6.587 
c 219.375 7.302 219.234 7.829 218.957 8.177 c 218.676 8.517 218.313 8.689
 217.867 8.693 c 217.707 8.689 217.543 8.661 217.379 8.603 c 216.715 8.364
 216.387 7.685 216.387 6.568 c 216.387 5.845 216.543 5.318 216.859 4.986
 c h
224.168 8.693 m 223.578 8.689 223.117 8.54 222.781 8.247 c 222.527 8.017
 222.367 7.716 222.305 7.341 c 222.281 7.22 222.27 7.083 222.262 6.927 c
 222.262 4.068 l 221.41 4.068 l 221.41 9.111 l 222.262 9.111 l 222.262 8.138
 l 222.395 8.486 222.609 8.763 222.906 8.97 c 223.203 9.173 223.539 9.282
 223.922 9.298 c 224.168 9.31 l h
224.828 7.622 m 224.828 7.72 l 224.836 7.818 l 224.832 8.154 225.004 8.493
 225.352 8.841 c 225.66 9.15 226.188 9.306 226.93 9.31 c 227.941 9.306 228.566
 8.966 228.809 8.286 c 228.844 8.177 228.867 8.052 228.875 7.919 c 228.895
 7.611 l 228.848 5.279 l 228.84 5.044 228.867 4.888 228.93 4.806 c 228.992
 4.724 229.137 4.681 229.363 4.685 c 229.363 4.068 l 229.324 4.068 l 229.281
 4.056 l 229.145 4.048 l 228.977 4.036 l 228.688 4.021 228.477 4.064 228.352
 4.173 c 228.219 4.282 228.133 4.478 228.094 4.763 c 227.988 4.575 227.875
 4.431 227.746 4.325 c 227.711 4.298 227.645 4.255 227.555 4.196 c 227.273
 4.025 227.016 3.931 226.773 3.907 c 226.395 3.88 l 225.953 3.849 225.59
 3.927 225.305 4.118 c 225.055 4.279 224.887 4.462 224.797 4.673 c 224.734
 4.802 224.695 4.939 224.68 5.079 c 224.656 5.388 l 224.629 5.755 224.77
 6.099 225.074 6.411 c 225.355 6.708 226.023 6.9 227.078 6.986 c 227.309
 7.005 l 227.512 7.001 227.699 7.044 227.863 7.134 c 227.98 7.189 228.039
 7.372 228.043 7.681 c 228.039 8.154 227.848 8.466 227.469 8.614 c 227.352
 8.654 227.25 8.673 227.16 8.681 c 226.922 8.693 l 226.664 8.681 l 226.613
 8.677 226.551 8.677 226.473 8.673 c 226.457 8.673 226.402 8.65 226.305 
8.603 c 225.867 8.462 225.648 8.134 225.652 7.622 c h
228.043 6.65 m 228.004 6.618 l 227.973 6.599 l 227.754 6.509 l 227.457 
6.458 l 227.398 6.458 l 226.996 6.458 226.551 6.376 226.066 6.212 c 225.715
 6.091 225.543 5.825 225.543 5.419 c 225.563 5.228 l 225.563 5.142 225.59
 5.06 225.641 4.982 c 225.789 4.65 226.074 4.482 226.496 4.486 c 227.172
 4.482 227.633 4.798 227.875 5.427 c 227.879 5.45 227.898 5.513 227.934 
5.614 c 227.945 5.673 227.961 5.759 227.984 5.872 c 228.023 6.22 l h
233.285 9.111 m 234.238 9.111 l 232.512 6.696 l 234.375 4.068 l 233.422
 4.068 l 232.023 6.142 l 230.625 4.068 l 229.672 4.068 l 231.539 6.696 l
 229.801 9.111 l 230.754 9.111 l 232.023 7.243 l h
235.91 9.111 m 235.91 4.068 l 235.059 4.068 l 235.059 9.111 l h
235.059 11.017 m 235.91 11.017 l 235.91 10.103 l 235.059 10.103 l h
237.789 5.568 m 237.785 4.997 238.109 4.646 238.762 4.513 c 238.82 4.513
 238.883 4.505 238.953 4.493 c 239.129 4.486 l 239.211 4.486 l 239.516 4.482
 239.77 4.564 239.973 4.732 c 240.168 4.896 240.27 5.134 240.273 5.439 c
 240.27 5.614 240.211 5.771 240.094 5.915 c 239.945 6.075 239.66 6.2 239.238
 6.282 c 239.129 6.302 l 239.012 6.329 l 238.703 6.392 l 238.375 6.458 l
 238.098 6.517 237.816 6.654 237.531 6.876 c 237.27 7.071 237.141 7.4 237.145
 7.861 c 237.141 8.243 237.266 8.564 237.523 8.821 c 237.758 9.048 238.078
 9.196 238.477 9.259 c 238.754 9.298 l 239.02 9.31 l 239.652 9.333 240.117
 9.216 240.418 8.962 c 240.715 8.7 240.898 8.427 240.965 8.138 c 241.008
 7.958 l 241.027 7.79 l 240.211 7.79 l 240.191 7.919 l 240.164 8.056 l 240.023
 8.478 239.652 8.689 239.051 8.693 c 238.766 8.689 238.531 8.63 238.355 
8.513 c 238.141 8.372 238.035 8.169 238.039 7.9 c 238.035 7.607 238.148 
7.392 238.375 7.263 c 238.504 7.181 238.754 7.103 239.121 7.025 c 239.258
 6.997 l 239.41 6.966 l 239.449 6.954 l 240.051 6.802 240.441 6.665 240.629
 6.548 c 240.977 6.325 241.152 5.978 241.156 5.497 c 241.156 5.439 l 241.152
 4.915 240.934 4.513 240.5 4.236 c 240.133 3.997 239.676 3.88 239.121 3.88
 c 238.379 3.88 237.84 4.036 237.504 4.357 c 237.203 4.63 237.016 4.993 
236.945 5.439 c 236.938 5.497 l 236.938 5.568 l h
f
3.445 4.087 m 3.445 4.864 l 3.25 4.583 3.004 4.364 2.699 4.208 c 2.391 
4.048 2.066 3.97 1.727 3.97 c 1.375 3.97 1.059 4.044 0.785 4.2 c 0.504 4.349
 0.305 4.564 0.184 4.845 c 0.059 5.118 -0.004 5.501 0 5.993 c 0 9.275 l 
1.375 9.275 l 1.375 6.892 l 1.375 6.161 1.398 5.712 1.449 5.548 c 1.496 
5.38 1.586 5.251 1.723 5.157 c 1.855 5.06 2.027 5.013 2.234 5.017 c 2.465
 5.013 2.676 5.075 2.863 5.208 c 3.047 5.333 3.172 5.493 3.242 5.685 c 3.309
 5.872 3.344 6.341 3.344 7.087 c 3.344 9.275 l 4.719 9.275 l 4.719 4.087
 l h
f
10.527 4.087 m 9.156 4.087 l 9.156 6.736 l 9.152 7.29 9.125 7.65 9.066 
7.818 c 9.008 7.982 8.91 8.111 8.781 8.204 c 8.648 8.294 8.492 8.341 8.305
 8.341 c 8.066 8.341 7.852 8.275 7.664 8.146 c 7.473 8.013 7.344 7.841 7.277
 7.626 c 7.203 7.411 7.168 7.013 7.172 6.435 c 7.172 4.087 l 5.801 4.087
 l 5.801 9.275 l 7.078 9.275 l 7.078 8.509 l 7.527 9.095 8.098 9.388 8.785
 9.392 c 9.086 9.388 9.359 9.333 9.613 9.228 c 9.863 9.114 10.055 8.978 
10.184 8.81 c 10.309 8.638 10.398 8.443 10.449 8.232 c 10.5 8.013 10.523
 7.708 10.527 7.31 c h
f
11.598 9.978 m 11.598 11.243 l 12.969 11.243 l 12.969 9.978 l h
11.598 4.087 m 11.598 9.275 l 12.969 9.275 l 12.969 4.087 l h
f
15.457 4.087 m 13.367 9.275 l 14.805 9.275 l 15.781 6.626 l 16.066 5.743
 l 16.141 5.966 16.188 6.114 16.207 6.189 c 16.254 6.333 16.301 6.478 16.355
 6.626 c 17.34 9.275 l 18.75 9.275 l 16.691 4.087 l h
f
22.082 5.736 m 23.449 5.509 l 23.273 5.005 22.996 4.622 22.617 4.361 c 
22.238 4.099 21.762 3.97 21.195 3.97 c 20.289 3.97 19.621 4.263 19.191 4.853
 c 18.848 5.325 18.68 5.923 18.68 6.642 c 18.68 7.501 18.902 8.173 19.352
 8.661 c 19.801 9.146 20.371 9.388 21.059 9.392 c 21.828 9.388 22.434 9.134
 22.883 8.626 c 23.328 8.114 23.543 7.333 23.523 6.282 c 20.086 6.282 l 
20.094 5.872 20.203 5.556 20.418 5.333 c 20.629 5.103 20.895 4.989 21.211
 4.993 c 21.422 4.989 21.602 5.048 21.75 5.169 c 21.898 5.282 22.008 5.47
 22.082 5.736 c h
22.16 7.126 m 22.152 7.521 22.051 7.821 21.855 8.029 c 21.66 8.236 21.422
 8.341 21.141 8.341 c 20.84 8.341 20.59 8.232 20.398 8.013 c 20.199 7.794
 20.105 7.497 20.113 7.126 c h
f
25.988 4.087 m 24.617 4.087 l 24.617 9.275 l 25.891 9.275 l 25.891 8.536
 l 26.109 8.88 26.305 9.111 26.477 9.224 c 26.648 9.333 26.848 9.388 27.074
 9.392 c 27.387 9.388 27.688 9.302 27.977 9.13 c 27.551 7.935 l 27.316 8.079
 27.102 8.154 26.906 8.157 c 26.711 8.154 26.551 8.099 26.418 7.997 c 26.285
 7.888 26.18 7.7 26.102 7.427 c 26.023 7.15 25.984 6.568 25.988 5.689 c 
h
f
27.934 5.568 m 29.309 5.775 l 29.367 5.509 29.484 5.306 29.664 5.169 c 
29.84 5.029 30.094 4.958 30.418 4.962 c 30.77 4.958 31.035 5.025 31.219 
5.157 c 31.34 5.247 31.402 5.368 31.402 5.525 c 31.402 5.626 31.367 5.712
 31.301 5.782 c 31.23 5.845 31.078 5.907 30.844 5.962 c 29.734 6.204 29.031
 6.427 28.738 6.63 c 28.324 6.911 28.121 7.298 28.125 7.798 c 28.121 8.243
 28.297 8.622 28.656 8.931 c 29.008 9.236 29.559 9.388 30.309 9.392 c 31.012
 9.388 31.539 9.275 31.887 9.044 c 32.23 8.81 32.469 8.466 32.602 8.017 
c 31.309 7.779 l 31.25 7.978 31.145 8.13 30.992 8.239 c 30.836 8.345 30.613
 8.4 30.332 8.404 c 29.965 8.4 29.707 8.349 29.555 8.251 c 29.449 8.177 
29.398 8.083 29.398 7.974 c 29.398 7.872 29.441 7.79 29.535 7.724 c 29.656
 7.63 30.086 7.501 30.816 7.337 c 31.547 7.169 32.055 6.966 32.348 6.728
 c 32.629 6.482 32.773 6.142 32.777 5.708 c 32.773 5.228 32.574 4.818 32.18
 4.482 c 31.781 4.138 31.195 3.97 30.418 3.97 c 29.711 3.97 29.152 4.111
 28.742 4.4 c 28.328 4.681 28.059 5.071 27.934 5.568 c h
f
33.641 9.978 m 33.641 11.243 l 35.012 11.243 l 35.012 9.978 l h
33.641 4.087 m 33.641 9.275 l 35.012 9.275 l 35.012 4.087 l h
f
40.828 4.087 m 39.555 4.087 l 39.555 4.849 l 39.34 4.552 39.09 4.329 38.805
 4.185 c 38.512 4.04 38.223 3.97 37.934 3.97 c 37.336 3.97 36.824 4.208 
36.402 4.689 c 35.977 5.169 35.766 5.841 35.766 6.7 c 35.766 7.575 35.969
 8.243 36.383 8.704 c 36.793 9.161 37.316 9.388 37.953 9.392 c 38.531 9.388
 39.035 9.146 39.457 8.665 c 39.457 11.243 l 40.828 11.243 l h
37.168 6.79 m 37.164 6.236 37.242 5.837 37.395 5.591 c 37.617 5.232 37.926
 5.052 38.324 5.056 c 38.637 5.052 38.906 5.189 39.129 5.458 c 39.348 5.724
 39.457 6.122 39.461 6.661 c 39.457 7.255 39.348 7.685 39.137 7.946 c 38.918
 8.208 38.645 8.341 38.316 8.341 c 37.984 8.341 37.711 8.208 37.496 7.95
 c 37.273 7.689 37.164 7.302 37.168 6.79 c h
f
43.063 7.689 m 41.82 7.915 l 41.953 8.411 42.195 8.782 42.539 9.029 c 42.883
 9.267 43.391 9.388 44.063 9.392 c 44.676 9.388 45.133 9.318 45.434 9.173
 c 45.73 9.025 45.938 8.837 46.063 8.618 c 46.18 8.392 46.242 7.986 46.246
 7.392 c 46.234 5.79 l 46.23 5.333 46.25 4.997 46.297 4.782 c 46.336 4.564
 46.422 4.333 46.547 4.087 c 45.188 4.087 l 45.148 4.177 45.102 4.31 45.055
 4.493 c 45.031 4.571 45.016 4.626 45.008 4.654 c 44.77 4.423 44.52 4.251
 44.254 4.142 c 43.984 4.025 43.699 3.97 43.398 3.97 c 42.863 3.97 42.441
 4.114 42.137 4.404 c 41.824 4.693 41.672 5.056 41.676 5.501 c 41.672 5.79
 41.742 6.052 41.887 6.286 c 42.023 6.513 42.219 6.689 42.473 6.814 c 42.723
 6.931 43.086 7.04 43.566 7.134 c 44.203 7.251 44.648 7.361 44.898 7.47 
c 44.898 7.607 l 44.895 7.868 44.828 8.056 44.703 8.169 c 44.57 8.282 44.328
 8.341 43.969 8.341 c 43.723 8.341 43.531 8.29 43.395 8.196 c 43.258 8.095
 43.145 7.927 43.063 7.689 c h
44.898 6.579 m 44.723 6.517 44.445 6.446 44.063 6.364 c 43.68 6.282 43.43
 6.204 43.316 6.126 c 43.133 6.001 43.043 5.841 43.047 5.646 c 43.043 5.45
 43.113 5.282 43.262 5.146 c 43.402 5.005 43.586 4.935 43.813 4.939 c 44.055
 4.935 44.293 5.017 44.52 5.181 c 44.684 5.302 44.789 5.454 44.844 5.634
 c 44.875 5.751 44.895 5.974 44.898 6.306 c h
f
52.387 4.087 m 51.113 4.087 l 51.113 4.849 l 50.898 4.552 50.648 4.329 
50.363 4.185 c 50.07 4.04 49.781 3.97 49.492 3.97 c 48.895 3.97 48.383 4.208
 47.961 4.689 c 47.535 5.169 47.324 5.841 47.324 6.7 c 47.324 7.575 47.527
 8.243 47.941 8.704 c 48.352 9.161 48.875 9.388 49.512 9.392 c 50.09 9.388
 50.594 9.146 51.016 8.665 c 51.016 11.243 l 52.387 11.243 l h
48.727 6.79 m 48.723 6.236 48.801 5.837 48.953 5.591 c 49.176 5.232 49.484
 5.052 49.883 5.056 c 50.195 5.052 50.465 5.189 50.688 5.458 c 50.906 5.724
 51.016 6.122 51.02 6.661 c 51.016 7.255 50.906 7.685 50.695 7.946 c 50.477
 8.208 50.203 8.341 49.875 8.341 c 49.543 8.341 49.27 8.208 49.055 7.95 
c 48.832 7.689 48.723 7.302 48.727 6.79 c h
f
56.594 5.736 m 57.961 5.509 l 57.785 5.005 57.508 4.622 57.129 4.361 c 
56.75 4.099 56.273 3.97 55.707 3.97 c 54.801 3.97 54.133 4.263 53.703 4.853
 c 53.359 5.325 53.191 5.923 53.191 6.642 c 53.191 7.501 53.414 8.173 53.863
 8.661 c 54.313 9.146 54.883 9.388 55.57 9.392 c 56.34 9.388 56.945 9.134
 57.395 8.626 c 57.84 8.114 58.055 7.333 58.035 6.282 c 54.598 6.282 l 54.605
 5.872 54.715 5.556 54.93 5.333 c 55.141 5.103 55.406 4.989 55.723 4.993
 c 55.934 4.989 56.113 5.048 56.262 5.169 c 56.41 5.282 56.52 5.47 56.594
 5.736 c h
56.672 7.126 m 56.664 7.521 56.563 7.821 56.367 8.029 c 56.172 8.236 55.934
 8.341 55.652 8.341 c 55.352 8.341 55.102 8.232 54.91 8.013 c 54.711 7.794
 54.617 7.497 54.625 7.126 c h
f
66.574 4.087 m 65.301 4.087 l 65.301 4.849 l 65.086 4.552 64.836 4.329 
64.551 4.185 c 64.258 4.04 63.969 3.97 63.68 3.97 c 63.082 3.97 62.57 4.208
 62.148 4.689 c 61.723 5.169 61.512 5.841 61.512 6.7 c 61.512 7.575 61.715
 8.243 62.129 8.704 c 62.539 9.161 63.063 9.388 63.699 9.392 c 64.277 9.388
 64.781 9.146 65.203 8.665 c 65.203 11.243 l 66.574 11.243 l h
62.914 6.79 m 62.91 6.236 62.988 5.837 63.141 5.591 c 63.363 5.232 63.672
 5.052 64.07 5.056 c 64.383 5.052 64.652 5.189 64.875 5.458 c 65.094 5.724
 65.203 6.122 65.207 6.661 c 65.203 7.255 65.094 7.685 64.883 7.946 c 64.664
 8.208 64.391 8.341 64.063 8.341 c 63.73 8.341 63.457 8.208 63.242 7.95 
c 63.02 7.689 62.91 7.302 62.914 6.79 c h
f
70.785 5.736 m 72.152 5.509 l 71.977 5.005 71.699 4.622 71.32 4.361 c 70.941
 4.099 70.465 3.97 69.898 3.97 c 68.992 3.97 68.324 4.263 67.895 4.853 c
 67.551 5.325 67.383 5.923 67.383 6.642 c 67.383 7.501 67.605 8.173 68.055
 8.661 c 68.504 9.146 69.074 9.388 69.762 9.392 c 70.531 9.388 71.137 9.134
 71.586 8.626 c 72.031 8.114 72.246 7.333 72.227 6.282 c 68.789 6.282 l 
68.797 5.872 68.906 5.556 69.121 5.333 c 69.332 5.103 69.598 4.989 69.914
 4.993 c 70.125 4.989 70.305 5.048 70.453 5.169 c 70.602 5.282 70.711 5.47
 70.785 5.736 c h
70.863 7.126 m 70.855 7.521 70.754 7.821 70.559 8.029 c 70.363 8.236 70.125
 8.341 69.844 8.341 c 69.543 8.341 69.293 8.232 69.102 8.013 c 68.902 7.794
 68.809 7.497 68.816 7.126 c h
f
77.035 7.689 m 75.793 7.915 l 75.926 8.411 76.168 8.782 76.512 9.029 c 
76.855 9.267 77.363 9.388 78.035 9.392 c 78.648 9.388 79.105 9.318 79.406
 9.173 c 79.703 9.025 79.91 8.837 80.035 8.618 c 80.152 8.392 80.215 7.986
 80.219 7.392 c 80.207 5.79 l 80.203 5.333 80.223 4.997 80.27 4.782 c 80.309
 4.564 80.395 4.333 80.52 4.087 c 79.16 4.087 l 79.121 4.177 79.074 4.31
 79.027 4.493 c 79.004 4.571 78.988 4.626 78.98 4.654 c 78.742 4.423 78.492
 4.251 78.227 4.142 c 77.957 4.025 77.672 3.97 77.371 3.97 c 76.836 3.97
 76.414 4.114 76.109 4.404 c 75.797 4.693 75.645 5.056 75.648 5.501 c 75.645
 5.79 75.715 6.052 75.859 6.286 c 75.996 6.513 76.191 6.689 76.445 6.814
 c 76.695 6.931 77.059 7.04 77.539 7.134 c 78.176 7.251 78.621 7.361 78.871
 7.47 c 78.871 7.607 l 78.867 7.868 78.801 8.056 78.676 8.169 c 78.543 8.282
 78.301 8.341 77.941 8.341 c 77.695 8.341 77.504 8.29 77.367 8.196 c 77.23
 8.095 77.117 7.927 77.035 7.689 c h
78.871 6.579 m 78.695 6.517 78.418 6.446 78.035 6.364 c 77.652 6.282 77.402
 6.204 77.289 6.126 c 77.105 6.001 77.016 5.841 77.02 5.646 c 77.016 5.45
 77.086 5.282 77.234 5.146 c 77.375 5.005 77.559 4.935 77.785 4.939 c 78.027
 4.935 78.266 5.017 78.492 5.181 c 78.656 5.302 78.762 5.454 78.816 5.634
 c 78.848 5.751 78.867 5.974 78.871 6.306 c h
f
83.027 4.087 m 80.938 9.275 l 82.375 9.275 l 83.352 6.626 l 83.637 5.743
 l 83.711 5.966 83.758 6.114 83.777 6.189 c 83.824 6.333 83.871 6.478 83.926
 6.626 c 84.91 9.275 l 86.32 9.275 l 84.262 4.087 l h
f
89.656 5.736 m 91.023 5.509 l 90.848 5.005 90.57 4.622 90.191 4.361 c 89.813
 4.099 89.336 3.97 88.77 3.97 c 87.863 3.97 87.195 4.263 86.766 4.853 c 
86.422 5.325 86.254 5.923 86.254 6.642 c 86.254 7.501 86.477 8.173 86.926
 8.661 c 87.375 9.146 87.945 9.388 88.633 9.392 c 89.402 9.388 90.008 9.134
 90.457 8.626 c 90.902 8.114 91.117 7.333 91.098 6.282 c 87.66 6.282 l 87.668
 5.872 87.777 5.556 87.992 5.333 c 88.203 5.103 88.469 4.989 88.785 4.993
 c 88.996 4.989 89.176 5.048 89.324 5.169 c 89.473 5.282 89.582 5.47 89.656
 5.736 c h
89.734 7.126 m 89.727 7.521 89.625 7.821 89.43 8.029 c 89.234 8.236 88.996
 8.341 88.715 8.341 c 88.414 8.341 88.164 8.232 87.973 8.013 c 87.773 7.794
 87.68 7.497 87.688 7.126 c h
f
92.25 9.978 m 92.25 11.243 l 93.621 11.243 l 93.621 9.978 l h
92.25 4.087 m 92.25 9.275 l 93.621 9.275 l 93.621 4.087 l h
f
95.996 4.087 m 94.625 4.087 l 94.625 9.275 l 95.898 9.275 l 95.898 8.536
 l 96.117 8.88 96.313 9.111 96.484 9.224 c 96.656 9.333 96.855 9.388 97.082
 9.392 c 97.395 9.388 97.695 9.302 97.984 9.13 c 97.559 7.935 l 97.324 8.079
 97.109 8.154 96.914 8.157 c 96.719 8.154 96.559 8.099 96.426 7.997 c 96.293
 7.888 96.188 7.7 96.109 7.427 c 96.031 7.15 95.992 6.568 95.996 5.689 c
 h
f
97.926 6.751 m 97.926 7.208 98.035 7.65 98.262 8.075 c 98.484 8.501 98.805
 8.825 99.219 9.052 c 99.629 9.275 100.09 9.388 100.598 9.392 c 101.383 
9.388 102.023 9.134 102.527 8.626 c 103.023 8.114 103.273 7.47 103.277 6.696
 c 103.273 5.907 103.023 5.259 102.52 4.743 c 102.012 4.228 101.375 3.97
 100.609 3.97 c 100.133 3.97 99.676 4.075 99.246 4.29 c 98.813 4.505 98.484
 4.821 98.262 5.236 c 98.035 5.65 97.926 6.154 97.926 6.751 c h
99.332 6.681 m 99.332 6.161 99.453 5.767 99.699 5.497 c 99.941 5.22 100.242
 5.083 100.605 5.087 c 100.957 5.083 101.258 5.22 101.504 5.497 c 101.742
 5.767 101.863 6.165 101.867 6.689 c 101.863 7.196 101.742 7.587 101.504
 7.861 c 101.258 8.134 100.957 8.271 100.605 8.271 c 100.242 8.271 99.941
 8.134 99.699 7.861 c 99.453 7.587 99.332 7.193 99.332 6.681 c h
f
Q Q
showpage
%%Trailer
count op_count sub {pop} repeat
countdictstack dict_count sub {end} repeat
cairo_eps_state restore
%%EOF

%%EndDocument
 @endspecial 949 179 a Fn(Eletricidade)52 b(&)g(Magnetismo)1649
292 y Fm(\(2013-2014\))460 517 y Fl(Prop)s(osta)34 b(de)h
(Resolu\347\343o)g(do)f(Relat\363rio)h(Individual)e(de)i(Lab)s
(orat\363rio)1407 630 y Fm(10)c(de)f(dezem)m(bro)i(de)f(2013)p
1 0 0 TeXcolorrgb 1457 856 a(V)-8 b(ers\343o)31 b(A)p
1457 871 360 4 v 0 TeXcolorgray 30 w(&)p 0 0 1 TeXcolorrgb
30 w(V)-8 b(ers\343o)31 b(B)p 1947 871 356 4 v 0 TeXcolorgray
-128 1069 a Fl(1\))k(Eletro)s(est\341tica)2860 b Fm([)p
Fk(3)32 b(valor)-5 b(es)7 b Fm(])14 1182 y(Quando)29
b(o)e(aluno)i(eletriza)g(p)s(or)f(fric\347\343o)g(uma)g(barra)h(de)p
1 0 0 TeXcolorrgb 28 w(acr\355lico)p 0 TeXcolorgray 29
w(/)p 0 0 1 TeXcolorrgb 28 w(PV)m(C)p 0 TeXcolorgray
28 w(esta)f(\034ca)g(carregada)p 1 0 0 TeXcolorrgb 30
w(p)s(ositiv)-5 b(amen)m(te)p 0 TeXcolorgray -128 1295
a(/)p 0 0 1 TeXcolorrgb 32 w(negativ)g(amen)m(te)p 0
TeXcolorgray 35 w(na)32 b(zona)h(em)f(que)g(foi)g(friccionada.)46
b(O)33 b(pano)f(usado)h(\034ca)f(p)s(or)g(sua)g(v)m(ez)g(carregado)i
(com)e(carga)-128 1407 y(op)s(osta.)14 1520 y(Inicialmen)m(te)27
b(o)e(eletrosc\363pio)h(encon)m(tra-se)h(descarregado.)40
b(A)m(o)25 b(apro)m(ximar)i(a)e(barra)h(da)f(cab)s(e\347a)h(do)f
(eletrosc\363-)-128 1633 y(pio,)33 b(p)s(or)e(indu\347\343o)i
(eletrost\341tica,)g(esta)f(\034ca)g(carregada)p 1 0 0
TeXcolorrgb 33 w(negativ)-5 b(amen)m(te)p 0 TeXcolorgray
34 w(/)p 0 0 1 TeXcolorrgb 31 w(p)s(ositiv)g(amen)m(te)p
0 TeXcolorgray(.)46 b(Como)32 b(h\341)g(um)g(\035uxo)-128
1746 y(de)26 b(cargas)p 1 0 0 TeXcolorrgb 26 w(negativ)-5
b(as)p 0 TeXcolorgray 26 w(/)p 0 0 1 TeXcolorrgb 25 w(p)s(ositiv)g(as)p
0 TeXcolorgray 25 w(para)26 b(a)f(cab)s(e\347a)h(do)f(eletrosc\363pio,)
j(as)d(palhetas)h(\(na)g(outra)g(extremidade\))h(\034cam)-128
1859 y(com)k(excesso)f(de)h(cargas)p 1 0 0 TeXcolorrgb
30 w(p)s(ositiv)-5 b(as)p 0 TeXcolorgray 30 w(/)p 0 0 1
TeXcolorrgb 30 w(negativ)g(as)p 0 TeXcolorgray(.)p 0
TeXcolorgray 1348 3405 a @beginspecial 0 @llx -1 @lly
639 @urx 853 @ury 1278 @rwi @setspecial
%%BeginDocument: figs/electroscope.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.12.16 (http://cairographics.org)
%%CreationDate: Tue Dec 17 09:44:44 2013
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 -1 639 853
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 -1 639 853
%%EndPageSetup
q 0 -1 639 854 rectclip q
q
403.793 297.145 m 318.992 297.145 l 254.992 126.344 l 339.793 126.344 l
 h
W n
[-0.8 0 0 -0.8 546.706192 618.691684] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.901961 0.972549 0.027451 ]
      /C1 [ 0.984314 0.862745 0 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.984314 0.862745 0 ]
      /C1 [ 0.890196 0.988235 0.0313726 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.890196 0.988235 0.0313726 ]
      /C1 [ 0.996078 0.647059 0.0666667 ]
      /N 1
   >>
   ]
   /Bounds [ 0.339375 0.641402 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 176.142853 399.433624 254.714279 617.933594 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
0 g
4 w
1 J
1 j
[] 0.0 d
4 M q 1 0 0 -1 0 852.074402 cm
403.793 554.93 m 318.992 554.93 l 254.992 725.73 l 339.793 725.73 l h
S Q
4 w
0 J
0 j
q 1 0 0 -1 0 852.074402 cm
636.078 575.785 m 636.078 727.27 513.277 850.074 361.793 850.074 c 210.309
 850.074 87.508 727.27 87.508 575.785 c 87.508 424.305 210.309 301.5 361.793
 301.5 c 513.277 301.5 636.078 424.305 636.078 575.785 c h
S Q
q
340.594 615.145 m 340.594 423.371 l 340.594 405.992 366.168 373.172 385.234
 352.488 c 404.301 331.805 429.219 307.699 429.219 297.145 c 298.191 297.145
 l 298.191 253.945 l 468.191 253.945 l 480.777 266.531 476.609 283.555 470.934
 298.57 c 443.23 346.551 382.992 398.156 382.992 423.371 c 382.992 615.145
 l W n
[0.8 0 0 -0.8 -6.208088 856.744788] concat
/CairoFunction
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.92549 0.92549 0.92549 ]
      /C1 [ 0.627451 0.627451 0.627451 ]
      /N 1
   >>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 378 527.75 605.787292 527.75 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
4 w
0 J
1 j
[] 0.0 d
4 M q 1 0 0 -1 0 852.074402 cm
340.594 236.93 m 340.594 428.703 l 340.594 446.082 366.168 478.902 385.234
 499.586 c 404.301 520.27 429.219 544.375 429.219 554.93 c 298.191 554.93
 l 298.191 598.129 l 468.191 598.129 l 480.777 585.543 476.609 568.52 470.934
 553.504 c 443.23 505.523 382.992 453.918 382.992 428.703 c 382.992 236.93
 l S Q
q
322.27 563.051 m 401.516 563.051 l 402.844 563.051 403.914 561.981 403.914
 560.653 c 403.914 532.926 l 403.914 531.598 402.844 530.528 401.516 530.528
 c 322.27 530.528 l 320.941 530.528 319.871 531.598 319.871 532.926 c 319.871
 560.653 l 319.871 561.981 320.941 563.051 322.27 563.051 c h
W n
[0.8 0 0 -0.8 -6.208088 856.744788] concat
/CairoFunction
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 1 1 1 ]
      /C1 [ 0.619608 0.619608 0.619608 ]
      /N 1
   >>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 405.096558 387.444611 515.152405 387.444611 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
4 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 852.074402 cm
322.27 289.023 m 401.516 289.023 l 402.844 289.023 403.914 290.094 403.914
 291.422 c 403.914 319.148 l 403.914 320.477 402.844 321.547 401.516 321.547
 c 322.27 321.547 l 320.941 321.547 319.871 320.477 319.871 319.148 c 319.871
 291.422 l 319.871 290.094 320.941 289.023 322.27 289.023 c h
S Q
q
424.648 658.289 m 424.648 624.047 396.891 596.289 362.648 596.289 c 328.406
 596.289 300.648 624.047 300.648 658.289 c 300.648 692.528 328.406 720.289
 362.648 720.289 c 396.891 720.289 424.648 692.528 424.648 658.289 c h
W n
[0.647761 0 0 -0.647761 95.216224 784.045852] concat
/CairoFunction
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 1 1 1 ]
      /C1 [ 0.619608 0.619608 0.619608 ]
      /N 1
   >>
def
   << /ShadingType 3
      /ColorSpace /DeviceRGB
      /Coords [ 387.274536 163.267273 0 387.274536 163.267273 98.801842 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
4 w
1 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 852.074402 cm
424.648 193.785 m 424.648 228.027 396.891 255.785 362.648 255.785 c 328.406
 255.785 300.648 228.027 300.648 193.785 c 300.648 159.547 328.406 131.785
 362.648 131.785 c 396.891 131.785 424.648 159.547 424.648 193.785 c h
S Q
0.00784314 0.372549 0 rg
2.191 806.043 m 422.742 722.746 l 429.949 721.317 437.66 729.742 440.016
 741.645 c 440.219 742.668 l 442.574 754.57 438.676 765.317 431.469 766.746
 c 10.918 850.07 l f
0 g
4 w
q 1 0 0 -1 0 852.074402 cm
2.191 46.031 m 422.742 129.328 l 429.949 130.758 437.66 122.332 440.016
 110.43 c 440.219 109.406 l 442.574 97.504 438.676 86.758 431.469 85.328
 c 10.918 2.004 l S Q
1 0 0 rg
473.926 814.617 m 474.227 811.891 l 474.227 811.84 l 474.504 809.192 l 
474.477 809.192 l 474.504 808.891 l 480.352 809.34 l 480.328 809.668 l 480.328
 809.692 l 480.051 812.442 l 480.051 812.492 l 479.754 815.266 l h
474.902 803.141 m 475.004 801.317 l 475.004 801.266 l 475.078 798.742 l
 475.078 798.715 l 475.102 797.367 l 480.953 797.465 l 480.926 798.84 l 
480.926 798.891 l 480.852 801.492 l 480.852 801.543 l 480.754 803.418 l 
h
475.078 791.242 m 475.078 791.192 l 475.004 788.793 l 475.004 788.742 l
 474.879 786.367 l 474.879 786.317 l 474.852 785.918 l 480.676 785.516 l
 480.727 785.992 l 480.727 786.043 l 480.852 788.516 l 480.852 788.567 l
 480.926 791.067 l 480.926 791.516 l 475.078 791.617 l h
474.277 779.242 m 474.277 779.141 l 473.703 774.543 l 473.703 774.465 l
 474.852 774.317 l 479.504 773.617 l 479.504 773.742 l 480.102 778.516 l
 480.102 778.617 l 480.203 779.617 l 474.379 780.141 l h
472.152 765.293 m 472.129 765.215 l 471.676 763.141 l 477.426 761.918 l
 477.879 764.067 l 477.879 764.117 l 477.902 764.141 l 478.551 767.742 l
 472.801 768.793 l h
470.078 756.117 m 470.051 756.043 l 468.953 751.891 l 474.602 750.391 l
 475.727 754.617 l 475.727 754.641 l 475.754 754.668 l 476.102 756.117 l
 470.402 757.492 l h
466.078 742.266 m 466.051 742.215 l 465.602 740.84 l 471.152 739.016 l 
471.629 740.418 l 471.629 740.442 l 471.652 740.465 l 472.953 744.641 l 
467.352 746.391 l h
f
455.453 745.016 m 454.816 744.965 454.254 744.426 454.176 743.793 c 449.727
 704.242 l 449.656 703.676 449.977 703.082 450.488 702.824 c 451 702.57 
451.664 702.672 452.078 703.067 c 480.879 730.516 l 481.297 730.914 481.426
 731.586 481.188 732.11 c 480.945 732.637 480.352 732.977 479.777 732.918
 c 479.777 732.918 471.512 732.231 466.352 734.793 c 461.195 737.352 456.754
 744.367 456.754 744.367 c 456.48 744.797 455.961 745.059 455.453 745.016
 c h
f*
255.508 174.488 m 252.797 174.906 l 252.75 174.918 l 250.117 175.336 l 
250.125 175.363 l 249.828 175.414 l 248.746 169.649 l 249.066 169.59 l 249.094
 169.582 l 251.82 169.137 l 251.867 169.121 l 254.625 168.695 l h
244.168 176.516 m 242.383 176.895 l 242.332 176.906 l 239.875 177.488 l
 239.852 177.492 l 238.539 177.82 l 237.121 172.141 l 238.457 171.809 l 
238.48 171.805 l 238.504 171.797 l 241.035 171.195 l 241.059 171.192 l 241.086
 171.184 l 242.922 170.797 l h
232.629 179.43 m 232.582 179.442 l 230.281 180.133 l 230.234 180.149 l 
227.973 180.883 l 227.926 180.895 l 227.543 181.024 l 225.652 175.5 l 226.098
 175.328 l 226.121 175.324 l 226.145 175.317 l 228.504 174.555 l 228.527
 174.551 l 228.551 174.543 l 230.945 173.824 l 230.973 173.817 l 231.383
 173.707 l 232.992 179.332 l h
221.246 183.309 m 221.148 183.332 l 216.855 185.078 l 216.809 185.09 l 
216.781 185.098 l 216.34 184.028 l 214.461 179.715 l 214.484 179.711 l 214.531
 179.695 l 214.582 179.684 l 219.039 177.867 l 219.133 177.844 l 220.074
 177.488 l 222.09 182.977 l h
208.32 188.969 m 208.254 189.012 l 206.367 189.985 l 203.695 184.746 l 
205.656 183.758 l 205.703 183.742 l 205.723 183.715 l 209.031 182.153 l 
211.535 187.438 l h
199.996 193.348 m 199.93 193.391 l 196.207 195.528 l 193.297 190.461 l 
197.086 188.281 l 197.109 188.274 l 197.125 188.242 l 198.438 187.528 l 
201.238 192.68 l h
187.652 200.797 m 187.613 200.836 l 186.398 201.625 l 183.199 196.735 l
 184.43 195.914 l 184.453 195.91 l 184.473 195.879 l 188.168 193.543 l 191.309
 198.496 l h
f
154.602 226.543 m 153.648 226.512 152.961 225.297 153.426 224.465 c 172.477
 189.543 l 172.75 189.035 173.363 188.738 173.93 188.828 c 174.496 188.922
 174.98 189.399 175.078 189.965 c 175.078 189.965 176.543 198.149 180.352
 202.465 c 184.16 206.785 192.102 209.266 192.102 209.266 c 192.664 209.426
 193.094 209.973 193.113 210.555 c 193.137 211.137 192.75 211.715 192.203
 211.918 c 155.152 226.442 l 154.98 226.512 154.789 226.547 154.602 226.543
 c h
f*
468.078 174.488 m 470.789 174.906 l 470.836 174.918 l 473.465 175.336 l
 473.461 175.363 l 473.758 175.414 l 474.836 169.649 l 474.516 169.59 l 
474.492 169.582 l 471.766 169.137 l 471.738 169.129 l 471.715 169.121 l 
468.957 168.695 l h
479.414 176.516 m 481.203 176.895 l 481.25 176.906 l 483.711 177.488 l 
483.734 177.492 l 485.043 177.82 l 486.461 172.141 l 485.125 171.809 l 485.102
 171.805 l 485.078 171.797 l 482.547 171.195 l 482.523 171.192 l 482.5 171.184
 l 480.664 170.797 l h
490.953 179.43 m 491.004 179.442 l 493.301 180.133 l 493.348 180.149 l 
495.609 180.883 l 495.66 180.895 l 496.039 181.024 l 497.934 175.5 l 497.488
 175.328 l 497.465 175.324 l 497.438 175.317 l 495.082 174.555 l 495.059
 174.551 l 495.031 174.543 l 492.637 173.824 l 492.613 173.817 l 492.203
 173.707 l 490.594 179.332 l h
502.336 183.309 m 502.434 183.332 l 506.73 185.078 l 506.777 185.09 l 506.801
 185.098 l 507.242 184.028 l 509.125 179.715 l 509.098 179.711 l 509.051
 179.695 l 509.004 179.684 l 504.547 177.867 l 504.496 177.856 l 504.449
 177.844 l 503.508 177.488 l 501.496 182.977 l h
515.262 188.969 m 515.328 189.012 l 517.215 189.985 l 519.887 184.746 l
 517.926 183.758 l 517.879 183.742 l 517.863 183.715 l 514.551 182.153 l
 512.051 187.438 l h
523.586 193.348 m 523.652 193.391 l 527.379 195.528 l 530.289 190.461 l
 526.5 188.281 l 526.477 188.274 l 526.457 188.242 l 525.148 187.528 l 522.344
 192.68 l h
535.93 200.797 m 535.973 200.836 l 537.184 201.625 l 540.383 196.735 l 
539.152 195.914 l 539.129 195.91 l 539.113 195.879 l 535.418 193.543 l 532.277
 198.496 l h
f
568.879 226.543 m 568.723 226.535 568.57 226.5 568.426 226.442 c 531.379
 211.918 l 530.832 211.711 530.449 211.129 530.477 210.547 c 530.504 209.961
 530.938 209.422 531.504 209.266 c 531.504 209.266 539.285 206.824 543.129
 202.567 c 543.156 202.531 543.199 202.5 543.227 202.465 c 547.035 198.149
 548.504 189.965 548.504 189.965 c 548.602 189.399 549.086 188.922 549.652
 188.828 c 550.219 188.738 550.828 189.035 551.102 189.543 c 570.152 224.465
 l 570.637 225.328 569.863 226.582 568.879 226.543 c h
f*
q
319.391 297.145 m 404.191 297.145 l 468.191 126.344 l 383.391 126.344 l
 h
W n
[0.8 0 0 -0.8 176.477632 618.691684] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.901961 0.972549 0.027451 ]
      /C1 [ 0.984314 0.862745 0 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.984314 0.862745 0 ]
      /C1 [ 0.890196 0.988235 0.0313726 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.890196 0.988235 0.0313726 ]
      /C1 [ 0.996078 0.647059 0.0666667 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.996078 0.647059 0.0666667 ]
      /C1 [ 0.905882 0.937255 0.0392157 ]
      /N 1
   >>
   ]
   /Bounds [ 0.287306 0.575257 0.824125 ]
   /Encode [ 1 1 4 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 176.142853 399.433624 254.714279 617.933594 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
0 g
4 w
1 J
1 j
[] 0.0 d
4 M q 1 0 0 -1 0 852.074402 cm
319.391 554.93 m 404.191 554.93 l 468.191 725.73 l 383.391 725.73 l h
S Q
Q Q
showpage
%%Trailer
end restore
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 1187 3567 a(Figura)31 b(1:)40
b(Eletrosc\363pio)32 b(de)f(palhetas.)p 0 TeXcolorgray
0 TeXcolorgray 14 3790 a(Como)40 b(as)g(duas)g(palhetas)h(\034nas)f(e)f
(de)i(massa)e(m)m(uito)j(p)s(equena)e(\034cam)g(am)m(bas)h(carregadas)g
(com)g(a)f(mesma)-128 3903 y(carga,)h(devido)e(\340)f(for\347a)g
(eletrost\341tica)h(repulsiv)-5 b(a)39 b(en)m(tre)g(as)e(cargas)i(de)f
(mesmo)g(sinal,)i(as)e(palhetas)h(afastam-se)-128 4016
y(uma)28 b(da)g(outra)g(\(Fig.)g(1\).)39 b(Este)28 b(fen\363meno)g(o)s
(corre,)h(indep)s(enden)m(temen)m(te)i(da)c(carga)h(induzida,)i(logo)e
(\351)f(imp)s(oss\355v)m(el)-128 4129 y(a)m(v)-5 b(aliar)32
b(o)e(sinal)h(da)f(carga)h(induzida)h(na)e(cab)s(e\347a)h(do)g
(eletrosc\363pio.)14 4242 y(A)m(o)39 b(to)s(car)h(com)h(a)e(barra)i(de)
p 1 0 0 TeXcolorrgb 39 w(acr\355lico)p 0 TeXcolorgray
41 w(/)p 0 0 1 TeXcolorrgb 40 w(PV)m(C)p 0 TeXcolorgray
40 w(na)f(cab)s(e\347a)g(do)g(eletrosc\363pio,)k(como)c(s\343o)g(de)g
(material)g(mau)-128 4355 y(condutor,)34 b(as)d(cargas)h(presen)m(tes)h
(na)f(cab)s(e\347a)g(n\343o)g(ir\343o)g(\035uir)h(totalmen)m(te)h(para)
e(a)g(barra.)45 b(A)m(o)32 b(afastar-se)g(a)f(barra)-128
4468 y(da)j(cab)s(e\347a,)h(o)f(eletrosc\363pio)h(tende)f(para)g(o)g
(equil\355brio)g(eletrost\341tico.)52 b(Se)34 b(parte)g(da)g(carga)g
(tiv)m(er)h(sido)e(descarre-)-128 4581 y(gada)e(p)s(ela)g(barra)g
(aquando)f(do)h(con)m(tacto,)h(uma)f(carga)g(residual)g(p)s(ermanece)g
(nas)f(palhetas)h(e)f(elas)h(p)s(ermanecem)-128 4694
y(afastadas.)-128 4920 y Fl(2\))k(Circuitos)f(de)h(corren)m(te)g(con)m
(t\355n)m(ua)2105 b Fm([)p Fk(2)32 b(valor)-5 b(es)7
b Fm(])14 5032 y(Determinar)41 b(o)f(circuito)h(equiv)-5
b(alen)m(te)42 b(de)e(Th\351v)m(enin)i(consiste)e(em)g(simpli\034car)h
(o)f(circuito)i(esquematizado)-128 5145 y(na)c(Fig.)f(1)f(do)i(en)m
(unciado)g(n)m(um)g(circuito)g(constitu\355do)g(p)s(or)f(uma)g(fon)m
(te)h(de)f(tens\343o)g(ligada)h(em)f(s\351rie)g(com)g(uma)-128
5258 y(resist\352ncia,)32 b(como)f(mostra)f(a)h(Fig.)f(2.)14
5371 y(P)m(ara)g(determinar)i Fj(V)742 5386 y Fi(T)10
b(h)867 5371 y Fm(precisamos)30 b(de)g(calcular)g(a)g(queda)g(de)f
(tens\343o,)i(em)e(circuito)i(ab)s(erto,)f(en)m(tre)h(os)e(no)s(dos)
-128 5484 y Fj(A)40 b Fm(e)g Fj(B)j Fm(do)d(circuito)h(original)g(e)e
(para)h(determinar)h Fj(R)1813 5499 y Fi(T)10 b(h)1948
5484 y Fm("curto-circuita-se")43 b(a)c(fon)m(te)h(de)g(tens\343o)g(do)g
(circuito)-128 5597 y(original)32 b(e)e(determina-se)i(a)e
(resist\352ncia)h(equiv)-5 b(alen)m(te)32 b(en)m(tre)g(os)e(mesmos)g
(no)s(dos.)14 5710 y(Em)d(am)m(bas)h(as)e(v)m(ers\365)s(es,)h(no)g
(circuito)h(original)g(encon)m(tram-se)h(duas)e(resist\352ncias)g(asso)
s(ciadas)g(em)g(paralelo)h(de)-128 5823 y Fh(2)p Fj(:)p
Fh(2)k Fm(k)o Fh(\012)e Fm(e)h(de)f Fh(220)i(\012)p Fm(.)40
b(A)29 b(resist\352ncia)i(equiv)-5 b(alen)m(te)32 b(\340)e(asso)s
(cia\347\343o)h(de)f(am)m(bas)i(ser\341:)p 0 TeXcolorgray
1858 6192 a(1)p 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1290 581 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581
a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581
a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1290 581 a 1290 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581 a 1290 581 a
tx@Dict begin NAngle  RotBegin  end
 1290 581
a 1290 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin RotEnd  end
 1290 581 a 1290 581
a
tx@Dict begin PutEnd  end
 1290 581 a 1290 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581
a 1290 581 a
tx@Dict begin NAngle  RotBegin  end
 1290 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ -8.5359
14.22636 -8.5359 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
-2.84544 7.11317 -2.84544 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 2.84544
14.22636 2.84544 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
8.5359 7.11317 8.5359 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
1290 581 a
tx@Dict begin  tx@NodeDict begin {-8.5359 0.0 } false /N@dipole@1 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {8.5359 0.0 } false /N@dipole@2 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581
a
tx@Dict begin RotEnd  end
 1290 581 a 1290 581 a
tx@Dict begin PutEnd  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581
a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1290 581 a 1290 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581 a 1216 605 a Fj(V)1269
620 y Fi(T)10 b(h)1290 581 y
tx@Dict begin PutEnd  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1290 581 a 1290
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1290
581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1290 581 a 1290 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290
581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581 a 1290 581 a
tx@Dict begin NAngle  RotBegin  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin RotEnd  end
 1290 581 a 1290 581 a
tx@Dict begin PutEnd  end
 1290 581 a 1290
581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581 a 1290 581 a
tx@Dict begin NAngle  RotBegin  end
 1290
581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end
 
@endspecial 1290 581 a
tx@Dict begin RotEnd  end
 1290 581 a 1290 581
a
tx@Dict begin PutEnd  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581
a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1290 581 a 1290 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1290 581 a 1290 581
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1290 581 a 1207 605 a Fj(R)1276 620 y Fi(T)g(h)1290
581 y
tx@Dict begin PutEnd  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1290 581 a 1290
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290
581 a 1290 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1290 581 a 1290 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1290 581 a 1290
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1290 581 a 1290 581 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1290
581 a 1331 612 a Fj(A)1290 581 y
tx@Dict begin  PutEnd  end
 1290 581 a 1290 581
a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1290 581 a 1290 581 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1290 581 a 1331 612 a Fj(B)1290
581 y
tx@Dict begin  PutEnd  end
 1290 581 a 0 TeXcolorgray 1026 843 a Fm(Figura)31
b(2:)40 b(Circuito)32 b(equiv)-5 b(alen)m(te)32 b(de)e(Th\351v)m(enin)p
0 TeXcolorgray 0 TeXcolorgray 651 1280 a Fj(R)720 1294
y Fi(eq)816 1280 y Fh(=)1152 1218 y(1)p 921 1259 508
4 v 967 1312 a Fg(1)p 931 1327 106 4 v 931 1380 a(220)1067
1348 y Fh(+)1276 1312 y Fg(1)p 1168 1327 251 4 v 1168
1382 a(2)p Fi(:)p Fg(2)p Ff(\002)p Fg(10)1383 1363 y
Fe(3)1464 1280 y Fh(=)1762 1218 y(1)p 1570 1259 431 4
v 1580 1321 a Fg(2)p Fi(:)p Fg(2)p Ff(\002)p Fg(10)1795
1302 y Fe(3)1830 1321 y Fg(+220)p 1580 1336 411 4 v 1580
1390 a(220)p Ff(\002)p Fg(2)p Fi(:)p Fg(2)p Ff(\002)p
Fg(10)1955 1371 y Fe(3)2036 1280 y Fh(=)2142 1218 y(220)21
b Fd(\002)f Fh(2)p Fj(:)p Fh(2)i Fd(\002)d Fh(10)2706
1185 y Fg(3)p 2142 1259 606 4 v 2142 1342 a Fh(2)p Fj(:)p
Fh(2)i Fd(\002)f Fh(10)2459 1316 y Fg(3)2520 1342 y Fh(+)f(220)2782
1280 y(=)25 b(200)31 b(\012)14 1522 y Fm(Logo,)e(p)s(or)f(uma)h
(quest\343o)f(de)h(simpli\034ca\347\343o,)h(em)e(am)m(bas)h(as)f(v)m
(ers\365)s(es)g(esta)g(asso)s(cia\347\343o)h(em)f(paralelo)h(p)s(o)s
(de)f(ser)-128 1635 y(substitu\355da)k(p)s(or)e(uma)h(resist\352ncia)g
(de)f Fh(200)i(\012)p Fm(.)-128 1861 y Fj(R)-59 1876
y Fi(T)10 b(h)67 1861 y Fm(:)14 1974 y(Se)27 b(substituirmos)h(a)f(fon)
m(te)h(de)f(tens\343o)h(p)s(or)f(um)g(curto-circuito)i(e)f(tendo)g(em)f
(con)m(ta)h(a)f(simpli\034ca\347\343o)i(an)m(terior,)-128
2087 y(o)i(circuito)g(original)h(ter\341)f(a)f(disp)s(osi\347\343o)g
(de)h(resist\352ncias)f(da)h(Fig.)g(3.)p 0 TeXcolorgray
-128 3149 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@B 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 0.0 } false /N@C 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@D 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@E 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0
2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW 1 0 0  setrgbcolor
 /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse
{false} false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  moveto
} def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop }{ SLW
} ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1
/N@Inter@2 InitNC { NCLine  } if end   grestore end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 -128
3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149
a -128 3149 a
tx@Dict begin NAngle  RotBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin RotEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin NAngle  RotBegin  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial -128 3149 a
tx@Dict begin RotEnd  end

-128 3149 a -128 3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 -128 3149
a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -196
3178 a Fh(200)-128 3149 y
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 -128 3149
a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -128
3149 a
tx@Dict begin NAngle  RotBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin RotEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin NAngle  RotBegin  end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end
 
@endspecial -128 3149 a
tx@Dict begin RotEnd  end
 -128 3149 a -128
3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -197 3180 a Fh(1)p Fm(k)p
Fh(5)-128 3149 y
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a
-128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -128 3149 a -128
3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 -128 3149 a -128
3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -128 3149
a
tx@Dict begin NAngle  RotBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin RotEnd  end
 -128
3149 a -128 3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -128 3149 a
tx@Dict begin NAngle  RotBegin  end
 -128 3149 a -128
3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end
 
@endspecial -128 3149 a
tx@Dict begin RotEnd  end
 -128 3149 a -128
3149 a
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 -128 3149 a -196 3178 a Fh(100)-128
3149 y
tx@Dict begin PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128
3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2. CLW
mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 -128 3149
a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128
3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 -128 3149 a -128 3149
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 -128 3149 a -128 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 -128
3149 a -128 3149 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 -128 3149 a -86 3180 a Fj(A)-128 3149
y
tx@Dict begin  PutEnd  end
 -128 3149 a -128 3149 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 -128 3149 a -128 3149 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 -128
3149 a -86 3180 a Fj(B)-128 3149 y
tx@Dict begin  PutEnd  end
 -128 3149 a 0 TeXcolorgray
644 3268 a Fc(\(a\))p 1 0 0 TeXcolorrgb 28 w(V)-7 b(ers\343o)26
b(A)p 778 3281 331 4 v 0 TeXcolorgray 0 TeXcolorgray
1921 3149 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@B 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 0.0 } false /N@C 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@D 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@E 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {199.1692 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0
2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW 0 0 1  setrgbcolor
 /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse
{false} false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  moveto
} def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop }{ SLW
} ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1
/N@Inter@2 InitNC { NCLine  } if end   grestore end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921
3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149
a 1921 3149 a
tx@Dict begin NAngle  RotBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin RotEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin NAngle  RotBegin  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149
a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end
 
@endspecial 1921 3149 a
tx@Dict begin RotEnd  end

1921 3149 a 1921 3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1852
3180 a Fh(1)p Fm(k)o Fh(5)1921 3149 y
tx@Dict begin PutEnd  end
 1921 3149 a 1921
3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 3149 a 1921
3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921
3149 a 1921 3149 a
tx@Dict begin NAngle  RotBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149
a 1921 3149 a
tx@Dict begin RotEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921
3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1921 3149
a
tx@Dict begin NAngle  RotBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial 1921 3149
a
tx@Dict begin RotEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1853
3178 a Fh(200)1921 3149 y
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1921
3149 a
tx@Dict begin NAngle  RotBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin RotEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1921 3149 a
tx@Dict begin NAngle  RotBegin  end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a @beginspecial
@setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end
 
@endspecial 1921 3149 a
tx@Dict begin RotEnd  end
 1921 3149 a 1921
3149 a
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 3149 a 1853 3178 a Fh(470)1921
3149 y
tx@Dict begin PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2. CLW
mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 1921 3149
a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921
3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 3149 a 1921 3149
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1921 3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1921
3149 a 1921 3149 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1921 3149 a 1962 3180 a Fj(A)1921
3149 y
tx@Dict begin  PutEnd  end
 1921 3149 a 1921 3149 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1921 3149 a 1921 3149
a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1921 3149 a 1962 3180 a Fj(B)1921 3149 y
tx@Dict begin  PutEnd  end
 1921 3149
a 0 TeXcolorgray 2692 3268 a Fc(\(b\))p 0 0 1 TeXcolorrgb
28 w(V)-7 b(ers\343o)26 b(B)p 2830 3281 327 4 v 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 738 3460 a Fm(Figura)31
b(3:)40 b(Asso)s(cia\347\343o)30 b(de)h(resist\352ncias)f(para)h
(determinar)h Fj(R)2927 3475 y Fi(T)10 b(h)p 0 TeXcolorgray
0 TeXcolorgray 14 3689 a Fm(Nestas)44 b(condi\347\365)s(es,)49
b(a)44 b(resist\352ncia)i(equiv)-5 b(alen)m(te)46 b(de)f
Fh(200)h(\012)e Fm(encon)m(tra-se)i(asso)s(ciada)f(em)g(paralelo)h(com)
f(a)-128 3802 y(resist\352ncia)36 b(de)g Fh(1)p Fj(:)p
Fh(5)g Fm(k)p Fh(\012)p Fm(,)g(que)g(p)s(or)f(sua)g(v)m(ez)h(encon)m
(tram-se)h(am)m(bas)f(asso)s(ciadas)f(em)h(s\351rie)g(com)f(a)h
(resist\352ncia)g(de)p 1 0 0 TeXcolorrgb -128 3915 a
Fh(100)c(\012)p 0 TeXcolorgray 30 w Fm(/)p 0 0 1 TeXcolorrgb
30 w Fh(470)g(\012)p 0 TeXcolorgray Fm(.)40 b(V)-8 b(amos)30
b(en)m(t\343o)i(de\034nir)f Fj(R)1394 3882 y Ff(0)1393
3937 y Fi(eq)1489 3915 y Fh(=)25 b(200)i Fd(k)e Fh(1)p
Fm(k)q Fh(5)p Fm(,)618 4173 y Fj(R)688 4136 y Ff(0)687
4196 y Fi(eq)783 4173 y Fh(=)1120 4112 y(1)p 889 4152
508 4 v 934 4206 a Fg(1)p 899 4221 106 4 v 899 4273 a(200)1035
4242 y Fh(+)1243 4206 y Fg(1)p 1136 4221 251 4 v 1136
4276 a(1)p Fi(:)p Fg(5)p Ff(\002)p Fg(10)1351 4257 y
Fe(3)1431 4173 y Fh(=)1730 4112 y(1)p 1537 4152 431 4
v 1547 4214 a Fg(1)p Fi(:)p Fg(5)p Ff(\002)p Fg(10)1762
4195 y Fe(3)1797 4214 y Fg(+200)p 1547 4229 411 4 v 1547
4284 a(200)p Ff(\002)p Fg(1)p Fi(:)p Fg(5)p Ff(\002)p
Fg(10)1922 4265 y Fe(3)2003 4173 y Fh(=)2109 4112 y(200)d
Fd(\002)d Fh(1)p Fj(:)p Fh(5)j Fd(\002)e Fh(10)2674 4079
y Fg(3)p 2109 4152 606 4 v 2109 4236 a Fh(1)p Fj(:)p
Fh(5)h Fd(\002)f Fh(10)2426 4209 y Fg(3)2487 4236 y Fh(+)g(200)2749
4173 y(=)2855 4112 y(3000)p 2855 4152 182 4 v 2901 4236
a(17)3077 4173 y(\012)p 1 0 0 TeXcolorrgb -128 4416 a
Fm(V)-8 b(ers\343o)31 b(A)p -128 4431 360 4 v 30 w(:)p
0 TeXcolorgray 1 0 0 TeXcolorrgb 993 4657 a Fj(R)1062
4672 y Fi(T)10 b(h)1183 4657 y Fh(=)1289 4595 y(3000)p
1289 4636 182 4 v 1335 4719 a(17)1501 4657 y(+)20 b(100)27
b(=)1860 4595 y(4700)p 1860 4636 V 1905 4719 a(17)2077
4657 y Fd(\))53 b Fj(R)2290 4672 y Fi(T)10 b(h)2411 4657
y Fd(\031)25 b Fh(276)31 b(\012)p 2193 4570 575 4 v 2193
4698 4 131 v 2764 4698 V 2193 4700 575 4 v 0 TeXcolorgray
0 0 1 TeXcolorrgb -128 4937 a Fm(V)-8 b(ers\343o)31 b(B)p
-128 4952 356 4 v 30 w(:)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
971 5083 a Fj(R)1040 5098 y Fi(T)10 b(h)1161 5083 y Fh(=)1266
5022 y(3000)p 1266 5062 182 4 v 1312 5146 a(17)1478 5083
y(+)20 b(470)27 b(=)1837 5022 y(10990)p 1837 5062 228
4 v 1905 5146 a(17)2099 5083 y Fd(\))54 b Fj(R)2313 5098
y Fi(T)10 b(h)2434 5083 y Fd(\031)25 b Fh(646)31 b(\012)p
2216 4996 575 4 v 2216 5125 4 131 v 2787 5125 V 2216
5127 575 4 v 0 TeXcolorgray -128 5476 a Fj(V)-75 5491
y Fi(T)10 b(h)51 5476 y Fm(:)14 5589 y(Como)35 b(a)g(tens\343o)g(de)g
(Th\351v)m(enin)h(\()p Fj(V)1259 5604 y Fi(T)10 b(h)1355
5589 y Fm(\))34 b(\351)h(a)g(tens\343o)g(em)g(circuito)c(ab)s(erto)p
2015 5604 581 4 v 35 w(en)m(tre)36 b(os)e(no)s(dos)h
Fj(A)g Fm(e)f Fj(B)5 b Fm(,)35 b(logo)h(n\343o)-128 5702
y(existe)31 b(corren)m(te)h(a)f(\035uir)g(na)g(resist\352ncia)g(de)p
1 0 0 TeXcolorrgb 30 w Fh(100)h(\012)p 0 TeXcolorgray
30 w Fm(/)p 0 0 1 TeXcolorrgb 31 w Fh(470)g(\012)p 0
TeXcolorgray Fm(.)40 b(Assim)30 b(n\343o)h(o)s(corre)g(uma)g(quebra)g
(de)g(tens\343o)g(nesta)-128 5815 y(resist\352ncia.)p
0 TeXcolorgray 1858 6192 a(2)p 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 50 817 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@B 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@D 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@E 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {170.71646 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {170.71646 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ -8.5359
14.22636 -8.5359 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
-2.84544 7.11317 -2.84544 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 2.84544
14.22636 2.84544 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
8.5359 7.11317 8.5359 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
50 817 a
tx@Dict begin  tx@NodeDict begin {-8.5359 0.0 } false /N@dipole@1 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {8.5359 0.0 } false /N@dipole@2 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin RotEnd  end
 50 817 a
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -34.1432 -34.1432 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a
-80 849 a Fh(15)p Fj(:)p Fh(0)32 b Fm(V)50 817 y
tx@Dict begin PutEnd  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 50 817 a 15 840 a Fh(+)50 817 y
tx@Dict begin PutEnd  end
 50 817 a 50
817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 50 817 a 15 840 a Fd(\000)50 817 y
tx@Dict begin PutEnd  end
 50 817 a 50
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0 0 /N@@@A /N@@@B
InitNC { NCLine  } if end   grestore end
 50 817 a 50
817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray 0 TeXcolorgray
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a
50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin RotEnd  end
 50 817 a
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a
50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
@beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial 50 817 a
tx@Dict begin RotEnd  end
 50 817
a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817
a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -17.07181 -17.07181 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817
a -18 847 a Fh(200)50 817 y
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray 0.75 0 0.25
TeXcolorrgb 34 847 a Fj(i)p 0 TeXcolorgray 0 TeXcolorgray
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 50 817 a 15 840 a Fh(+)50
817 y
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 50 817 a 15 840 a Fd(\000)50
817 y
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50
817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0
0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0
TeXcolorgray 1 0.5 0 TeXcolorrgb 2 852 a Fj(V)75 819
y Ff(0)p 0 TeXcolorgray 0 TeXcolorgray 50 817 a
tx@Dict begin PutEnd  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817
a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817
a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817
a 50 817 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end


@endspecial 50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -19.91682 -19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a -20 849 a Fh(1)p Fm(k)p
Fh(5)50 817 y
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50
817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50
817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50
817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50
817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50
817 a 50 817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray 0.75 0 0.25 TeXcolorrgb
34 847 a Fj(i)p 0 TeXcolorgray 0 TeXcolorgray 50 817
a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 50 817 a 15 840 a Fh(+)50 817 y
tx@Dict begin PutEnd  end
 50
817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 50 817 a 15 840 a Fd(\000)50 817 y
tx@Dict begin PutEnd  end
 50
817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0 0 /N@@@A /N@@@B
InitNC { NCLine  } if end   grestore end
 50
817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray
0 TeXcolorgray 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50
817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 50
817 a
tx@Dict begin NAngle  RotBegin  end
 50 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray 0.75 0 0.25 TeXcolorrgb
-24 847 a Fj(i)p Fh(=0)p 0 TeXcolorgray 0 TeXcolorgray
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
1 0 0  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq
{ pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def
EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2.
CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2. CLW
mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a
50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 50 817 a
50 817 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 50 817 a 91 848 a Fj(A)50 817 y
tx@Dict begin  PutEnd  end
 50 817 a 50
817 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 50 817 a 50 817 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 50 817 a 91 848 a Fj(B)50 817
y
tx@Dict begin  PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@pst@tempa
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@pst@tempb
10 {InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@pst@tempa /N@pst@tempb
InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.05 def LPut end PutBegin  end
 50 817 a 50 817
a
tx@Dict begin NAngle  RotBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817
a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin /t 0.95 def LPut end PutBegin  end
 50 817 a 50 817
a
tx@Dict begin NAngle  RotBegin  end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin RotEnd  end
 50 817 a 50 817
a
tx@Dict begin PutEnd  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@@M1 /N@@M2 InitNC { NCLine  } if end  gsave 0.8 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 50 817 a 50 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M1
known { /N@@M1 load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M2
known { /N@@M2 load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 50 817 a 50 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 50 817 a 50 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 50 817 a 50 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 50 817 a 0 TeXcolorgray 1 0.5 0 TeXcolorrgb -24 841
a Fj(V)29 856 y Fi(T)10 b(h)p 0 TeXcolorgray 0 TeXcolorgray
50 817 a
tx@Dict begin PutEnd  end
 50 817 a 0 TeXcolorgray 644 937 a Fc(\(a\))p
1 0 0 TeXcolorrgb 28 w(V)-7 b(ers\343o)26 b(A)p 778 950
331 4 v 0 TeXcolorgray 0 TeXcolorgray 1921 817 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@B 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@D 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@E 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {170.71646 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {170.71646 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921
817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ -8.5359
14.22636 -8.5359 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
-2.84544 7.11317 -2.84544 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ 2.84544
14.22636 2.84544 -14.22636    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [
8.5359 7.11317 8.5359 -7.11317    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1921 817 a
tx@Dict begin  tx@NodeDict begin {-8.5359 0.0 } false /N@dipole@1 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {8.5359 0.0 } false /N@dipole@2 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -34.1432 -34.1432 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 1791 849 a Fh(15)p Fj(:)p Fh(0)32 b Fm(V)1921 817 y
tx@Dict begin PutEnd  end

1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 1921 817 a 1886 840 a Fh(+)1921 817 y
tx@Dict begin PutEnd  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 1921 817 a 1886 840 a Fd(\000)1921 817 y
tx@Dict begin PutEnd  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0 0 /N@@@A /N@@@B
InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 0 TeXcolorgray 0 TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a
1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0  setgray  -21.33955 0.0 T 3 {
gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { } def  [ 14.22636 0.0 10.66977 -7.11317
3.55658 7.11317 0.0 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore grestore grestore 14.22636 0.0 T } repeat
end


@endspecial 1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -17.07181 -17.07181 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 1852 849 a Fh(1)p Fm(k)o Fh(5)1921 817 y
tx@Dict begin PutEnd  end
 1921 817 a
1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial 1921 817 a
tx@Dict begin RotEnd  end
 1921
817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 0 TeXcolorgray 0.75 0 0.25
TeXcolorrgb 1905 847 a Fj(i)p 0 TeXcolorgray 0 TeXcolorgray
1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 1921 817 a 1886 840
a Fh(+)1921 817 y
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 1921 817 a 1886
840 a Fd(\000)1921 817 y
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0 0 /N@@@A /N@@@B
InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 0 TeXcolorgray 1 0.5 0
TeXcolorrgb 1873 852 a Fj(V)1945 819 y Ff(0)p 0 TeXcolorgray
0 TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921
817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921
817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921
817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial
1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -19.91682 -19.91682 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 817
a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1852 847
a Fh(200)1921 817 y
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a
1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end


@endspecial 1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 0 TeXcolorgray 0.75 0 0.25 TeXcolorrgb 1905 847 a Fj(i)p
0 TeXcolorgray 0 TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -28.45274 -28.45274 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.5 def LPut end PutBegin  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@tension@2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@1
known { /N@tension@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@tension@2
known { /N@tension@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin /t 0.25 def LPut end PutBegin  end
 1921 817 a 1886 840 a Fh(+)1921 817 y
tx@Dict begin PutEnd  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.75 def LPut end PutBegin  end
 1921 817 a 1886 840 a Fd(\000)1921 817 y
tx@Dict begin PutEnd  end

1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 34.1432 34.1432 neg 0.0 0.0 0
0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 0 TeXcolorgray 0 TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end

1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
 grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817
a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0.75 0 0.25  setrgbcolor  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.40001 SLW 0.75 0 0.25 
setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore end
 
@endspecial
1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@E
known { /N@E load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 1921 817
a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 0 TeXcolorgray
0.75 0 0.25 TeXcolorrgb 1847 847 a Fj(i)p Fh(=0)p 0 TeXcolorgray
0 TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
0 0 1  setrgbcolor  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq
{ pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def
EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0
 dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2.
CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 1921
817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921
817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {1  setgray true} false  /DS 2.0 2. CLW
mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921
817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921
817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1921 817 a 1921
817 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1921 817 a 1962 848 a Fj(A)1921
817 y
tx@Dict begin  PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 1921
817 a 1962 848 a Fj(B)1921 817 y
tx@Dict begin  PutEnd  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@pst@tempa
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@pst@tempb
10 {InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@pst@tempa /N@pst@tempb
InitNC { NCLine  } if end   grestore end
 1921 817
a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin /t 0.05 def LPut end PutBegin  end
 1921 817 a 1921 817
a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin RotEnd  end
 1921 817
a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin /t 0.95 def LPut end PutBegin  end
 1921 817 a 1921 817 a
tx@Dict begin NAngle  RotBegin  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin RotEnd  end
 1921 817 a 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 1921 817
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0.5 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg
0.0 0.0 0 0 /N@@M1 /N@@M2 InitNC { NCLine  } if end  gsave 0.8 SLW
1 0.5 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M1
known { /N@@M1 load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817 a 1921 817 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M2
known { /N@@M2 load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1921 817
a 1921 817 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1921 817 a 1921 817 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1921 817 a 1921 817
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1921 817 a 0 TeXcolorgray 1 0.5 0 TeXcolorrgb 1847
841 a Fj(V)1900 856 y Fi(T)10 b(h)p 0 TeXcolorgray 0
TeXcolorgray 1921 817 a
tx@Dict begin PutEnd  end
 1921 817 a 0 TeXcolorgray 2692
937 a Fc(\(b\))p 0 0 1 TeXcolorrgb 28 w(V)-7 b(ers\343o)26
b(B)p 2830 950 327 4 v 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 726 1129 a Fm(Figura)31 b(4:)40 b(An\341lise)31
b(do)f(divisor)h(resistiv)m(o)f(para)h(determinar)h Fj(V)2939
1144 y Fi(T)10 b(h)p 0 TeXcolorgray 0 TeXcolorgray 14
1417 a Fm(P)m(ara)35 b(a)g(determina\347\343o)i(de)d
Fj(V)1051 1432 y Fi(T)10 b(h)1147 1417 y Fm(,)35 b(necessitamos)g(ap)s
(enas)g(de)g(analisar)g(o)f(circuito)i(da)f(Fig.)f(4,)i(que)e(nas)h
(aulas)-128 1529 y(pr\341ticas)c(vulgarmen)m(te)i(denomin\341)m(v)-5
b(amos)32 b(p)s(or)e(divisor)h(resistiv)m(o.)14 1642
y(Usando)f(as)f(leis)h(de)h(Kirc)m(hho\033)g(para)g(analisar)f(o)g
(circuito)i(da)e(Fig.)g(4,)g(v)m(eri\034camos)i(que)e(a)g(corren)m(te)h
Fj(i)g Fm(que)f(\035ui)-128 1755 y(na)36 b(resist\352ncia)f(de)g
Fh(200)h(\012)f Fm(\351)g(igual)g(\341)g(corren)m(te)i(que)d(\035ui)i
(na)f(resist\352ncia)g(de)h Fh(1)p Fj(:)p Fh(5)f Fm(k)p
Fh(\012)p Fm(,)h(logo)f(obtemos)h(a)f(seguin)m(te)-128
1868 y(igualdade)d(a)f(partir)g(da)f(lei)h(de)f(Ohm,)p
1 0 0 TeXcolorrgb -128 1981 a(V)-8 b(ers\343o)31 b(A)p
-128 1996 360 4 v 30 w(:)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
1034 2234 a Fj(i)25 b Fh(=)1216 2172 y Fj(V)1289 2139
y Ff(0)p 1196 2213 137 4 v 1196 2296 a Fh(200)1368 2234
y(=)1578 2172 y Fj(V)1631 2187 y Fi(T)10 b(h)p 1474 2213
358 4 v 1474 2296 a Fh(1)p Fj(:)p Fh(5)21 b Fd(\002)f
Fh(10)1791 2270 y Fg(3)1867 2234 y Fd(\))25 b Fj(V)2056
2196 y Ff(0)2105 2234 y Fh(=)2321 2172 y(200)p 2211 2213
V 2211 2296 a(1)p Fj(:)p Fh(5)c Fd(\002)f Fh(10)2528
2270 y Fg(3)2578 2234 y Fj(V)2631 2249 y Fi(T)10 b(h)p
0 TeXcolorgray 0 0 1 TeXcolorrgb -128 2511 a Fm(V)-8
b(ers\343o)31 b(B)p -128 2526 356 4 v 30 w(:)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 1028 2769 a Fj(i)25 b Fh(=)1321 2708
y Fj(V)1394 2675 y Ff(0)p 1190 2748 358 4 v 1190 2832
a Fh(1)p Fj(:)p Fh(5)c Fd(\002)f Fh(10)1507 2805 y Fg(3)1583
2769 y Fh(=)1689 2708 y Fj(V)1742 2723 y Fi(T)10 b(h)p
1689 2748 149 4 v 1695 2832 a Fh(200)1873 2769 y Fd(\))25
b Fj(V)2062 2732 y Ff(0)2111 2769 y Fh(=)2217 2708 y(1)p
Fj(:)p Fh(5)c Fd(\002)f Fh(10)2534 2675 y Fg(3)p 2217
2748 358 4 v 2327 2832 a Fh(200)2584 2769 y Fj(V)2637
2784 y Fi(T)10 b(h)p 0 TeXcolorgray 14 3046 a Fm(A)28
b(partir)i(da)f(lei)g(das)f(malhas,)i(a)f(totalidade)h(das)f
(subidas/quedas)g(de)g(tens\343o)g(ao)g(longo)h(de)f(uma)g(malha)h
(t\352m)-128 3159 y(de)h(se)f(an)m(ular,)i(logo)1092
3385 y Fh(15)p Fj(:)p Fh(0)22 b Fd(\000)e Fj(V)1438 3348
y Ff(0)1482 3385 y Fd(\000)f Fj(V)1625 3400 y Fi(T)10
b(h)1746 3385 y Fh(=)25 b(0)h Fd(,)f Fj(V)2103 3348 y
Ff(0)2151 3385 y Fh(=)g(15)p Fj(:)p Fh(0)d Fd(\000)e
Fj(V)2573 3400 y Fi(T)10 b(h)14 3549 y Fm(Igualando)31
b(a)f(express\343o)h(an)m(terior)h(com)e(a)h(obtida)g(a)f(partir)h(da)g
(lei)g(dos)f(n\363s,)p 1 0 0 TeXcolorrgb -128 3662 a(V)-8
b(ers\343o)31 b(A)p -128 3677 360 4 v 30 w(:)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 194 3940 a Fh(200)p 83 3980 358 4 v
83 4064 a(1)p Fj(:)p Fh(5)22 b Fd(\002)e Fh(10)401 4037
y Fg(3)451 4001 y Fj(V)504 4016 y Fi(T)10 b(h)625 4001
y Fh(=)25 b(15)p Fj(:)p Fh(0)d Fd(\000)e Fj(V)1047 4016
y Fi(T)10 b(h)1168 4001 y Fd(,)1404 3940 y Fh(200)p 1294
3980 V 1294 4064 a(1)p Fj(:)p Fh(5)21 b Fd(\002)f Fh(10)1611
4037 y Fg(3)1661 4001 y Fj(V)1714 4016 y Fi(T)10 b(h)1830
4001 y Fh(+)20 b Fj(V)1974 4016 y Fi(T)10 b(h)2095 4001
y Fh(=)25 b(15)p Fj(:)p Fh(0)i Fd(,)2494 3873 y Fb(\024)2663
3940 y Fh(200)p 2552 3980 V 2552 4064 a(1)p Fj(:)p Fh(5)22
b Fd(\002)d Fh(10)2869 4037 y Fg(3)2940 4001 y Fh(+)h(1)3076
3873 y Fb(\025)3139 4001 y Fj(V)3192 4016 y Fi(T)10 b(h)3313
4001 y Fh(=)25 b(15)p Fj(:)p Fh(0)i Fd(,)p 0 TeXcolorgray
1 0 0 TeXcolorrgb 116 4483 a Fh(200)21 b(+)f(1)p Fj(:)p
Fh(5)h Fd(\002)f Fh(10)680 4450 y Fg(3)p 116 4524 606
4 v 239 4607 a Fh(1)p Fj(:)p Fh(5)i Fd(\002)e Fh(10)557
4581 y Fg(3)731 4545 y Fj(V)784 4560 y Fi(T)10 b(h)905
4545 y Fh(=)25 b(15)p Fj(:)p Fh(0)h Fd(,)g Fj(V)1357
4560 y Fi(T)10 b(h)1478 4545 y Fh(=)24 b(15)p Fj(:)p
Fh(0)1869 4483 y(1)p Fj(:)p Fh(5)d Fd(\002)f Fh(10)2186
4450 y Fg(3)p 1743 4524 V 1743 4607 a Fh(200)k(+)c(1)p
Fj(:)p Fh(5)h Fd(\002)f Fh(10)2310 4581 y Fg(3)2385 4545
y Fd(,)26 b Fj(V)2555 4560 y Fi(T)10 b(h)2676 4545 y
Fh(=)2781 4483 y(225)p 2781 4524 137 4 v 2804 4607 a(17)2953
4545 y Fd(\))53 b Fj(V)3150 4560 y Fi(T)10 b(h)3271 4545
y Fd(\031)25 b Fh(13)p Fj(:)p Fh(2)32 b Fm(V)p 3069 4457
586 4 v 3069 4586 4 131 v 3652 4586 V 3069 4588 586 4
v 0 TeXcolorgray 0 0 1 TeXcolorrgb -128 4856 a(V)-8 b(ers\343o)31
b(B)p -128 4871 356 4 v 30 w(:)p 0 TeXcolorgray 0 0 1
TeXcolorrgb 83 5139 a Fh(1)p Fj(:)p Fh(5)22 b Fd(\002)e
Fh(10)401 5107 y Fg(3)p 83 5180 358 4 v 194 5263 a Fh(200)451
5201 y Fj(V)504 5216 y Fi(T)10 b(h)625 5201 y Fh(=)25
b(15)p Fj(:)p Fh(0)d Fd(\000)e Fj(V)1047 5216 y Fi(T)10
b(h)1168 5201 y Fd(,)1294 5139 y Fh(1)p Fj(:)p Fh(5)21
b Fd(\002)f Fh(10)1611 5107 y Fg(3)p 1294 5180 V 1404
5263 a Fh(200)1661 5201 y Fj(V)1714 5216 y Fi(T)10 b(h)1830
5201 y Fh(+)20 b Fj(V)1974 5216 y Fi(T)10 b(h)2095 5201
y Fh(=)25 b(15)p Fj(:)p Fh(0)i Fd(,)2494 5073 y Fb(\024)2552
5139 y Fh(1)p Fj(:)p Fh(5)22 b Fd(\002)d Fh(10)2869 5107
y Fg(3)p 2552 5180 V 2663 5263 a Fh(200)2940 5201 y(+)h(1)3076
5073 y Fb(\025)3139 5201 y Fj(V)3192 5216 y Fi(T)10 b(h)3313
5201 y Fh(=)25 b(15)p Fj(:)p Fh(0)i Fd(,)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 138 5683 a Fh(200)22 b(+)e(1)p Fj(:)p
Fh(5)h Fd(\002)f Fh(10)703 5650 y Fg(3)p 138 5723 606
4 v 373 5807 a Fh(200)753 5744 y Fj(V)806 5759 y Fi(T)10
b(h)927 5744 y Fh(=)25 b(15)p Fj(:)p Fh(0)i Fd(,)e Fj(V)1379
5759 y Fi(T)10 b(h)1500 5744 y Fh(=)25 b(15)p Fj(:)p
Fh(0)2002 5683 y(200)p 1766 5723 V 1766 5807 a(200)e(+)d(1)p
Fj(:)p Fh(5)i Fd(\002)e Fh(10)2333 5780 y Fg(3)2408 5744
y Fd(,)25 b Fj(V)2577 5759 y Fi(T)10 b(h)2698 5744 y
Fh(=)2804 5683 y(30)p 2804 5723 91 4 v 2804 5807 a(17)2930
5744 y Fd(\))54 b Fj(V)3128 5759 y Fi(T)10 b(h)3249 5744
y Fd(\031)25 b Fh(1)p Fj(:)p Fh(76)31 b Fm(V)p 3046 5657
586 4 v 3046 5786 4 131 v 3629 5786 V 3046 5788 586 4
v 0 TeXcolorgray 0 TeXcolorgray 1858 6192 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 286 581 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 286 581 a 286 581
a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 286 581
a 286 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581 a 286 581 a
tx@Dict begin NAngle  RotBegin  end
 286
581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin RotEnd  end
 286 581 a 286 581
a
tx@Dict begin PutEnd  end
 286 581 a 286 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581 a 286
581 a
tx@Dict begin NAngle  RotBegin  end
 286 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ -8.5359 14.22636 -8.5359 -14.22636    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ -2.84544 7.11317 -2.84544 -7.11317    /Lineto /lineto load def
0  setlinejoin false Line  gsave 2.40001 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 2.84544 14.22636 2.84544 -14.22636    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 1.2 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 8.5359 7.11317 8.5359 -7.11317    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 2.40001 SLW 1 0 0  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
286 581 a
tx@Dict begin  tx@NodeDict begin {-8.5359 0.0 } false /N@dipole@1 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {8.5359 0.0 } false /N@dipole@2 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin RotEnd  end
 286
581 a 286 581 a
tx@Dict begin PutEnd  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -34.1432 -34.1432 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 286 581 a 286 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286
581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581 a 1 0 0 TeXcolorrgb 156 612 a Fh(13)p Fj(:)p
Fh(2)32 b Fm(V)p 0 TeXcolorgray 286 581 a
tx@Dict begin PutEnd  end
 286 581 a 286
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 286 581
a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 286
581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 286 581 a 286 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581
a 286 581 a
tx@Dict begin NAngle  RotBegin  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin RotEnd  end
 286
581 a 286 581 a
tx@Dict begin PutEnd  end
 286 581 a 286 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286 581
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581 a 286 581 a
tx@Dict begin NAngle  RotBegin  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286
581 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 1 0 0  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial
286 581 a
tx@Dict begin RotEnd  end
 286 581 a 286 581 a
tx@Dict begin PutEnd  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286
581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 286 581 a 286 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 286 581 a 1 0 0 TeXcolorrgb 170
612 a Fh(276)f(\012)p 0 TeXcolorgray 286 581 a
tx@Dict begin PutEnd  end
 286 581
a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 286
581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581
a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 286 581
a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 286 581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 286
581 a 286 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 286 581 a 286 581 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 286 581 a 286 581
a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 286 581 a 327 612 a Fj(A)286 581 y
tx@Dict begin  PutEnd  end
 286 581 a 286 581
a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 286 581 a 286 581 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 286 581 a 327 612 a Fj(B)286 581
y
tx@Dict begin  PutEnd  end
 286 581 a 0 TeXcolorgray 644 701 a Fc(\(a\))p 1 0 0
TeXcolorrgb 28 w(V)-7 b(ers\343o)26 b(A)p 778 714 331
4 v 0 TeXcolorgray 0 TeXcolorgray 2334 581 a
tx@Dict begin  tx@NodeDict begin {28.45274 0.0 } false /N@A 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin  tx@NodeDict begin {28.45274 85.35823 } false /N@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@b 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2334 581 a 2334 581
a
tx@Dict begin  tx@NodeDict begin {113.81097 85.35823 } false /N@a 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 2334 581 a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334 581
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334 581 a 2334 581 a
tx@Dict begin NAngle  RotBegin  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin RotEnd  end
 2334 581 a 2334 581 a
tx@Dict begin PutEnd  end
 2334 581 a 2334 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334 581 a 2334 581 a
tx@Dict begin NAngle  RotBegin  end
 2334 581
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ -8.5359 14.22636 -8.5359 -14.22636    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ -2.84544 7.11317 -2.84544 -7.11317    /Lineto /lineto load def
0  setlinejoin false Line  gsave 2.40001 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def
 [ 2.84544 14.22636 2.84544 -14.22636    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 1.2 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 2.40001 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  [ 8.5359 7.11317 8.5359 -7.11317    /Lineto /lineto load def 0
 setlinejoin false Line  gsave 2.40001 SLW 0 0 1  setrgbcolor  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 2334 581 a
tx@Dict begin  tx@NodeDict begin {-8.5359 0.0 } false /N@dipole@1 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334
581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {8.5359 0.0 } false /N@dipole@2 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin RotEnd  end
 2334 581 a 2334
581 a
tx@Dict begin PutEnd  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334
581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin -34.1432 -34.1432 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 2334 581 a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334
581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334 581 a 0 0 1 TeXcolorrgb 2204 612 a Fh(1)p
Fj(:)p Fh(76)32 b Fm(V)p 0 TeXcolorgray 2334 581 a
tx@Dict begin PutEnd  end
 2334
581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334
581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334
581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334
581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 2334 581 a 2334
581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334 581 a 2334 581 a
tx@Dict begin NAngle  RotBegin  end
 2334
581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin RotEnd  end
 2334 581 a 2334
581 a
tx@Dict begin PutEnd  end
 2334 581 a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334
581 a 2334 581 a
tx@Dict begin NAngle  RotBegin  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {-21.33955 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334
581 a
tx@Dict begin  tx@NodeDict begin {21.33955 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  -21.33955 0.0
T 3 { gsave  /ArrowA { moveto } def /ArrowB { } def  gsave 1.2 SLW
0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { } def  [ 14.22636
0.0 10.66977 -7.11317 3.55658 7.11317 0.0 0.0    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 1.2 SLW 0 0 1  setrgbcolor  1.
.setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore grestore
grestore 14.22636 0.0 T } repeat end
 
@endspecial
2334 581 a
tx@Dict begin RotEnd  end
 2334 581 a 2334 581 a
tx@Dict begin PutEnd  end
 2334 581 a 2334 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { }
def  /NCLW CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0
0 0 /N@@@A /N@@@B InitNC { NCLine  } if end   grestore end
 2334 581
a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 2334 581 a 0 0 1 TeXcolorrgb
2218 612 a Fh(646)f(\012)p 0 TeXcolorgray 2334 581 a
tx@Dict begin PutEnd  end

2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0
neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore  grestore end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@a
known { /N@a load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 2334 581 a 2334 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581
a 2334 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@b
known { /N@b load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 2334 581 a 2334 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 2334 581 a 2334 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 2334 581 a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 2334 581 a 2334 581 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@a known { /N@a load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 2334 581
a 2375 612 a Fj(A)2334 581 y
tx@Dict begin  PutEnd  end
 2334 581 a 2334 581 a
tx@Dict begin  gsave STV CP T /ps@refangle 0  def grestore  end
 2334
581 a 2334 581 a
tx@Dict begin { tx@NodeDict begin tx@NodeDict /N@b known { /N@b load
GetCenter } { 0 0 } ifelse end } PutCoor PutBegin  end
 2334 581 a 2375 612 a Fj(B)2334 581
y
tx@Dict begin  PutEnd  end
 2334 581 a 0 TeXcolorgray 2692 701 a Fc(\(b\))p 0 0 1
TeXcolorrgb 28 w(V)-7 b(ers\343o)26 b(B)p 2830 714 327
4 v 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 796
893 a Fm(Figura)31 b(5:)41 b(Circuitos)31 b(equiv)-5
b(alen)m(tes)31 b(aos)f(circuitos)h(originais.)p 0 TeXcolorgray
0 TeXcolorgray 14 1184 a(O)f(circuito)h(equiv)-5 b(alen)m(te)32
b(de)f(Th\351v)m(enin)g(do)g(original)g(ser\341)g(en)m(t\343o)g(o)g
(represen)m(tado)h(na)f(Fig.)f(5.)-128 1410 y Fl(3\))35
b(Bobinas)f(de)h(Helmholtz)14 1523 y(a\))3380 b Fm([)p
Fk(3)32 b(valor)-5 b(es)7 b Fm(])14 1635 y(O)33 b(efeito)i(de)f(Hall)f
(consiste)h(na)g(pro)s(du\347\343o)h(de)f(uma)h(diferen\347a)f(de)g(p)s
(otencial)h(\(T)-8 b(ens\343o)35 b(de)f(Hall\))g(atra)m(v)m(\351s)h(de)
-128 1748 y(um)28 b(condutor)h(el\351trico,)g(geralmen)m(te)h(um)e
(semicondutor,)i(transv)m(ersal)e(\340)f(corren)m(te)j(el\351trica)e
(no)g(condutor)h(e)e(a)h(um)-128 1861 y(camp)s(o)j(magn\351tico)h(p)s
(erp)s(endicular)g(\340)e(corren)m(te)i(\(v)m(er)f(Fig.6\).)14
1974 y(Num)20 b(semicondutor,)25 b(esta)c(corren)m(te)h(\351)f(devida)g
(aos)g(p)s(ortadores)g(de)g(carga)h(maiorit\341rios,)i(tipicamen)m(te)f
(eletr\365)s(es)-128 2087 y(\(carga)43 b(negativ)-5 b(a\))42
b(ou)f(lacunas)h(\(carga)g(p)s(ositiv)-5 b(a\).)73 b(Quando)42
b(um)g(camp)s(o)g(magn\351tico)g(est\341)g(presen)m(te)g(e)f(n\343o)h
(\351)-128 2200 y(paralelo)f(\340)e(dire\347\343o)h(de)g(mo)m(vimen)m
(to)h(dos)e(p)s(ortadores)h(de)f(carga,)j(estes)d(sofrem)g(a)h
(a\347\343o)f(de)h(uma)f(for\347a)h(\(for\347a)-128 2313
y(de)33 b(Loren)m(tz\).)48 b(Na)32 b(aus\352ncia)h(de)f(tal)h(camp)s(o)
f(magn\351tico,)i(os)e(p)s(ortadores)h(de)f(carga)h(\035uiriam)h(apro)m
(ximadamen)m(te)-128 2426 y(em)c(tra)5 b(jet\363ria)29
b(retil\355nea.)42 b(Con)m(tudo,)31 b(quando)e(um)g(camp)s(o)g
(magn\351tico)i(com)e(uma)g(comp)s(onen)m(te)i(p)s(erp)s(endicular)f
(\351)-128 2539 y(aplicado,)j(a)e(sua)f(tra)5 b(jet\363ria)32
b(tende)g(a)e(curv)-5 b(ar)32 b(de)f(mo)s(do)g(que)f(as)h(cargas)g
(come\347am)h(a)f(acum)m(ular)i(n)m(uma)f(das)e(faces)-128
2652 y(do)i(material.)44 b(P)m(or)32 b(consequ\352ncia,)g(cargas)g(de)f
(sinal)g(op)s(osto)g(acum)m(ular\343o)i(na)f(face)f(op)s(osta.)42
b(O)31 b(resultado)h(\351)f(uma)-128 2765 y(distribui\347\343o)40
b(assim\351trica)e(de)h(densidade)g(de)f(carga)g(ao)h(longo)f(do)g
(elemen)m(to)i(do)e(condutor,)k(sim)m(ultaneamen)m(te)-128
2877 y(p)s(erp)s(endicular)h(\340)f(corren)m(te)h(de)e(p)s(ortadores)h
(de)g(carga)g(e)g(do)f(camp)s(o)h(magn\351tico)h(aplicado.)75
b(A)41 b(separa\347\343o)i(de)-128 2990 y(cargas)32 b(estab)s(elece)g
(um)g(camp)s(o)g(el\351trico)g(que)f(se)g(op)s(\365)s(e)g(\340)h(ev)m
(olu\347\343o)g(da)g(migra\347\343o)g(de)g(carga,)h(logo)e(em)h
(equil\355brio)-128 3103 y(uma)40 b(diferen\347a)g(de)f(p)s(otencial)h
(el\351trico)g(\351)f(estab)s(elecida)h(desde)f(que)g(se)f(man)m(tenha)
j(o)e(\035uxo)g(de)g(p)s(ortadores)h(de)-128 3216 y(carga.)58
b(Esta)36 b(diferen\347a)h(de)f(p)s(otencial)h(\351)e(prop)s(orcional)j
(\340)e(comp)s(onen)m(te)h(p)s(erp)s(endicular)g(do)f(camp)s(o)g
(magn\351tico)-128 3329 y(aplicado.)14 3442 y Fl(b\))3298
b Fm([)p Fk(2,5)32 b(valor)-5 b(es)7 b Fm(])14 3555 y(A)25
b(partir)i(dos)f(v)-5 b(alores)26 b(exp)s(erimen)m(tais)i(fornecidos)e
(e)h(usando)f(a)g(express\343o)g(do)h(camp)s(o)f(magn\351tico)i(no)e
(in)m(terior)-128 3668 y(do)j(solenoide)g Fj(B)450 3682
y Fi(S)501 3668 y Fm(,)g(a)f(represen)m(ta\347\343o)i(gr\341\034ca)g
(da)e(tens\343o)h(de)f(Hall)h Fj(V)2247 3682 y Fi(H)2342
3668 y Fm(em)g(fun\347\343o)f(de)h Fj(B)2960 3682 y Fi(S)3039
3668 y Fm(encon)m(tra-se)h(na)e(Fig.)h(7.)-128 3781 y(Notem)k(que)g(os)
f(p)s(on)m(tos)h(exp)s(erimen)m(tais)h(t\352m)f(uma)g(barra)g(de)g
(erro)g(ao)g(longo)g(de)g Fj(x)p Fm(.)47 b(Isto)32 b(dev)m(e-se)h(ao)g
(facto)f(de)h(o)-128 3894 y(camp)s(o)i(magn\351tico)h(n\343o)f(ser)f
(uma)h(medi\347\343o)g(direta)g(mas)f(sim)h(um)f(calculo)i(a)e(partir)h
(da)f(corren)m(te)j(efetiv)-5 b(amen)m(te)-128 4007 y(medida.)57
b(Este)36 b(c\341lculo)g(est\341)f(sujeito)h(a)f(uma)h(incerteza)h(que)
e(re\035ete)h(assim)f(as)g(barras)h(de)f(erro)h(represen)m(tadas.)-128
4120 y(Este)31 b(asp)s(eto)f(\351)h(puramen)m(te)h(op)s(cional,)f
(n\343o)g(sendo)g(exigida)g(aquando)g(da)f(realiza\347\343o)i(do)f
(relat\363rio)g(individual.)14 4232 y(P)m(ara)i(a)f(calibra\347\343o)i
(dev)m(er\343o)f(recordar)g(o)g(\034nal)f(da)h(resp)s(osta)e(\340)i
(al\355nea)g(an)m(terior.)47 b(O)32 b(ob)5 b(jetiv)m(o)33
b(da)f(calibra\347\343o)-128 4345 y(da)k(sonda)f(\351)g(determinar)h(a)
f(constan)m(te)h(de)f(prop)s(orcionalidade)j(en)m(tre)e(o)f(camp)s(o)g
(magn\351tico)h Fj(B)3271 4359 y Fi(S)3357 4345 y Fm(e)f(a)g(tens\343o)
g(de)-128 4458 y(Hall)c Fj(V)119 4472 y Fi(H)186 4458
y Fm(.)1650 4571 y Fj(B)1719 4585 y Fi(S)1795 4571 y
Fh(=)25 b Fj(C)1956 4585 y Fi(c)1991 4571 y Fj(V)2044
4585 y Fi(H)-128 4738 y Fm(Como)f(p)s(o)s(dem)f(v)m(eri\034car)h
(n\343o)f(p)s(o)s(demos)g(obter)g(a)g(constan)m(te)h(de)f
(calibra\347\343o)i Fj(C)2578 4752 y Fi(c)2635 4738 y
Fm(aplicando)f(diretamen)m(te)i(o)c(m\351to)s(do)-128
4851 y(dos)31 b(m\355nimos)g(desvios)f(quadr\341ticos)h(\(MMDQ\))f(dos)
g(dados)h(apresen)m(tados)h(na)e(Fig.)h(7.)14 4964 y(Esta)f(era)h(uma)g
(das)f("rasteiras")h(presen)m(tes)g(do)g(en)m(unciado!)p
14 4996 2109 4 v 14 5077 a(Mas)20 b(se)h(\034zerem)h(corresp)s(onder)h
Fj(V)1177 5091 y Fi(H)1265 5077 y Fm(\340)e(v)-5 b(ari\341)m(v)m(el)22
b Fj(x)p Fm(,)h Fj(B)1822 5091 y Fi(S)1894 5077 y Fm(\340)e(v)-5
b(ari\341)m(v)m(el)23 b Fj(y)g Fm(e)f(apro)m(ximarem)h(os)e(v)-5
b(alores)21 b(exp)s(erimen)m(tais)-128 5190 y(a)29 b(uma)h(reta)f(do)h
(tip)s(o)f Fj(y)f Fh(=)d Fj(mx)17 b Fh(+)g Fj(b)29 b
Fm(p)s(elo)g(MMDQ,)g(rapidamen)m(te)i(obtemos)f(a)f(igualdade)h
Fj(C)3085 5204 y Fi(c)3137 5190 y Fd(\006)17 b Fh(\001)p
Fj(C)3366 5204 y Fi(c)3426 5190 y Fh(=)25 b Fj(m)17 b
Fd(\006)g Fh(\001)p Fj(m)p Fm(.)14 5303 y(Em)31 b(resultado)g(do)f
(MMDQ,)h(obteriam)g(os)f(seguin)m(tes)h(par\342metros:)993
5516 y Fj(m)20 b Fd(\006)g Fh(\001)p Fj(m)25 b Fh(=)53
b Fj(C)1554 5530 y Fi(c)1609 5516 y Fd(\006)20 b Fh(\001)p
Fj(C)1841 5530 y Fi(c)1900 5516 y Fh(=)25 b(38)p Fj(:)p
Fh(2)d Fd(\006)e Fh(0)p Fj(:)p Fh(2)31 b(\()p Fm(mT/V)q
Fh(\))p 1461 5423 1308 4 v 1461 5566 4 145 v 2764 5566
V 1461 5568 1308 4 v 1358 5735 a Fj(b)21 b Fd(\006)f
Fh(\001)p Fj(b)25 b Fh(=)g(34)p Fj(:)p Fh(5)c Fd(\006)f
Fh(11)p Fj(:)p Fh(2)32 b(\()p Fj(\026)p Fm(V)p Fh(\))1561
5902 y Fj(r)1605 5864 y Fg(2)1669 5902 y Fh(=)25 b(0)p
Fj(:)p Fh(99967692)p 0 TeXcolorgray 1858 6192 a Fm(4)p
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 1644 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 99.5846 56.90549 -128.03734
56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 99.5846 -85.35823 99.5846
56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -128.03734 56.90549 -128.03734
-85.35823    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 99.5846 -85.35823 -128.03734
-85.35823    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -99.5846 85.35823 -128.03734
56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -99.5846 -56.90549 -128.03734
-85.35823    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -99.5846 85.35823 -99.5846
-56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 -56.90549 -99.5846
-56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 -56.90549 99.5846
-85.35823    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 85.35823 99.5846
56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 85.35823 128.03734
-56.90549    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 85.35823 -99.5846
85.35823    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ -28.45274 0.0 -71.13185 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ -28.45274 42.67911 -68.2864 2.84544    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  moveto } def /ArrowB { BeginArrow 1.
 1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 113.81097 42.67911 73.9773 2.84544    /Lineto /lineto load
def 0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1644 581 a
tx@Dict begin { -28.45274 -14.22636 } PutCoor PutBegin  end
 1644
581 a 1599 610 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray    10.95021  2 div 8.73184  1.7839  add 2 div 2
copy 1.7839  sub 4 2 roll Pyth 3.0 add  CLW 2 div add 0 360 arc closepath
end
 
@endspecial
0 0 1 TeXcolorrgb -39 x Fd(\000)-71 b(!)1602 610 y Fj(v)1646
625 y Fi(d)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ -71.13185 42.67911 -71.13185 0.0    /Lineto
/lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1644 581 a
tx@Dict begin { -128.03734 42.67911 } PutCoor PutBegin  end
 1644 581 a 1311 620
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray  0.3 true 3.0 neg 5.12917 neg 83.23824 14.49976
.5 Frame  gsave 1  setgray  0.85 .setopacityalpha  fill  grestore end
 
@endspecial 0 0 1 TeXcolorrgb
-62 x Fd(\000)-24 b(!)1311 620 y Fj(F)1369 634 y Fi(M)1474
620 y Fh(=)25 b(+)p Fj(q)1685 581 y Fd(\000)-71 b(!)1688
620 y Fj(v)1732 635 y Fi(d)1795 620 y Fd(\002)1886 558
y(\000)g(!)1895 620 y Fj(B)p 0 TeXcolorgray 1644 581
a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ -71.13185 -42.67911 -71.13185 0.0    /Lineto
/lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 0 0 1  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1644
581 a
tx@Dict begin { -113.81097 -42.67911 } PutCoor PutBegin  end
 1644 581 a 1422 620 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray  0.3 true 3.0 neg 5.12917 neg 56.56723 14.49976
.5 Frame  gsave 1  setgray  0.85 .setopacityalpha  fill  grestore end


@endspecial 0 0 1 TeXcolorrgb -62 x Fd(\000)-44 b(!)1422
620 y Fj(F)1480 634 y Fi(E)1565 620 y Fh(=)25 b(+)p Fj(q)1776
558 y Fd(\000)-71 b(!)1786 620 y Fj(E)p 0 TeXcolorgray
1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 28.45274 0.0 71.13185 0.0    /Lineto /lineto
load def 0  setlinejoin false Line  gsave 2.0 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial
1644 581 a
tx@Dict begin { 28.45274 -14.22636 } PutCoor PutBegin  end
 1644 581 a 1599 610 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray    10.95021  2 div 8.73184  1.7839  add 2 div 2
copy 1.7839  sub 4 2 roll Pyth 3.0 add  CLW 2 div add 0 360 arc closepath
end


@endspecial 1 0 0 TeXcolorrgb -39 x Fd(\000)g(!)1602
610 y Fj(v)1646 625 y Fi(d)p 0 TeXcolorgray 1644 581
a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 71.13185 42.67911 71.13185 0.0    /Lineto
/lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1644
581 a
tx@Dict begin { 128.03734 42.67911 } PutCoor PutBegin  end
 1644 581 a 1311 620 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray  0.3 true 3.0 neg 5.12917 neg 83.23824 14.49976
.5 Frame  gsave 1  setgray  0.85 .setopacityalpha  fill  grestore end


@endspecial 1 0 0 TeXcolorrgb -62 x Fd(\000)-24 b(!)1311
620 y Fj(F)1369 634 y Fi(M)1474 620 y Fh(=)25 b Fd(\000)p
Fj(q)1685 581 y Fd(\000)-71 b(!)1688 620 y Fj(v)1732
635 y Fi(d)1795 620 y Fd(\002)1886 558 y(\000)g(!)1895
620 y Fj(B)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 71.13185 -42.67911 71.13185 0.0    /Lineto
/lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
end
 
@endspecial 1644 581 a
tx@Dict begin { 113.81097 -42.67911 } PutCoor PutBegin  end
 1644 581 a 1422 620
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray  0.3 true 3.0 neg 5.12917 neg 56.56723 14.49976
.5 Frame  gsave 1  setgray  0.85 .setopacityalpha  fill  grestore end
 
@endspecial 1 0 0 TeXcolorrgb
-62 x Fd(\000)-44 b(!)1422 620 y Fj(F)1480 634 y Fi(E)1565
620 y Fh(=)25 b Fd(\000)p Fj(q)1776 558 y Fd(\000)-71
b(!)1786 620 y Fj(E)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644
581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ -14.22636 42.67911 -14.22636 0.0 -56.90549 0.0 -71.13185
0.0   false  OpenBezier  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.0  3.0  0.0  0.0 ] 1 DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 14.22636 42.67911 14.22636 0.0 56.90549 0.0 71.13185 0.0
  false  OpenBezier  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinecap [  5.0  3.0  0.0  0.0 ] 1 DashLine  grestore end
 
@endspecial 1644 581 a
tx@Dict begin { 0.0 17.07181 } PutCoor PutBegin  end
 1644 581 a 1407 604
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.0 SLW 1  setgray  0.3 true 3.0 neg 13.8625 neg 60.07024 19.33748
.5 Frame  gsave 1  setgray  0.85 .setopacityalpha  fill  grestore end
 
@endspecial 1457 547 a Fm(tra)5
b(jet\363ria)1526 660 y(inicial)1644 581 y
tx@Dict begin  PutEnd  end
 1644 581 a
1644 581 a
tx@Dict begin { -71.13185 0.0 } PutCoor PutBegin  end
 1644 581 a 1609 604 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0 0 1  setrgbcolor    8.5167  2 div 6.3875  0.9125  add 2
div 2 copy 0.9125  sub 4 2 roll Pyth 3.0 add  CLW 2 div add 0 360 arc
closepath gsave 1  setgray  0.85 .setopacityalpha  fill  grestore gsave
0.8 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end


@endspecial 0 0 1 TeXcolorrgb Fh(+)p 0 TeXcolorgray
1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin { 71.13185 0.0 } PutCoor PutBegin  end
 1644 581 a 1609 604
a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 1 0 0  setrgbcolor    8.5167  2 div 6.3875  0.9125  add 2
div 2 copy 0.9125  sub 4 2 roll Pyth 3.0 add  CLW 2 div add 0 360 arc
closepath gsave 1  setgray  0.85 .setopacityalpha  fill  grestore gsave
0.8 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial 1 0 0 TeXcolorrgb
Fd(\000)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a 0 0 1
TeXcolorrgb 782 13 a Fh(+)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
47 w(+)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 47 w(+)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 47 w(+)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 47 w(+)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
48 w(+)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 47 w(+)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 782 1194 a Fd(\000)p 0
TeXcolorgray 0 0 1 TeXcolorrgb 47 w(\000)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 47 w(\000)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
47 w(\000)p 0 TeXcolorgray 0 0 1 TeXcolorrgb 47 w(\000)p
0 TeXcolorgray 0 0 1 TeXcolorrgb 48 w(\000)p 0 TeXcolorgray
0 0 1 TeXcolorrgb 47 w(\000)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
2436 13 a(\000)p 0 TeXcolorgray 1 0 0 TeXcolorrgb -190
w(\000)p 0 TeXcolorgray 1 0 0 TeXcolorrgb -189 w(\000)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -189 w(\000)p 0 TeXcolorgray
1 0 0 TeXcolorrgb -189 w(\000)p 0 TeXcolorgray 1 0 0
TeXcolorrgb -189 w(\000)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
-189 w(\000)p 0 TeXcolorgray 1 0 0 TeXcolorrgb 2436 1194
a Fh(+)p 0 TeXcolorgray 1 0 0 TeXcolorrgb -190 w(+)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -189 w(+)p 0 TeXcolorgray
1 0 0 TeXcolorrgb -189 w(+)p 0 TeXcolorgray 1 0 0 TeXcolorrgb
-189 w(+)p 0 TeXcolorgray 1 0 0 TeXcolorrgb -189 w(+)p
0 TeXcolorgray 1 0 0 TeXcolorrgb -189 w(+)p 0 TeXcolorgray
1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ -42.67911 -56.90549 -42.67911 -14.22636
   /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1644
581 a
tx@Dict begin { -28.45274 -42.67911 } PutCoor PutBegin  end
 1644 581 a 0 0 1 TeXcolorrgb 1599 567 a Fd(\000)-71
b(!)1608 629 y Fj(E)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644
581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto } def /ArrowB
{ BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  [ 42.67911 -14.22636 42.67911 -56.90549  
 /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8 SLW
1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial 1644 581
a
tx@Dict begin { 56.90549 -42.67911 } PutCoor PutBegin  end
 1644 581 a 1 0 0 TeXcolorrgb 1599 567 a Fd(\000)g(!)1608
629 y Fj(E)p 0 TeXcolorgray 1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { /ArrowBc
[ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale 0.15 2.0 5. RoundBracket
 EndArrow  } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  } def  [ -73.9773 -2.84544 -113.81097
-42.67911    /Lineto /lineto load def 0  setlinejoin false Line  gsave
1.0 2 mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
gsave ArrowBc ArrowB pop pop pop pop grestore  end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { /ArrowBc
[ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale 0.15 2.0 5. RoundBracket
 EndArrow  } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB
{ /ArrowBc [ 6 2 roll ] cvx def ArrowBc BeginArrow 1.  1.  scale 0.15
2.0 5. RoundBracket  EndArrow  } def  [ 68.2864 -2.84544 28.45274 -42.67911
   /Lineto /lineto load def 0  setlinejoin false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0  setgray
 1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke  grestore
gsave ArrowBc ArrowB pop pop pop pop grestore  end
 
@endspecial
1644 581 a
tx@Dict begin { -56.90549 28.45274 } PutCoor PutBegin  end
 1644 581 a 1599 567 a Fd(\000)g(!)1607 629
y Fj(B)1644 581 y
tx@Dict begin  PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {-142.26372 -128.03734 } false /N@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644
581 a
tx@Dict begin  tx@NodeDict begin {142.26372 -128.03734 } false /N@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {-142.26372 0.0 } false /N@C 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {-128.03734 0.0 } false /N@cc 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644
581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {-113.81097 0.0 } false /N@c 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {142.26372 0.0 } false /N@D 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644
581 a
tx@Dict begin  tx@NodeDict begin {113.81097 0.0 } false /N@d 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 71.13185 } false /N@f 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 99.5846 } false /N@F 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644
581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {184.94283 99.5846 } false /N@G 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 -71.13185 } false /N@h 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644
581 a
tx@Dict begin  tx@NodeDict begin {0.0 -85.35823 } false /N@hh 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 -99.5846 } false /N@H 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {184.94283 -99.5846 } false /N@I 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644
581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644
581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644
581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@dipole@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644
581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644
581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a 1644
581 a
tx@Dict begin  tx@NodeDict begin {-14.22636 0.0 } false /N@dipole@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {14.22636 0.0 } false /N@dipole@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 1.2 SLW 0  setgray   0.0 0.0 14.22636 0 CLW mul sub 0 360 arc closepath
 gsave 1.2 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0 
setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  1.6 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 9.95863 0.0 -9.95863 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 1.6 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial
1644 581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 28.45274 28.45274 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1644 581
a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581 a 1590 605
a Fj(I)1630 619 y Fi(H)1644 581 y
tx@Dict begin PutEnd  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@1
known { /N@dipole@1 load GetCenter } { 0 0 } ifelse end } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@dipole@2
known { /N@dipole@2 load GetCenter } { 0 0 } ifelse end } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto
} def /ArrowB { } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow 1.
 1.  scale 2 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC { NCLine  } if end  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial 1644 581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@A
known { /N@A load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581
a 0 TeXcolorgray 0 TeXcolorgray 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a
1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  2.40001 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 2.84544 0.0 -2.84544 0.0    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 2.40001 SLW 0  setgray  1. .setopacityalpha   0 
setlinejoin 0  setlinecap stroke  grestore end


@endspecial 1644 581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@B
known { /N@B load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 14.22636 14.22636 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581
a 0 TeXcolorgray 0 TeXcolorgray 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a
1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@cc
known { /N@cc load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@c
known { /N@c load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@cc
known { /N@cc load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@c
known { /N@c load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore
 grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS
2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2
div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine  } if end
  grestore end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@hh
known { /N@hh load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@h
known { /N@h load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@hh
known { /N@hh load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@h
known { /N@h load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinecap [  5.0  3.0  0.0  0.0 ] 0 0 add  DashLine  grestore
 grestore end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS
2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8 SLW 0  setgray
 /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.  scale 0.0  dup
0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2
div def EndDot  EndArrow  } def  /NCLW CLW def tx@NodeDict begin 0.0
0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine  } if end
  grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@H
known { /N@H load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@hh
known { /N@hh load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@H
known { /N@H load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@hh
known { /N@hh load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@cc
known { /N@cc load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@C
known { /N@C load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@cc
known { /N@cc load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@d
known { /N@d load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@d
known { /N@d load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@D
known { /N@D load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@f
known { /N@f load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@f
known { /N@f load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { BeginArrow 1.  1.  scale
0.0  dup 0 eq { pop }{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul
add 2 div def EndDot  EndArrow  moveto } def /ArrowB { } def  0.8 SLW
0  setgray  /ArrowA { BeginArrow 1.  1.  scale 0.0  dup 0 eq { pop
}{ SLW } ifelse {false} false  /DS 2.0 2. CLW mul add 2 div def EndDot
 EndArrow  moveto } def /ArrowB { } def  /NCLW CLW def tx@NodeDict
begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2 InitNC { NCLine
 } if end   grestore end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@G
known { /N@G load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@F
known { /N@F load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@G
known { /N@G load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@H
known { /N@H load GetCenter } { 0 0 } ifelse end } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {128.03734 -99.5846 } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@H
known { /N@H load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {128.03734 -99.5846 } false /N@@@B
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {128.03734 -99.5846 } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {156.49008 -99.5846 } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin {  /N@Inter@1 GetNode /N@Inter@2 GetNode /N@D GetNode
/N@B GetNode InterLines 28.45274 div exch 28.45274 div exch  28.45274
mul exch 28.45274 mul exch  } PutCoor PutBegin  end
 1644 581 a 1644 581
a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@@M
InitNC { NCLine  } if end   grestore end
 1644 581
a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t 0.85 def LPut end PutBegin  end
 1644 581 a 1644 581
a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin RotEnd  end
 1644 581
a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@M /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t 0.15 def LPut end PutBegin  end
 1644 581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581
a
tx@Dict begin PutEnd  end
 1644 581 a @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ tx@NodeDict
begin tx@NodeDict /N@@M1 known { /N@@M1 load GetCenter } { 0 0 } ifelse
end tx@NodeDict begin tx@NodeDict /N@Inter@1 known { /N@Inter@1 load
GetCenter } { 0 0 } ifelse end    /Lineto /lineto load def 0  setlinejoin
false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin
0  setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { } def
 0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  [ tx@NodeDict
begin tx@NodeDict /N@Inter@2 known { /N@Inter@2 load GetCenter } {
0 0 } ifelse end tx@NodeDict begin tx@NodeDict /N@@M2 known { /N@@M2
load GetCenter } { 0 0 } ifelse end    /Lineto /lineto load def 0 
setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@M1 /N@@M2 InitNC
{ yB yA sub xB xA sub Atan dup 90.  add /AngleA exch def 90.  sub 180
add /AngleB exch def 0.67  0.67  NCCurve  } if end  gsave 0.8 SLW 0
 setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap stroke
 grestore  grestore end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {156.49008 -99.5846 } false /N@Inter@1
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@I
known { /N@I load GetCenter } { 0 0 } ifelse end } false /N@Inter@2
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {156.49008 -99.5846 } false /N@@@A
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@I
known { /N@I load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@@A /N@@@B InitNC
{ NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha 
 0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true}
false  /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  0.8
SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow 1.  1.
 scale 0.0  dup 0 eq { pop }{ SLW } ifelse {1  setgray true} false
 /DS 2.0 2. CLW mul add 2 div def EndDot  EndArrow  } def  /NCLW CLW
def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@Inter@1 /N@Inter@2
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@G
known { /N@G load GetCenter } { 0 0 } ifelse end } false /N@pst@tempa
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@I
known { /N@I load GetCenter } { 0 0 } ifelse end } false /N@pst@tempb
10 {InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@pst@tempa /N@pst@tempb
InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581
a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t 0.05 def LPut end PutBegin  end
 1644 581 a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M1 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581
a
tx@Dict begin PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t 0.95 def LPut end PutBegin  end
 1644 581
a 1644 581 a
tx@Dict begin NAngle  RotBegin  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {0.0 0.0 } false /N@@M2 10 {InitPnode
} /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin RotEnd  end
 1644 581 a 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a 1644 581 a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0. 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0 0.0 0 0 /N@@M1
/N@@M2 InitNC { NCLine  } if end  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore  grestore end
 1644 581
a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M1
known { /N@@M1 load GetCenter } { 0 0 } ifelse end } false /N@@@A 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin {tx@NodeDict begin tx@NodeDict /N@@M2
known { /N@@M2 load GetCenter } { 0 0 } ifelse end } false /N@@@B 10
{InitPnode } /NodeScale {} def NewNode end  end
 1644 581 a 1644 581
a
tx@Dict begin gsave STV newpath /ArrowA { moveto } def /ArrowB { }
def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { } def  /NCLW
CLW def tx@NodeDict begin 19.91682 19.91682 neg 0.0 0.0 0 0 /N@@@A
/N@@@B InitNC { NCLine  } if end   grestore end
 1644 581 a 1644 581 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 1644 581 a 1644 581 a
tx@Dict begin  tx@NodeDict begin /t .5 def LPut end PutBegin  end
 1644 581
a 0 TeXcolorgray 1584 605 a Fj(V)1637 619 y Fi(H)p 0
TeXcolorgray 1644 581 a
tx@Dict begin PutEnd  end
 1644 581 a 0 TeXcolorgray 1013
2160 a Fm(Figura)31 b(6:)40 b(Efeito)31 b(de)f(Hall)h(n)m(um)g
(semicondutor.)p 0 TeXcolorgray 0 TeXcolorgray 14 2452
a Fl(c\))3384 b Fm([)p Fk(2)32 b(valor)-5 b(es)7 b Fm(])14
2565 y(Inicialmen)m(te)31 b(precisamos)e(de)h(obter)g(o)f(camp)s(o)g
(magn\351tico)i(pro)s(duzido)f(p)s(ela)f(b)s(obina.)41
b(P)m(ara)30 b(isso)f(recorremos)-128 2678 y(\340)i(constan)m(te)h(de)e
(calibra\347\343o)i(obtida)f(na)g(al\355nea)g(an)m(terior,)591
2882 y Fj(B)660 2896 y Fa(b)r(obina)899 2882 y Fh(=)25
b Fj(C)1060 2896 y Fi(c)1094 2882 y Fj(V)1147 2896 y
Fi(H)1240 2882 y Fd(\))g Fj(B)1425 2896 y Fa(b)r(obina)1664
2882 y Fh(=)g(38)p Fj(:)p Fh(2)d Fd(\002)e Fh(10)2123
2844 y Ff(\000)p Fg(3)2238 2882 y Fd(\002)g Fh(50)h Fd(\002)f
Fh(10)2621 2844 y Ff(\000)p Fg(3)2742 2882 y Fh(=)25
b(1)p Fj(:)p Fh(91)31 b Fm(mT)257 3175 y Fh(\001)p Fj(B)402
3189 y Fa(b)r(obina)641 3175 y Fh(=)737 3003 y Fb(s)p
828 3003 1466 4 v 44 x(\024)886 3114 y Fj(@)5 b(B)1008
3128 y Fa(b)r(obina)p 886 3154 337 4 v 977 3238 a Fj(@)g(C)1095
3252 y Fi(c)1232 3175 y Fh(\001)p Fj(C)1373 3189 y Fi(c)1407
3047 y Fb(\025)1455 3070 y Fg(2)1515 3175 y Fh(+)1606
3047 y Fb(\024)1664 3114 y Fj(@)g(B)1786 3128 y Fa(b)r(obina)p
1664 3154 V 1745 3238 a Fj(@)g(V)1851 3252 y Fi(H)2010
3175 y Fh(\001)p Fj(V)2139 3189 y Fi(H)2206 3047 y Fb(\025)2254
3070 y Fg(2)2318 3175 y Fh(=)2414 3058 y Fb(q)p 2505
3058 883 4 v 117 x Fh([)p Fj(V)2583 3189 y Fi(H)2651
3175 y Fh(\001)p Fj(C)2792 3189 y Fi(c)2826 3175 y Fh(])2851
3133 y Fg(2)2911 3175 y Fh(+)20 b([)p Fj(C)3092 3189
y Fi(c)3127 3175 y Fh(\001)p Fj(V)3256 3189 y Fi(H)3323
3175 y Fh(])3348 3133 y Fg(2)3413 3175 y Fd(\))1474 3397
y Fh(\001)p Fj(B)1619 3411 y Fa(b)r(obina)1858 3397 y
Fh(=)25 b(0)p Fj(:)p Fh(04)32 b Fm(mT)1106 3564 y Fj(B)1175
3578 y Fa(b)r(obina)1409 3564 y Fd(\006)20 b Fh(\001)p
Fj(B)1645 3578 y Fa(b)r(obina)1883 3564 y Fh(=)25 b(1)p
Fj(:)p Fh(91)d Fd(\006)e Fh(0)p Fj(:)p Fh(04)32 b(\()p
Fm(mT)q Fh(\))p 1077 3471 1606 4 v 1077 3613 4 145 v
2680 3613 V 1077 3615 1606 4 v 14 3740 a Fm(P)m(ara)39
b(determinar)g(o)e(camp)s(o)i(magn\351tico)g(pro)s(duzido)f(p)s(or)g
(uma)g(espira)g(usa-se)f(a)h(express\343o)g(fornecida.)63
b(O)-128 3853 y(m\341ximo)31 b(do)g(camp)s(o)g(o)s(corre)f(no)h(plano)g
(da)g(espira)f(\()p Fj(x)c Fh(=)f(0)p Fm(\))30 b(logo,)215
4112 y Fj(B)284 4126 y Fa(espira)494 4112 y Fh(=)600
4051 y Fj(\026)655 4065 y Fg(0)p 600 4091 95 4 v 624
4175 a Fh(2)859 4051 y Fj(I)7 b(R)976 4018 y Fg(2)p 714
4091 447 4 v 714 4195 a Fh(\()p Fj(R)819 4169 y Fg(2)879
4195 y Fh(+)20 b(0\))1050 4152 y Fg(3)p Fi(=)p Fg(2)1196
4112 y Fh(=)1301 4051 y Fj(\026)1356 4065 y Fg(0)p 1301
4091 95 4 v 1326 4175 a Fh(2)1416 4051 y Fj(I)7 b(R)1533
4018 y Fg(2)p 1416 4091 157 4 v 1439 4175 a Fj(R)1509
4148 y Fg(3)1607 4112 y Fh(=)1713 4051 y Fj(\026)1768
4065 y Fg(0)p 1713 4091 95 4 v 1737 4175 a Fh(2)1838
4051 y Fj(I)p 1827 4091 70 4 v 1827 4175 a(R)1932 4112
y Fd(\))25 b Fj(B)2117 4126 y Fa(espira)2327 4112 y Fh(=)2433
4051 y(4)p Fj(\031)f Fd(\002)c Fh(10)2735 4018 y Ff(\000)p
Fg(7)2850 4051 y Fd(\002)g Fh(0)p Fj(:)p Fh(50)p 2433
4091 670 4 v 2484 4175 a(2)g Fd(\002)g Fh(3)p Fj(:)p
Fh(5)h Fd(\002)f Fh(10)2957 4148 y Ff(\000)p Fg(2)3138
4112 y Fh(=)25 b(8)p Fj(:)p Fh(98)32 b Fj(\026)p Fm(T)342
4497 y Fh(\001)p Fj(B)487 4511 y Fa(espira)697 4497 y
Fh(=)793 4325 y Fb(s)p 884 4325 1305 4 v 44 x(\024)942
4435 y Fj(@)5 b(B)1064 4449 y Fa(espira)p 942 4476 308
4 v 1045 4559 a Fj(@)g(I)1259 4497 y Fh(\001)p Fj(I)1382
4369 y Fb(\025)1430 4391 y Fg(2)1489 4497 y Fh(+)1580
4369 y Fb(\024)1638 4435 y Fj(@)g(B)1760 4449 y Fa(espira)p
1638 4476 V 1730 4559 a Fj(@)g(R)1955 4497 y Fh(\001)p
Fj(R)2101 4369 y Fb(\025)2149 4391 y Fg(2)2213 4497 y
Fh(=)25 b Fj(\026)2364 4511 y Fg(0)2404 4325 y Fb(s)p
2495 4325 808 4 v 44 x(\024)2552 4435 y Fh(\001)p Fj(I)p
2552 4476 123 4 v 2556 4559 a Fh(2)p Fj(R)2685 4369 y
Fb(\025)2733 4391 y Fg(2)2793 4497 y Fh(+)2884 4369 y
Fb(\024)2932 4497 y Fd(\000)3013 4435 y Fj(I)7 b Fh(\001)p
Fj(R)p 3013 4476 193 4 v 3031 4559 a Fh(2)p Fj(R)3146
4533 y Fg(2)3215 4369 y Fb(\025)3263 4391 y Fg(2)3328
4497 y Fd(\))321 4829 y Fh(\001)p Fj(B)466 4843 y Fa(espira)676
4829 y Fh(=)25 b(4)p Fj(\031)f Fd(\002)c Fh(10)1074 4792
y Ff(\000)p Fg(7)1169 4663 y Fb(s)p 1260 4663 1747 4
v 38 x(\024)1521 4768 y Fh(0)p Fj(:)p Fh(01)p 1318 4809
570 4 v 1318 4892 a(2)g Fd(\002)g Fh(3)p Fj(:)p Fh(5)i
Fd(\002)e Fh(10)1792 4866 y Ff(\000)p Fg(2)1897 4701
y Fb(\025)1945 4724 y Fg(2)2004 4829 y Fh(+)2095 4701
y Fb(\024)2143 4829 y Fd(\000)2224 4768 y Fh(0)p Fj(:)p
Fh(50)i Fd(\002)e Fh(0)p Fj(:)p Fh(1)h Fd(\002)f Fh(10)2814
4742 y Ff(\000)p Fg(2)p 2224 4809 686 4 v 2275 4905 a
Fh(2)15 b(\()q(3)p Fj(:)p Fh(5)21 b Fd(\002)f Fh(10)2688
4879 y Ff(\000)p Fg(2)2783 4905 y Fh(\))2819 4862 y Fg(2)2919
4701 y Fb(\025)2967 4724 y Fg(2)3032 4829 y Fh(=)25 b(0)p
Fj(:)p Fh(31)31 b Fj(\026)p Fm(T)1145 5091 y Fj(B)1214
5105 y Fa(espira)1419 5091 y Fd(\006)20 b Fh(\001)p Fj(B)1655
5105 y Fa(espira)1865 5091 y Fh(=)25 b(8)p Fj(:)p Fh(98)c
Fd(\006)f Fh(0)p Fj(:)p Fh(31)32 b(\()p Fj(\026)p Fm(T)p
Fh(\))p 1117 4998 1528 4 v 1117 5144 4 148 v 2641 5144
V 1117 5146 1528 4 v 14 5271 a Fm(P)m(or)23 b(uma)f(quest\343o)h(se)e
(simpli\034ca\347\343o)j(v)-5 b(amos)22 b(sup)s(or)g(que)g(to)s(das)f
(as)h(espiras)g(da)h(b)s(obina)f(est\343o)g(no)h(mesmo)f(plano.)-128
5384 y(Como)35 b(o)e(camp)s(o)h(magn\351tico)i(ob)s(edece)e(ao)g
(princ\355pio)g(da)g(sobrep)s(osi\347\343o,)h(p)s(enso)f(que)f(ser\341)
h(claro)g(que)f(facilmen)m(te)-128 5496 y(obtemos)e(a)g(igualdade,)1187
5646 y Fj(B)1256 5660 y Fa(b)r(obina)1495 5646 y Fh(=)25
b Fj(nB)1715 5660 y Fa(espira)1924 5646 y Fd(,)g Fj(n)g
Fh(=)2226 5585 y Fj(B)2295 5599 y Fa(b)r(obina)p 2226
5625 283 4 v 2241 5708 a Fj(B)2310 5722 y Fa(espira)2549
5646 y Fm(,)-128 5860 y(em)31 b(que)f Fj(n)g Fm(\351)g(o)h(n)m
(\372mero)h(de)e(espiras.)p 0 TeXcolorgray 1858 6192
a(5)p 0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray -32 2503 a @beginspecial
4 @llx 1 @lly 463 @urx 345 @ury 4590 @rwi @setspecial
%%BeginDocument: figs/calibracao.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.11.2 (http://cairographics.org)
%%CreationDate: Fri Dec 27 17:47:36 2013
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 4 1 463 345
%%EndComments
%%BeginProlog
/cairo_eps_state save def
/dict_count countdictstack def
/op_count count 1 sub def
userdict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
11 dict begin
/FontType 42 def
/FontName /ArialMT def
/PaintType 0 def
/FontMatrix [ 1 0 0 1 0 0 ] def
/FontBBox [ 0 0 0 0 ] def
/Encoding 256 array def
0 1 255 { Encoding exch /.notdef put } for
Encoding 32 /space put
Encoding 40 /parenleft put
Encoding 41 /parenright put
Encoding 45 /hyphen put
Encoding 48 /zero put
Encoding 49 /one put
Encoding 50 /two put
Encoding 51 /three put
Encoding 52 /four put
Encoding 53 /five put
Encoding 54 /six put
Encoding 56 /eight put
Encoding 66 /B put
Encoding 67 /C put
Encoding 72 /H put
Encoding 77 /M put
Encoding 83 /S put
Encoding 84 /T put
Encoding 86 /V put
Encoding 97 /a put
Encoding 98 /b put
Encoding 99 /c put
Encoding 100 /d put
Encoding 101 /e put
Encoding 103 /g put
Encoding 105 /i put
Encoding 108 /l put
Encoding 109 /m put
Encoding 110 /n put
Encoding 111 /o put
Encoding 112 /p put
Encoding 114 /r put
Encoding 115 /s put
Encoding 116 /t put
Encoding 120 /x put
Encoding 227 /atilde put
Encoding 231 /ccedilla put
Encoding 233 /eacute put
Encoding 243 /oacute put
/CharStrings 40 dict dup begin
/.notdef 0 def
/zero 1 def
/two 2 def
/four 3 def
/six 4 def
/eight 5 def
/one 6 def
/five 7 def
/three 8 def
/T 9 def
/e 10 def
/n 11 def
/s 12 def
/atilde 13 def
/o 14 def
/space 15 def
/d 16 def
/H 17 def
/a 18 def
/l 19 def
/V 20 def
/parenleft 21 def
/m 22 def
/parenright 23 def
/C 24 def
/p 25 def
/M 26 def
/g 27 def
/eacute 28 def
/t 29 def
/i 30 def
/c 31 def
/S 32 def
/oacute 33 def
/B 34 def
/x 35 def
/hyphen 36 def
/r 37 def
/b 38 def
/ccedilla 39 def
end readonly def
/sfnts [
<00010000000900800003001063767420a11cd7eb00004a98000006546670676dcc79599a0000
50ec0000066e676c7966aa10d3af0000009c000049fc68656164de7154f10000575c00000036
68686561123308f40000579400000024686d7478b2f61021000057b8000000ac6c6f63610006
f97400005864000000b06d61787005860d8000005914000000207072657025d64dbf00005934
00000bbe00020100000005000500000300070000211121112521112101000400fc2003c0fc40
0500fb002004c000000000020055ffe7041105c00010001d020f400d0f0c0c0c42550f0c0b0b
425506b8ffe840110c0c425505180b0b425507100b0b42551bb8ffe8400b0b0b42550f0c0b0b
42551bb8fff440160d0d42551c060d0d42550f0c0d0d425507100d0d4255b10202435458400a
1a1e0405141e0d0d1709b8ffe8b40f0f025509b8ffe840190d0d02550911000c0f0f02550016
0c0c0255000c0d0d0255002f2b2b2bcd2f2b2bcd003fed3fed31301bb10602435458400a1a1e
0405141e0d0d1709b8fff4b40f0f065509b8ffe6b40d0d065509b8ffee40190b0b0655091100
100d0d065500100c0c065500100b0b0655002f2b2b2bcd2f2b2b2bcd003fed3fed31301bb406
2019101cb8fff0b202200bbeffe00016ffe00012ffe0000fffe0404e04068702880b880fc90e
0509070b180245134c154a19431b54135c155c19521b6b076b0b63136c156b19601b79027706
760b7a0f870698079610c918da02d606d60bdb0f1a1a1e0405141e0d0d17b8fff4b40c0c4255
17b8fff2b40b0b425517b8fff840140d0d425517730940212334300901000910090209b8fff4
b40b0b425509b8ffe8401c0d0d425509901f110c0c0c4255110e0b0b425511080d0d42551173
00b8ffc040202123342000400002000c0c0c425500080b0b425500080d0d425500901ec78b18
2b10f62b2b2b5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed3fed3130015d71005d003838
3838380138383859592b2b2b2b2b2b2b2b2b002b2b1310123633321616121510020623222726
13101633323611102623220706556bd3a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02
d30104013dac5fb3feffdafefefec3ad98b7019dfe97eff00168016aee69860000000001003c
0000040705c0001e0218b90007ffe8b40c0c425508b8fff8b40b0b425507b8ffe8b40b0b4255
08b8fff8b40d0d425507b8fff4b30d0d4255b10602435458400911100d18131306550db8fff4
b4111106550db8ffee4009101006550d1e14051eb8ffe84017131306551e1e111106551e1c0e
1006551e0c0d0d06551eb802bb400c020a1717201f10110202201f1112392fd4cd1112392fcd
002fed2b2b2b2b3fed2b2b2bc43231301bb10202435458400911100d0c121202550db8fff440
090f1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a17b8ffe8b40b
0b025517b8ffec400e0d0d02551717201f10110202201f1112392fd4cd1112392f2b2bcd002f
ed2b2b3fed2b2bc43231301b40363b053b06bb05bf06bb07c708c91c07490c590c540e6b0c64
0e7a127a138912bc12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a1c030d1e10b802a4
b34f110111b80118b50d1e1405001eb802bbb301020c0ab8fff4b40c0c42550ab8fff2b40b0b
42550ab8fff840100d0d42550a7317d30000014021233401bb0281002000100138400c11b53f
025f026f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed2b2b2b003f3c
fd3c3fedfd5de4111217390111121739870e2e2b0e7d10c40111123931300038383838013838
3838005d015d7259592b2b2b2b2b251521263736363736363534262322060727363633321615
140606070606070407fc37021725a39aefa8997b829c01b913f8d1d3f648a7c2a25c1eadad41
3c63c07ec4e5666b939c8a13cfd9eaad58aabca4886131000002001a0000041005ba000a000d
01b7b9000cfffa40ac0c0c42550d060c0c4255050c0c0c4255060c0c0c4255090c0c0c42550a
0c0c0c4255050e0b0b4255060e0b0b4255090e0b0b42550a0e0b0b425507080c0c425508080c
0c425507080b0b425508080b0b425507080d0d425508080d0d425505080d0d425506080d0d42
5509080d0d42550a080d0d425512580c680c9a0ca90cc90c054c034c0d94040312010208000c
060307050a0b0307000c0c0d0dca030414030304030d00020c0d040703bb02bb0008000201a0
400a000404000c0c00ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d
0d02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02b8ffc0400b0d14
340002100220020302b8ffe0b40d0d025502b8ffe4b60d0d065502b50eb8018cb18b182b10ec
2b2b5d2b10f62b2bf42b2b2b2b3c10e610fd3c003f3f10f43cf63c1139390111123939872e2b
047d10c40f0f0f313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d3c
2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c390c402d392b2b2b2b2b
59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b002b211121350133113315231103110102
96fd84029d93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b0000000002004dffe70415
05c0001d002a0203b90012fff0b40c0c425511b8fff0b40c0c425520b8fff4b40c0c425508b8
fff4b40c0c425527b8ffe8b40b0b425523b8ffe840170b0b425521180b0b425507180b0b4255
0e0c0d0d425508b8fff4b40d0d425506b8fff4400a0d0d425507100c0d4255b1020243545840
1f0f011f015f0103011b281e400d010d0d14051e1b05221e140d0a1e01002510b8fff440190d
0d0255101e17100f0f025517100c0c0255170c0d0d0255172f2b2b2bcd2f2bcdd4cd10c5003f
ed3fed12392f5ded10c45d31301b402d6b190144074015441944205a1254206b03640764086a
1264207408751c8508861cd608d4161107200d0d065527b8ffe0b40d0d065523b8ffe0400b0d
0d065521200d0d065507b8ffe0b42720232021b8ffe04011281e400d500d020d0d141b01d35f
000100b802684009051e1b05221e140d01b80138b200b525b8fff4b40c0c425525b8fff2b40b
0b425525b8fff840140d0d425525731040212334301001001010100210b8fff0b70c0c065510
902c0ab8013840131e0c0c0c42551e0e0b0b42551e080d0d42551eb8013940223f175f176f17
7f170417100b0b425517100c0d425517160c0c065517160d0d065517b80224b32bc78b182b10
f62b2b2b2b5ded2b2b2bed10f62b5d712bed2b2b2bf4ed003fed3fedfd5de41112392f5ded31
3001383838382b2b2b2b015d005d59012b2b2b2b2b2b2b2b2b2b002b2b010726272623220706
0607363633321215140606232200111037363332160114161633323635342623220603fbb318
2c496b564155620241bc67b4fd77d084e1fee49d89e8adddfd374f8e4e72a4a27b7aaa04530e
6a304d303eeedc6360fef7d28aed7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf00000003
0053ffe7041905c00017002300300346b9001cffe840110c0c42551a180c0c425507180c0c42
5520b8ffe840110c0c425522180c0c42552f180c0c42552db8ffe8b40c0c425529b8ffe8400b
0c0c425526180c0c425520b8ffe8400b0b0b425522180b0b42551cb8ffe8400b0b0b42551a18
0b0b425529b8ffe8b40b0b42552db8ffe840110b0b42552f180b0b425526180b0b425520b8ff
e8400b0d0d425522180d0d42551cb8ffe8400b0d0d42551a180d0d425529b8ffe8b40d0d4255
2db8ffe840100d0d42552f180d0d425526180d0d4255b10202435458b40c001b1e2eb8ffc040
17131302552e2e12211e0605281e120d1e090c0c0c025509b8fff4b60d0d0255092b0fb8fff0
b40f0f02550fb8ffe8b40b0b02550fb8ffe8b60d0d02550f1803b8fff0b41010025503b8fff0
b40f0f025503b8fff440190d0d02550324150c0b0b0255150c0c0c0255150c0d0d0255152f2b
2b2bcd2f2b2b2bcd2f2b2b2bcd2f2b2bcd003fed3fed12392f2bed393931301bb10602435458
b71e090c0c0c065509b8fff4b60d0d0655092b0fb8ffe4b40f0f06550fb8ffe4b60d0d06550f
1803b8fff0b40f0f065503b8fffc40220d0d06550324150c0c0c0655150c0d0d0655150c001b
1e2e2e12211e0605281e120d003fed3fed12392fed3939012f2b2bcd2f2b2bcd2f2b2bcd2f2b
2bcd31301b4037351601291649164926e60ce930050930017d007d017c047408710b720c750d
7a178b008a018c048608810b840c860d8d17cc11c6131222b8ffe0b21c201ab8ffe0b220202f
b8ffe0b22d2026b8ffe0401929200c001e18000c1b1e2ea02e012e12211e0605281e120d1eb8
fff4b40c0c42551eb8fff2b40b0b42551eb8fff8400a0d0d42551e73bf090109ba0267002bff
f4b40c0c42552bb8fff2b40b0b42552bb8fff840140d0d42552b730f40202334300f01000f10
0f020fb80191401932180c0c0c4255180e0b0b425518080d0d42551873b0030103b802674015
240c0c0c4255240e0b0b425524080d0d4255247315b8ffc0400e2123342015401502159031c7
8b182b10f65d2bed2b2b2bf45ded2b2b2b10f45d712bed2b2b2bf45ded2b2b2b003fed3fed12
395d2fed393901111239393130013838383838383838015d727100715959012b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b0126263534363332161514060716161514002322
0035343613141633323635342623220603141616333236353426232206016a706ce6bfc0ea6b
6d878dfef6d9d9fef69162866b6885896667883a49905381a8ad827fa7031b29986aa0dadfa0
6697292cc488bcff000101c08fc101546884835f638784fcff4d904fa68082aaa80000000001
00df000002fb05c0000a00da40440a0c0c0c4255000c0c0c42550a0e0b0b4255000e0b0b4255
0a080d0d425500080d0d425503400d11346b047f028f02990804ac0401090006050203090501
0c0201ca0a00b8ffc0400a21233430000120000100b8ffe0b41010025500b8ffea40110f0f02
55001c0c0c0255000e0d0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c
05400d0f3405b8ffc0400e212334300501200540050205190bba013c018500182b4e10e45d71
2b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f17390111393130015d005d2b012b2b2b2b
2b2b212311060607353636373302fbb441d35497e22f74047b3e7c1fae47ca5f000000010055
ffe7042105a6001e01fc4013130c0c0c4255120c0c0c42550b180c0c425509b8ffe8400b0c0c
425503180c0c425505b8ffe840170c0c4255130c0b0b4255120c0b0b425503180b0b425509b8
ffe8b40b0b425505b8ffe840170b0b4255130c0d0d4255120c0d0d42550b180d0d425505b8ff
e8b40d0d425509b8ffe8b30d0d4255b10202435458b90001ffc0400d0d0d0255011c0e0a1e15
151c12b802bb400b0f04041e1c0d0e01000718b8ffeab40f0f025518b8ffeab40d0d0255182f
2b2bcd2fcd2f003fed3fed12392ffdc410c42b31301b4029120c0d0d06550f0c0d0d06554b1a
791d8a1d9613a713c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe04010130a
15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e0e0f40150115151c12
b802bbb70f0401d340000100b801184011041e1c0d115f106f107f108f1004108007b8fff4b4
0c0c425507b8fff2b40b0b425507b8fff840140d0d4255077318402123343018010018101802
18b8fff4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000ffc0400b21
2334200040000200901fb80192b18b182b10f65d2bedf4edf4ed10f62b5d712bed2b2b2bf45d
3c003fedfd5de43fed12392f5d11392f5d10ed10e487082e2b057d10c4001112393130013838
383801715d2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1337161633323635342623220607
271321152103363332001514070623222655bd15996c82b4ad8c578c28a98e02d9fdb74f8491
c00108748df4c8fd0180108a8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e00000010056
ffe6041605c0002b01b4b603180c0c425505b8ffe8b40c0c425505b8ffe8b30d0d4255b10202
435458400b1918400d0d0255181c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a2915
1e1c041e291c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d0255262f2bcd
2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910c42b3210c42b3231301b40
28050d160d450d860d0445115711761b0352166c106a146416750d7914860d8a14891ba50d0a
052003b8ffe0400b0b0c0d0e040701230d0c01b802a4b340000100bb01180029000d0135b40c
0c150418ba02a4001902684009151e1c05041e290d12b8fff4b40c0c425512b8fff2b40b0b42
5512b8fff840140d0d425512735f206f200220180d0d0655208007b8fff4b40c0c425507b8ff
f2b40b0b425507b8fff840140d0d425507732640212334302601002610260226b8fff4b70d0d
065526902d18b80138b219d301ba01380000ffc0400b212334200040000200902cb80192b18b
182b10f65d2bedf4ed10f62b5d712bed2b2b2bf42b5ded2b2b2b003fed3fedfde41112392fed
10fd5de411123901111217393130013838015d005d017159012b2b2b13371616333236353426
2322073716333236353426232206072736363332161615140607161615140023222656b41f95
6b7fafa27d334c14120b73b8866a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987
b0827ca1149e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6000000000100300000
04ba05ba000700de401906020c0c425507020c0c425506070b0b425507070b0b425501b8fff9
b40b0b425500b8fff940110b0b425506050c0d425507050c0d425501b8fffbb40c0d425500b8
fffb40110c0d425505021e04030200080706050409b80273b320040104b80101b7062001022f
030103b80101b5010120000100b8ffe8400b1010025500080f0f025500b8fff2b40c0c025500
b8ffe2b40d0d025500b8fffcb40c0c065500b8fffeb40d0d065500b80273b308b699182b10f6
2b2b2b2b2b2b5d3c10f45d3c10fde45de6103c103c003f3f3cfd3c3130012b2b2b2b2b2b2b2b
2b2b21112135211521110213fe1d048afe1b050dadadfaf300000002004bffe8041e043e0015
001d019e40171f001c150255035d055d09550b65036b056f09650b0815b8ffe4b40d0d065511
b8ffe440520d0d06551d1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c5112
5c19521c61126d1a611c78067815f602f618100016010f0d171750166016701603161c0f9010
a010021010041b1c0a0700ba02aa0001ffc0b41010025501b8ffc0400e101006551001010195
131c040b17b8fff0b40c0c425517b8fff2b40b0b425517b8fff8b60d0d425517400db8ffdcb4
0d0d02550db8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d1a1fb8
ffc0b32526341fb8ffc0b71e2334301f011f16b8fffc405c0d0d4255163310080c0c4255100e
0b0b425510080d0d425510240740242a341f073f074f0703070c0c0c4255070c0d0d42550720
0b0b025507180c0c0255071c0d0d0255070e0b0b0655071c0c0c065507160d0d065507191e34
37182b4e10f42b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b2b4ded2b2b
2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912393130015d005d2b2b2b017172
011706062322001110003332001114072116163332360121262726232206035eba2ceeb9e9fe
ef0114dcd5010e01fce80ab285638cfdda02510c3856897ca9015617a3b4011f0103010c0128
fedefef91020afba680195864368a600000000010087000003e6043e001601b1401305030613
02a810b810e303e713f003f6130604b8fff040220b0d347910019810d018e018ff1804200814
0e1416121c05070106160d0a0d0e0c0eb8fff8b40d0d42550eb8fff2b40b0b42550eb8fff440
1f0c0c42550e2418401010025518400b0b02550b28101002550b140e0e02550bb8ffec40110d
0d02550b040c0c02550b220b0b02550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d
0d06550b0a0f0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0402c
343634b018f018027018a018b018c01804180302331516080d0d4255160e0b0b4255160c0c0c
425516250100b8fff6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500040d0d065500b8ff
c04012333634f0000100002000d000e00004004e1710f65d712b2b2b2b2b2b2b2b2b2b3cfd2b
2b2b3cf43c105d712bf65d712b2b2b2b2b2b2b2b2b2b2b2b2bed2b2b2b3c103c003f3c3f3fed
11390112393130437940160611090a080a070a0306102611060e1b010f0a121b01002b012b2b
2a81015d71002b5d71331133153633321616171615112311342626232206151187a275dd60a1
50100ab42a6b4873a7042697af45704d327dfd7302866e6d4192ccfdbc0000000001003fffe8
03b1043e003003b14013170e0b0b4255180e0b0b4255190e0b0b425528b8fff4b40c0c425527
b8fff4b40c0c425526b8fff4b40c0c425525b8fff4b40c0c425524b8fff4b40c0c425523b8ff
f4b40c0c425522b8fff4b40c0c425521b8fff4b40c0c425520b8fff4407f0c0c425504221422
3a094a094424562265227c098e098424a613ab2cc2030d09171a1817304b2cd617051b025502
021032010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426b4270f272624
27242936245a0a590b64266428742374248024930a9c0c9228972c9530a40aa90ca327a428b3
26c5261628b8fff4b40d0d065522b8fff4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d
065528b8fff4b40c0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa4022192c0b0b02551f193f
194f195f19af19cf19060f191f196f19df19041f198f190219bd02550015000002aa0001ffc0
40140b0b025510014001021001d00102000110010201b8ffc0b314163401b8ffc040100e1134
01012e5c1d6c1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe640130f0f
0655041c2e0b1f1a011a24194013183432b8ffc040350f0f025519180f0f025519180d0d0255
19160c0c025519201010065519200f0f065519100c0c065519160d0d065519160c0c425519ba
025b0007fff2b60b0b425507242ab8ffc0b51c39d02a012ab8ffe6b40c0c02552ab8ffe8b40f
0f02552ab8ffe8b40c0c06552ab8ffeab40d0d06552ab8fff4b60c0c42552a1a32b8ffc04021
272a346032c032023f3280320232100101012400180d0d025500100d0d06550020b8fff4b40d
0d025520b8fff4b41010065520b8fff4401f0f0f0655200e0b0b425520240f100b0b02550f16
0c0c02550f200d0d02550fb8fffa40260f0f02550f0e0c0c06550f0c0d0d06550f060c0c4255
0f22df00013f004f00020019313437182b4e10f45d714df42b2b2b2b2b2b2bed2b2b2b2b102b
2bed724e105d712bf62b2b2b2b2b712b4ded2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b
3fed7112392f2b2b5d71722be410fd5d71722be4111239111239011112173931304379404027
2d1e2305142c261110121013100306220d201b000928071b01052d071b011e14201b00210e23
1b0022230d0c08290a1b012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b
012b2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b01
2b2b2b1337161633323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a91537dbd5a11b00c7369
7c6a16162f1b84bf975669c67dcfd9013d1c6b7265443d2318253249814e4779281f2b487b67
18525c5237231c1d130a2433417c5c5a9f57ac000000ffff004affe8041c05aa022600120000
0107002800de00000038401e0249400d0d065549400a0a06554940191a3449400b0d347f498f
4902491cb8ffd0b4482b020147b902220029002b012b5d2b2b2b2b35000000020044ffe80427
043e000d001901bfb615180d0d065513b8ffe8b40d0d06550fb8ffe840650d0d065519180d0d
065512070a190c4706480856065908670669080834103a123a16351845104b124b1645185c05
5c0952105d125d1652186d056d0964106d126d1664187701150906050d5b035405540a5b0c6c
036505650a6c0c0a171c0407111c0b0b14b8fff2b40b0b425514b8fff4b40c0c425514b8fff8
40130d0d425514241b400d0d02551b400b0b025507b8ffea40110f0f025507180d0d02550710
0b0b025507b8fff0b40b0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c
065507b8ffc0400e2425343007010007100720070307b8fff4400a0d0d42550731df1b011bb8
ffc0406d1e2334301b011b0e080d0d42550e0c0c0c42550e0e0b0b42550e24000c0e0f025500
120d0d0255000c0c0c0255001c0b0b0255000e0b0b0655000e0d0d0655000c1010065500160c
0c065500402425341f003f0002000c0d0d4255000c0c0c4255000c0b0b425500311a3437182b
10f62b2b2b5d2b2b2b2b2b2b2b2b2bed2b2b2b10712b5df62b5d5d2b2b2b2b2b2b2b2b2b2bed
2b2b2b003fed3fed313001715d0071435c584009530553096205620904015d59002b2b2b2b13
1037363332001514060623220013141633323635342623220644a489c5db01167beb8bdffeed
b9b28786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca000000020046
ffe803df05ba0011001d01bf407c0a02040d250d340d440d053514351c5702540a5214531c67
02640565096314601cc01fd405d513dd19e513e514ef17eb19e51de01fff1f161f1f2b1a3c16
3c1a4b1a701f901f072e02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa
01f40e100115030e0b100f001b1c0b0711000a151c030b18b8fff8b40d0d425518b8fff8b70c
0c425518330100b8fff2b70b0b42550025110fb8fff8b40d0d42550fb8fff4b40c0c42550fb8
fff240270b0b42550f251010d011011011401160118011041f400b0b02551f400d0d02551112
1010025511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b0b0655110e
1010065511b8ffeeb40c0c065511b8fff8b40d0d065511b8fff840600c0c4255117412080d0d
4255120c0c0c4255120e0b0b4255122407100c0c425507100d0d4255bf07cf07df07ff07041f
073f074f0703071e0b0b025507180c0c0255071e0d0d0255070c0b0b0655070c0d0d0655071a
0c0c065507191e3450182b4e10f42b2b2b2b2b2b5d712b2b4ded2b2b2bfd2b2b2b2b2b2b2b2b
2b2b2b5d713c10ed2b2b2b10fd2b3ce42b2b003fed3f3c3fed3f3c11391112393130005d0171
5d0071213506232226263534123633321617113311011416333236353426232206033865c47f
d5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a5141020efa460212ccca
c1c6daccc4000000000100a40000052205ba000b010cb9000dffc0401613153404031e090aa0
0ad00a020a0502020b08080508b8fffeb40c0c425508b8fff2b40b0b425508b8fff640090c0d
42550820070706b8ffeeb40f0f025506b8fff2400b0d0d025506100c0c025506b8ffe0402a0b
0b065506010c0c0655065d800d010d020b020c0c42550b0e0b0b42550b0a0c0d42550b200120
000100b8ffc0400a13153400201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8ff
fa400b0c0c025500080b0b065500b8fff7b40c0c065500b8fff840160d0d0655005d0c200d01
200d500d600d700d043b59182b5d7110f62b2b2b2b2b2b2b2b5d3cfd2b2b2b3c105df62b2b2b
2b2b3c10fd2b2b2b3c003f3c3f3c395d2f3cfd3c3130012b331133112111331123112111a4c2
02fac2c2fd0605bafda6025afa4602b3fd4d00000002004affe8041c043e0028003702a8402c
090d092a190d1a2a290d2a2a390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a16
9b1aa90d1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419cf28d215
dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c065535b8ffe0404f0c0c0655
1f171f182b2c2a343904392c4904482c5608592b6608692b760c870cc90cf90df92b1137340e
0104102f243417322114185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030eb8
fffa400b0b0b42550e0c0f0f02550eb8ffeab4101002550eb8fff44021101006550e0c0d0d06
550e060f0f06550e260d0d42550e180c0c42550e0e1c0317b802aa400d182c0b0b4255189514
1c1c0700b8fff440110c0c06550045270a321c030b2961106100b8fff6b40b0b425500b8fff8
b40c0c425500b8fffc400e0d0d425500060d0d025500252124b8ffecb41010025524b8ffec40
0b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b065524b8ffdc400b101006
5524060f0f065524b8fffcb40c0c065524b8025b400e27400026102620263026af260539b8ff
c0b40e0e025526b8ffd6b40e0e025526b8fff4b60d0d4255263139b8ffc0400d1e23343039c0
3902a039013917b8fff4406b1010065517080c0c4255172518222f080d0d42552f0c0c0c4255
2f0e0b0b42552f24bf06cf06021f063f060206140b0b425506140d0d425506080c0c4255060e
0f0f0255060c0d0d025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b2b2b2b5d71ed2b2b2bf4ed2b2b105d712bf62b2b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2b2b2b2be5e5003fed3fe42b3fedfd2be41112392f2b2b2b2b2b2b2b
2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b2b0071250606232226
353436363736373637363534272623220607273e02333216161716151514161723260306070e
02151416333236373635033c64b96aafbc477348356bda67013345887f791db0186ed08988aa
5010091722bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e2d3d59
7118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f3d77000000000100830000
013705ba0003014d400d020a0b0b4255030a0b0b425501b8fffcb40b0b425500b8fffc40110b
0b4255020b0c0c4255030b0c0c425501b8fffdb40c0c425500b8fffd40110c0c425502040d0d
425503040d0d425501b8fffcb40d0d425500b8fffc400b0d0d425505360b0b025505b8ffc0b3
37383405b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc040251517340f05
1f059f05df05044f05df05f005031f0570058005ff05040100000a0203250100b8ffc0b33738
3400b8ffc040153335349f0001c000f0000200002000d000e0000400b8fff8b41010025500b8
fffa401d0e0e025500040c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d
0d065500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b2b2b2b2b2b2b
2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b33
11331183b405bafa46000000000100090000054605ba000a01ed4013052c0b0b425506180b0b
425504180b0b425508b8fffeb40c0c425508b8fffab40c0c425500b8fff4b40b0b425507b8ff
f2b40b0b425508b8fff240110b0b4255030e0b0b4255020e0b0b425509b8ffeab40d0d425508
b8ffea400b0d0d42550a140d0d425500b8ffe640170d0d425501240d0d425502240d0d42550a
1a0c0c425500b8ffe640100c0c425501240c0c425502240c0c4255b102024354584012050100
0802010200080a00050908050102052fddcd10ddcd113333003f3f3f11123931301b40242f05
012a002803250a2f0c300c600c89088909900cc00cf00c0b200c500c0204020b0802b1060243
5458b709010c0b00080102003f3f01111239391b40240a090920080514080805000101200205
1402020509010205e9200a000809650801650208b8ffc0400b2839500801800890080208b801
01400d024028395f02018f029f020202b8010140112005500502300560059005c005f0050505
b80288b30b60a8182b1910f45d71e45d712be45d712b1810ed10ed003f3c1a19ed183f3c8705
2e2b7d10c4872e182b7d10c4014bb00b534bb014515a58b2000f0ab8fff1b2091201b8fff1b2
081402b8ffee38383838383859014bb028534bb036515a58b90000ffc03859593130015d715d
005d59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b21013301161736370133010241
fdc8d2017d2e1f222d018cc6fdc205bafbd7807078780429fa4600000001007cfe51026005d3
0010003d400a270f0100101207081010b80133b3009f0e08b801334011079f0e5e0003100320
030303ac119d8c182b10f65dfdf6ed10f6ed003f3c3f3c3130015d0126021134373637330607
06070615100101df95ce4d5abc8179273d232b012bfe51bc01f8010eeedafdfbd0598a96bbbd
fe1ffe200001008700000626043e002302e2b90013fff2b40b0b425510b8fff2b40b0b425512
b8fff2b40b0b425511b8fff2b40b0b42551db8fffcb40d0d42551cb8fffcb40d0d42551bb8ff
fcb40d0d42551ab8fffcb40d0d42551db8fffcb40c0c42551cb8fffcb40c0c42551bb8fffcb4
0c0c42551ab8fffcb40c0c42550cb8fffeb40c0c42550db8fffeb40c0c42550eb8fffeb40c0c
42550fb8fffeb40c0c425513b8fff2b40c0c425510b8fff2b40c0c425512b8fff2b40c0c4255
11b8fff2b40c0c425513b8fff8b40d0d425510b8fff8b40d0d425512b8fff8b40d0d425511b8
fff8b40d0d42550db8fff4b40d0d065508b8fff4b40d0d065509b8ffd8404d0b0d342504e404
e409e117e52005d505f620021708202309181b20090303231e1c06151c0b0b06070106231a19
100ad025019025a025022517171a0e2590110111041010025511180f0f025511b8ffec400b0e
0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c1010065511060f0f065511
b8fffab40c0c065511b8fff8b40d0d065511b8015d401e18080c0c4255180e0b0b425518040d
0d42551825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee40110b0b
02551b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f06551bb8fffcb40c0c06
551bb8015d4028000233230e0b0b425523080d0d4255230c0c0c4255232501d000019000a000
021f003f004f000300b8fffe401d0e0e025500100d0d025500100c0c0255000c0b0b02550016
0b0b065500b8fffcb41010065500b8fff440140f0f0655000a0c0c0655000e0d0d0655001924
25b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfd2b2b2be410f42b2b2b2b
2b2b2b2b2b5ded2b2b2bf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c
4d10ed10ed11173901111239123931304379400e0c141326140c111b01120d151b01002b012b
2b81015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b33113315
363633321617363332161511231134262623220615112311342623220606151187a132a66a76
971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd27029d6c5f3a95a4fd
9702b27878509a91fdd900000001007cfe51026005d300100065400c2802281002090a100100
1209b80133b30a9f0301b80133b4009f035e0eb8fff0b4101002550eb8fff8b40f0f02550eb8
ffe4b40d0d02550eb8ffec400f0a0a02550f0e1f0e020eac129d8c182b10f65d2b2b2b2bfdf6
ed10f6ed003f3c3f3c3130015d1323001134272627262733161716151002fd81012b2b223d27
7a81bc5a4dcffe5101e001e1bcb9968a5ad2fbfddaeefef2fe08000000010066ffe7057605d3
001d00efb563026a1d0201b8ffe8b40b0b065500b8ffe8405f0b0b06552000320d6300700074
1d8000841d90009a05ab03a50db903b40dc70dd000e41df31d110e121d111d1d032a0628112a
1c201f470d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e130014001a
1014101a0402b8ffdeb2283901b8ffc040452839100f0001041b131e0c031b1e040910260f4a
0026200101011a1f17020c0c4255170e0b0b4255170a0c0d42551726200801080c0c0d425508
0c0b0b065508191e635c182b4e10f42b2b5d4ded2b2b2b4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b01720117060423222402353412243332041707262623220602
1514121633323604b4c23dfec3e5edfed79baf0143c2dc012c3bbf33c293a9e35c6de686a3e2
020231effbc1016ed2e50155b1e0cb2da092a2feef91bbfee98abc00000000020087fe690421
043e0012001e019640740c102d103d104b10043f20b020021f20290c231d3215321d421d7020
9020083a173a1b4a174a1b59085b0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad3
1ee414e41ee020ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03161c
1c06070106161c0e0b000e19b8fff2b40b0b425519b8fff4b40c0c425519b8fff8401f0d0d42
551924d00a01100a400a600a800a0420400b0b025520400d0d02550ab8ffe6400b0f0f02550a
180d0d02550ab8fffab40c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe84035
0c0c06550a74011333023312080d0d4255120e0b0b4255120c0c0c425512250000c001019001
a001b001f001041f013f014f010301b8fffc401d0e0e025501100d0d025501100c0c02550110
0b0b0255010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c065501120d
0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d71723c4d10fd2b2b2bf4e410fd2b
2b2b2b2b2b2b2b5d71ed2b2b2b003f3fed3f3fed113912393130005d015d7172007113113315
36363332161615140206232226271103141633323635342623220687a43a926888d06a75df7b
5a8f2e11a67678aba77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700000100980000060f05ba00100317400c082a0b0d4255022a0b0d4255b10202435458b900
08fff6400b0c0c0255080e0d11025502b8ffeeb40d11025505b8ffee40280d1102550c120c0c
0255050f0c030900010208090b0e000809020a0b06101002550b100d0d02550bb8fffab60c0c
02550b1000b8ffe6b41010025500b8fff8b40f0f025500b8fffcb40d0d0255002f2b2b2bcd2f
2b2b2bcd003f3fc0c010d0d0c0111217392b2b3130012b2b2b001bb10602435458401f07200b
0b065506200b0b065503200b0b065504200b0b065505200b0b065508b8fff240230b0b065502
0c0b0b065503060c0c0655020e0c0c0655090c0c0c06550a0c0c0c065507b8fff8b40d0d0655
08b8fff8401f0d0d06552605010c200a12340f200a12340f050c0300010e0b00080801020ab8
ffeeb40b0b06550ab8ffeeb40c0c06550abb0256001200100256400d000c0b0b065500060c0c
065500b8fff8b40d0d065500012f2b2b2bf42ff42b2b003f3c3f3c3c111217392b2b5d313001
2b2b2b2b2b2b2b2b002b2b2b2b2b1b407f00020f0814021b0804760c860cc80c03090c490c49
0f032904250d2c0e58035b04760d780e870d080b020508390d360e4f024b03440740084d0d42
0e0a9802990396079608a803a7070612020f0e0e30050214050502080c0d0d30050814050508
0c520f5201400102020808090a0b0b0d0d0e0e1000080902601280120212ba02a8000d0131b2
052008b8013140160c090a0a0b0b42550a0a0c0c42550a20400c7f0b010bba0256000e010bb2
052002b8010bb20f0100b8fff6b40b0b425500b8fff6400b0c0c425500200f70100110b80256
b72005600580050305b802a8b3113b59182b1910f45df45d3c18fd2b2b3c10ed1a1910edf45d
3c1a18fd2b2b3c10ed1a1910ede45d00183f3f3c3c103c103c103c103c103c103c1a10eded87
052e2b877dc4872e182b877dc43130004bb00b534bb01e515a58bd000cfffb0008ffd60002ff
d638383859014bb00c534bb028515a58b9000dfff8b10e0a38385901435c58b9000dffd4b621
390e2c21390db8ffd4b637390e3237390db8ffd4b52d390e2c2d392b2b2b2b2b2b5972715d00
715d015d5959002b2b3311210116173637012111231101230111980124015b30161935015f01
05bbfe56affe5805bafbf29148509b03fcfa4604cbfb3504e0fb2000000000020042fe5103ea
043e001e002a01c540600b0b05142c0b25144c0b451406091d191d2c0b26142c23390b36144a
0b46145607580b680bfa0af5150e2e232c273e233e274c27902ca02c07362136293f2c460b46
21452954215429690763216329602c802cda27e821ee23ef271117160615b802b1b4281c1307
01b802aa401020003000600070008000c000d0000700b8027d4010051c1c0f0a45221c0c0a16
153325330ab8fff2b40b0b42550ab8fff2b40c0c42550ab8fff840270d0d42550a251818d017
011017401760178017042c400b0c02552c400d0d025517121010025517b8fff440110f0f0255
17060e0e025517160d0d025517b8ffea400b0b0b065517121010065517b8ffeeb40c0c065517
b8fffcb40d0d065517b8fffab40c0c425517b8fffa40680d0d425517740f012500221f0e0b0b
42551f080d0d42551f0c0c0c42551f24bf0fcf0fdf0fff0f041f0f3f0f4f0f030f0c0c0c4255
0f100d0d42550f200b0b02550f1a0c0c02550f220d0d02550f1c0b0b06550f0c0d0d06550f1a
0c0c06550f192b2c74213450182b2b4ef42b2b2b2b2b2b2b2b5d714ded2b2b2bf4ed10fd2b2b
2b2b2b2b2b2b2b2b2b2b5d713c10fd2b2b2be4f63c003fede43fedfd5de43fede43f3c313001
5d71005d71171716171633323637362706232202353412363332173533111406062322261314
1633323635342623220666af0b3243747d88180e0176b0dbf06ed18dbc7aa665dba0beea99a6
7d7ca8ad7a78a8581a512532645a37b08b013cdd9801018c9880fc6af8cf78ab032ad1c0bfcc
c3c6c3000000ffff004bffe8041e05c20226000a00000107002900f30000001b400e02e021f0
2102210a00482b020121b902220029002b012b5d3500000000010024fff2022a05990017011f
b9000cfffeb40c0c42550bb8fffeb40c0c425508b8fffeb40c0c425507b8fffeb40c0c425506
b8fffeb40c0c42550ab8ffc0b323263409b8ffc0405323263480190100010c0d0a0103001610
092b0f0a06161c030b0f10220022010d12080d0d4255120e0b0b4255120a0c0c425512250c01
ff070845094560077007800790070400072007a007b007c007d0070607b8ffeeb41010025507
b8fff4b40f0f025507b8fff2b40e0e025507b8fff8b40d0d025507b8fff8b40c0c025507b8ff
fab41010065507b8fff0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a001801
36b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd2b2b2b3c10e4f43c003fed3f3cfd
3c1139123911333310c93130015d2b2b2b2b2b2b2b2517062322262635112335331137113315
2311141616333202101a4c3c626c2c8484b3b5b5132b281ea19f103e65a202638c01076cfe8d
8cfd934d2c1a0000000200880000013c05ba0003000701a74019020a0b0b4255030a0b0b4255
060a0b0b4255070a0b0b425501b8fffcb40b0b425500b8fffcb40b0b425505b8fffcb40b0b42
5504b8fffc401d0b0b4255020b0c0c4255030b0c0c4255060b0c0c4255070b0c0c425501b8ff
fdb40c0c425500b8fffdb40c0c425505b8fffdb40c0c425504b8fffd401d0c0c425502040d0d
425503040d0d425506040d0d425507040d0d425501b8fffcb40d0d425500b8fffcb40d0d4255
05b8fffcb40d0d425504b8fffc403a0d0d425509360b0b02554f099009a009b009c009df09f0
090700091f09700980099f09b009c009df09e009ff090a1f0901000107040203090603b8ffc0
402d0d0d4255037e0100060506040a0607250500049f04a004b004c004e00406c004f0040200
042004d004e0040404b8fff8b41010025504b8fffa40170e0e025504040c0c0255040a0b0b02
5504140b0b065504b8ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e08
4750182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed2b0111123939111239393130
015d72712b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b133533150311331188
b4b4b404ebcfcffb150426fbda00000000010050ffe803ed043e001a01f3b90017fff040220c
0c42550a080c0c425509080c0c42550f080c0c425510080c0c425511080c0c4255b102024354
5840340e7f0f010f0b01400050007000030004121c0b07181c040b010e1507080e0e0255070c
0d0d0255070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d3210c45d32
31301b4047090c011f1c4313431753135317601360179b029b039a0da410a41a0c080d190a6a
0269036a05750c700d800da60cb509b60ab50c0c160c860ce302030e225f0f6f0f7f0f030f01
b802aa4026300040005000600070009000a000e000f00009000f0f0b000004121c0b07181c04
0b1c0f010fb8fff4b40c0c42550fb8fff240120b0b42550f240e080d0d06550e221b000100b8
fff4b40c0c425500b8ffee40810b0b425500240b2b1f010100010101400e2b425501400d0d42
5501400c0c425501360b0b425501400b0b065501401010065501480c0c0655011a0d0d065501
491c15080d0d4255150c0c0c4255150e0b0b42551524cf07011f073f0702070e0b0b0655070a
1010065507120c0c0655070c0d0d4255070c0c0c425507311b34c4182b10f62b2b2b2b2b5d71
ed2b2b2b10f62b2b2b2b2b2b2b2b5d724b53234b515a58b90001ffc03859ed2b2b72f42bed2b
2b72003fed3fed12392f11392f105de4105de43130005d71015d7159012b2b2b2b2b2b011706
062322001134123633321617072626232206151416333236033cb11defaedafef772e989addc
1faf197f5a88aaa4846a8e018517b7cf011d010aac010281afa11b6b6cc3d3d6c2820001005c
ffe704eb05d3003002c5b90027fff8b40d0d425526b8fff8b40d0d425525b8fff840170d0d42
5518100c0c425519100c0c42551a100c0c42550db8ffe8b40b0b42550cb8ffe8b40b0b42550b
b8ffe8b40b0b42551cb8ffe8b40b0b42551bb8ffe8403d0b0b425503180b0b425502180b0b42
5501180b0b425563036304730374040425273503391c430349074c1d451f4424462753035907
5c1d572889130e23b8fff2b41010025524b8fff2b41010025525b8fff2b41010025526b8fff2
b41010025527b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8fff6b40d
10025526b8fff6b40d10025527b8fff640460d100255280d26240224032725360f3423442545
2f5a20562355256c0b6a0d6b0e66146518790b7a0d7a0f7d107524732586038a0b890d8a0f8d
1085248325920d960f96151eb10602435458402d2126121b261a09262901260000291a120432
312600650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c0c0655051e
2d091e1e1603003fed3fed2b1112395d1112391112395d1112395d01111217392fed2fed2fed
2fed1b402d25240e0d0b05211c1d1e1b08070604030206012524220e0d0b06051e1b2d1a400c
0c02558f1a011aed16002d01b8ffc040120c0c02551001200150016001700190010601b801b0
400e2d1e1e1603051e2d091b261a4a09b8fff4b40c0c425509b8fff2b40b0b425509b8fff840
0a0d0d4255092600290129b8ffeab40e0e025529b8fff4401f0c0c0255291a32210c0c0c4255
210e0b0b425521080d0d4255212612012612b8ffecb40e0e025512b8fff6b40d0d025512b8ff
f8400f0c0c02551254200001001931635b182b4e10f45d4de42b2b2bed10ed2b2b2b4e10f62b
2b5d4ded2b2b2bf4ed003fed3fed10fd5d2be410fd5d2bf41112173911173911123939011217
39593130005d712b2b2b2b2b2b2b2b2b2b015d712b2b2b2b2b2b2b2b2b2b2b002b2b2b13371e
0233323636353426272624272626353436363332161617072626232206151417160417161615
140606232224265cb70d5fc87d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a139
3801d958807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc16469cc810e
8b8e815b4f33336b283bb57675cf7374e9000000ffff0044ffe8042705c20226000e00000107
002900f40000001b400e02e01df01d021d0400482b02011db902220029002b012b5d35000000
00030096000004e905ba0011001d002a0185b90004fff440290b0b0655040446235623662373
09840906691a75057009730b8305830b062716090318272a1e161d09b8ffe8b40c0c425509b8
ffe8b40b0b425509b8ffe8401b0d0d4255090913121e2a2a2929001c1d1e0201021f1e1e1100
0818b8fffeb40c0c425518b8fff2b40b0b425518b8fff6400d0c0d42551826060c1010025506
b8ffe640250f0f025506120d0d025506060c0c025506080b0b0655060c0c0c065506140d0d06
55065425b8fffeb40c0c425525b8fff2b40b0b425525b8fff640130c0d425525260c1c101002
550c0a0d0d02550cb8fff440270b0b06550c1a2c1d1e020c0c42551e0e0b0b42551e0a0c0d42
551e200120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffab40c0c
025500b8fffab40c0c065500b8fff0400a0d0d0655005d2b3b5c182b10f62b2b2b2b2b2b5d3c
fd2b2b2b3c4e10f62b2b2b4ded2b2b2bf42b2b2b2b2b2b2bed2b2b2b003f3cfd3c3f3cfd3c12
392f3c10fd3c392f2b2b2b1139111239011217393130015d005d2b3311213216161514060716
1615140e0223012132373636353426262321112132373e02353426262321960226a8cb736667
858f5780c18cfe93013d81384a4b46829efedb016d5e26435a3a54958cfead05ba59b9655ea6
3327bc8067b1603103521116664d496f29fba0070c386b465279310000000001000f000003f1
042600100201b9000dfff2400b0b0b4255100e0b0b425509b8fff2400a0b0b4255030e0b0b42
55b1020243545840150f010b060402090602060d0a000a0f180f0f02550f2f2b003f3f3f3f11
173931301bb70f12010f22193906b8ffde405019395a0f96049608990e9a0fc005c006c007cb
0f090f4016391a031309150d1a1035013a0b81018e0b082f1257045907590b580e9701980a98
0bb702b80cc80bca0ecc10da03d509d10ddb10e50a1212b10602435458400b0c0012110f180d
10065506b8ffe8400e0d1006550f0600020d000a0a0206003f3c3f3c111239392b2b01111239
391b40660606030708090901060609050403030b0f0f100e0d0d010f0f0d100b010009020d0b
030c100a060f020f0a10c600c60902102500091400000903020dc60d010d250c03140c0c030a
090903030206100d0d0c0c000a4f120112490d7e0c220a0f6106097e400ab8011bb740065006
80060306b80243400e20037e02224f00010049117cc4182b10f65df4ed1a19fd5dfd1a18ed10
e510f4ede65d003f3c103c103c3f3c103c103c87052e2b5d877dc4872e182b5d7d10c4001112
39390f0f8708c4870e10c408c4870e10c4c408c4070e103c3c083c59313001435c58b40e181d
390bb8ffde400b1d390c221739032217390bb8ffdeb2213910b8ffc0400a1539012221390940
1c392b2b2b2b2b2b2b2b595d71002b5d2b2b015d592b2b2b2b33010133171617363737330101
230327010f0184fe99e1a32e1c2c25b3d7fe91018bddda3afee9022801fef947304233fbfe0c
fdce014a59fe5d0000000001004101b8026a026d0003002c401970027003024d014d02020123
00021a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335211541022901
b8b5b500000000010085000002c6043e001100de404d2f130110040123043404430453046604
7404060911080908090d1311090d000308010b1c06070106000a092890080108222013011302
22110e0b0b425511080d0d4255110c0c0c425511250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c025500060b0b025500b8
fffcb41010065500b8fff440160f0f065500060c0c065500080d0d0655004e1247c4182b10f6
2b2b2b2b2b2b2b2b5d712b3cfd2b2b2be4105df472e4003f3f3fed1139391139390111123939
0010c9870e7dc43130005d72015d33113315363633321707262322060706151185a23e693f5b
5e3e42423b5e141e0426a171483aa727473f6072fdd4000000020086ffe8041f05ba0010001d
01c9407b01050c0f240535054505053f1fb01f021f1f221c331c421c701f901f063a133c163c
1a4c164c1a5d085d0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504fa100c10150e0406
02001b1c0607010a151c0e0b18b8fff8b40d0d425518b8fff4b40c0c425518b8fff240250b0b
42551824d00b01100b400b600b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6
b40c0c02550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8fff44053
0d0d06550b740111020d0d425511080c0c4255113300120b0b425500040d0d425500040c0c02
5500040d0d06550033030c0c0c425503080d0d425503250202c001019001a001b001f001041f
013f014f010301b8fffeb41010025501b8fffc401d0e0e0255010c0d0d025501100c0c025501
120b0b0255010c0b0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10fd2b2bf42b2b2b2b
e42b2b10fd2b2b2b2b2b2b2b2b5d71ed2b2b2b003fed3f3fed3f11391112393130005d015d71
72007121231133113633321e0215100023222703141716333236353426232206012da7b472b1
62af7140fef2bdbc6b0234559176aca57576ac05bafdf58f4f8fca73feeffed69d0196bf558b
cdcbd0c6cd00ffff0050fe6f03ed043e0226001f00000107002a00c300140037b1011cb8ffc0
401a141406551f1c2f1c02101c01ef1cff1c02101c301c7f1c031c0bb8ff98b6482b01011c08
29002b012b5d5d71722b350000000001000604c302a405aa001700974011870e014008121007
05040b17003a0f3f08b802b8b2133f04b802b440190c001917171a0c760b81104d119d177600
7f1819e021b37a182b2bf6fdf6e4f4fd4e456544e6003f4de6ecfcfde4011112173931304379
402c1416090e0103152502261403163200151602011403173200090e0b320115021332011601
1332010a0d083200002b2b2b012b2b103c103c2b2b2b818181015d1326373633321716333236
3733060623222726232207061707013a39593e6b3b2320220782036d543f67431f2215160104
c3683e3e361e23347272382418182f000000000100de04aa024f05c200030065b90001ffc8b3
17193402b8ffc0b317193403b8ffc040261719347f018002df01036f037f007f03036f006f01
024f015002020000031003020387010401b80260b2028603b80253b5001904d9a7182b4e10f4
4dfdf4fd003ffd5d3c3130015d5d5d5d2b2b2b13133303de85ecdc04aa0118fee80000000001
006bfe5b021c001700150041b40b090c3a09b802b5b50e9c4f000100b8025a400f02010a0c3a
0ba50676124d01029c01b8013eb3165779182b10f6fd10f4edf4e4003f3cfd71f6edf4103c31
3017373307161615140623222737163332373635342626d834862155569091523e0b401e5e26
1d173e9ab16b0a55344b730c75041a141d121c1405ba001905ba001a05a70019042600180000
ffe70000ffe80000ffe7fe69ffe805ba0019fe69ffe802ea000000b8000000b80000000000a8
00ad016900ad00bf00c201f0001800af00b900b400c800170044009c007c009400870006005a
00c80089005200520005004400940119ffb4002f00a1000300a100cd00170057007e00ba0016
0118ffe9007f008503d300870085000d002200410050006f008d014cff75005c00df04830037
004c006e00700180ff58ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8
ffdc002d005c0095009900df019209b500400057008000b9039d0072009a035d0401ff67fffa
00030021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8ffa3ffb0ffc4
0003001c005d0068009a00ba013501470221055cff4dffcd0016002d00780080009900b200b6
00b600b800bd00da010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e0085009100bf00c200c500e1
011a012f014f01560229026f029e03720008002c00310031006400690089009800c700de012b
01b6020c02cf03a304ab04fb061dfee0ff0e00060026009b009d00c1010d0118012001730182
01d601e30243025f029b02e2039404a904d20761001c005e006d008d00ab00f7011201380151
015b0168017c01870191019901cd01d001e802410254026b02ef0368037103bd044204420453
047304830586058b06e8fe58fec4fed1fef7ff32ff860051007c008100910095009e00b400b9
00cf00d900d900df00e20105010b010e010e012001210155017b017b017e018d01a201a801a9
01b401d001d001e201e901f201f501fb020002000206021b0221022202220223027202770294
029c02cf02cf02d002ec02f903170322032b0335033c0359036f037103870390039003b503e1
041a04cf04ff053205320596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00
fe88fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078009600a500af
00d3010c0118011a012a013e014c0151015f016a0171017801820184019a01a501a801a901ae
01bc01cd01d701ef0200020d021c02210222022e02350242024f024f025e0265027102900292
02b402d602fa0307030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b500b7000000000000
00000000000001e00381034503b5008e0233041902ce02ce002d005f0064034d023f000002a8
0188027d01b402240578063b023b014e00f00426029402c6029f02f6023b034d014b0153006a
0231000000000000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef060c
00b201000239000001c50330042b03cb00da03df010704a100db040a011701ed02a70350010b
01bd043e05580021039c00ae0371017d00b5024500000afb088c012b014e01aa008700540132
01f803ff0003024e00b4003703e30083006b02d800ed00770088009701640467008e0033017c
00e700a6029e0329056e062a061501c90269048a021301b4000204a900000239012401030514
0084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae034d04f005520168006d007d
00860071ff810079055804d2016700030156002504e00094007c033204210094007f0072005c
002f00b6001800ba00b80041034d00720018001f004c016a01550099009a009a009800b20004
0078006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52005affa60099
ff67006eff92002dffd40087ff7c00b800a800e5008f00a80185fe7b0070001e00d900de014c
054602cf0546ff2d028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc
00a507050061072b00ed04b001d200b6007b00650252ff740365fe690094008f005c00400086
0075008900894043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a2928272625
24232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201002c
4523466020b02660b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b004262348482d2c45
234660b0406120b06660b004262348482d2c4523462361b0406020b02661b04061b004262348
482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b0
172370b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325456164b05051
5845441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d
2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b0018559
2d2c20b0032545b019234445b01a23444565234520b00325606a20b009234223688a6a606120
b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a5279
b31940201945208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d
2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b000525823b002253823b0
02256538008a63381b212121212159012d2c4bb06451584569b00943608a103a1b212121592d
2c01b005251023208af500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01
b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb0
2a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b000
5058b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d
2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b80708
5158b00425b00425012046b01060482046b0106048590a21211b2121592d2cb012435c580cb0
0425b00425060c6423646164b807085158b00425b00425012046b8fff060482046b8fff06048
590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b21
21592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0a
b012435c5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b00054582120
43b0005558b00325b00325b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038
591b2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959595921212121
2d2c462346608a8a462320468a608a61b8ff8062232010238ab902c202c28a70456020b00050
58b00161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188535a58b9
10000020885458b202010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb940000080885458b2020402
43604259b94000008063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b202400243604259595959592d2cb0024354584b
53234b515a58381b2121591b21212121592d0000000100000005199a2f853c195f0f3cf5081b
080000000000a2e3272a00000000c9acc9bbfaaffd671000080c000000090001000100000000
00010000073efe4e00431000faaffa7a100000010000000000000000000000000000002b0600
0100047300550473003c0473001a0473004d04730053047300df047300550473005604e30030
0473004b047300870400003f0473004a04730044023900000473004605c700a40473004a01c7
00830556000902aa007c06aa008702aa007c05c700660473008706aa0098047300420473004b
0239002401c70088040000500556005c04730044055600960400000f02aa004102aa00850473
00860400005002aa000602aa00de02aa006b000000000000002c000002a40000052000000714
000009a000000d7c00000e84000010e40000131c000014200000162c0000182800001c6c0000
1cc000001ed800001ed8000020f80000223400002584000026ec000029100000299000002cdc
00002d8400002edc000030d4000034340000367c000036b400003820000039f000003c3c0000
3f9800003fd0000041dc00004428000044700000458c000047b400004808000048f000004974
000049fc00010000002b00f2003c009d000700020010002f0056000004ac0bbe00050002b900
540328b326181fd0bc032900e0032900020329b22b1d1fb90327031db23b1f40b80323b31215
320f412d03200001002f0320000100200320006f032000af032000bf03200004005f031e0001
0010031e007f031e0080031e00af031e00bf031e00d0031e00060000031e0010031e0020031e
006f031e009f031e00e0031e0006031d031cb2201f1041270319007f03190002000f031700ef
031700ff03170003001f0317002f0317004f0317005f0317008f0317009f03170006000f0317
005f0317006f0317007f031700bf031700f00317000600400317b2923340b80317b28b3340b8
0317b36a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b80317b34d513240
b80317b344493240b80317b23a3340b80317b331343240b80317b32e423240b80317b3272c32
40b80317b312253280b80317b30a0d32c04116031600d00316000200700316000102c4000f01
01001f00a0031500b0031500020306000f0101001f00400312b32426329fbf03040001030203
010064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11
329f414a02e200af02e200bf02e2000302e202e202e102e1007f02e00001001002e0003f02e0
009f02e000bf02e000cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f02dd
003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002dc0001
001002dc003f02dc000202dc02dc001002db000102db02db000f02da000102da02daffc002d3
b2373932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b212
1632b802d2b2f9291fb90326031cb23b1f40bb0322003e00330322b225311fb80318b23c691f
b802e3b3202b1fa0413002d400b002d40002000002d4001002d4002002d4005002d4006002d4
007002d40006006002d6007002d6008002d6009002d600a002d600b002d60006000002d60010
02d6002002ca002002cc002002d6003002d6004002d6005002d6000802d0b2202b1fb802cfb2
26421f411602ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02
c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002c7002f02c5000502
c1b324121fff411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f02bf0006
02bf0222b2641f12410b02bb00ca0800001f02b200e90800001f02a600a20800406a1f402643
4932402043493240263a3d3240203a3d329f209f26024026969932402096993240268e923240
208e92324026848c324020848c3240267a813240207a813240266c763240206c76324026646a
324020646a3240265a5f3240205a5f3240264f543240204f5432b8029eb724271f374f6b0120
410f0277003002770040027700500277000402770277027700f90400001f029bb22a2a1fb802
9a402b292a1f80ba0180bc0180520180a201806501807e01808101803c01805e01802b01801c
01801e0180400180bb0138000100800140b40180400180bb013800010080013940180180ca01
80ad018073018026018025018024018020013740b80221b2493340b80221b2453340b80221b3
41423240b80221b33d3e320f410f0221003f0221007f0221000300bf022100cf022100ff0221
000300400221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e3a326f414802
c3007f02c3008f02c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02c300
5f02c300c002c300ef02c300ff02c3000600df02220001008f02220001000f0222002f022200
3f0222005f0222007f022200ef0222000600bf022100ef02210002006f0221007f022100af02
210003002f0221003f0221004f0221000302c302c30222022202210221401d101c102b104803
8f1c010f1e014f1eff1e023700161600000012110811b8010db6f70df8f70d00094109028e02
8f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f0132b21c561fb801
0fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51c
b802abb61fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c381fadcab804
01b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b8
0401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab21f351cb8
0401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168
402c07960758074f07360732072c0721071f071d071b071408120810080e080c080a08080806
0804080208000814b8ffe0402b00000100140610000001000604000001000410000001001002
000001000200000001000002010802004a00b013034b024b5342014bb0c063004b6220b0f653
23b8010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b10101
8e59b0382bb00288b801005458b801ffb101018e851bb0124358b900010111858d1bb9000101
28858d5959001816763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358
b0aa1d59b0324b5358b0ff1d594bb09353205c58b901f201f04544b901f101f045445958b903
3e01f2455258b901f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f24544b9002401f24544
5958b909090025455258b9002509094459594bb8040153205c58b173244544b1242445445958
b917200073455258b9007317204459594bb8040153205c58b1ca254544b1252545445958b916
8000ca455258b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c
455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b90189001c455258
b9001c01894459594bb8030153205c58b11c1c4544b11c1c45445958b90de0001c455258b900
1c0de04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b766818b080
622020b163594565234520b003266062636820b003266165b059236544b063234420b13b5c45
65234520b003266062636820b003266165b05c236544b03b2344b1005c455458b15c406544b2
3b403b4523614459b347503437456523456023456560234560b089766818b080622020b13450
4565234520b003266062636820b003266165b050236544b034234420b147374565234520b003
266062636820b003266165b037236544b0472344b10037455458b137406544b2474047452361
4459004b5342014b5058b108004259435c58b108004259b3020b0a124358601b215942161070
3eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b010
2342b0112342002b7475737500184569444569444569447373737374757374752b2b2b2b7475
2b2b2b2b2b737373737373737373737373737373737373737373737373732b2b2b45b0406144
737400004bb02a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b0b45
b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c515a58b1
090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58
b9008002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a58ba009f02220001
007359002b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b2b004569
447345694473456944737475456944734569444569444569447374456944456944732b2b2b2b
2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b2b74
2b2b000000>
] def
/f-0-0 currentdict end definefont pop
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 4 1 463 345
%%EndPageSetup
q 4 1 459 344 rectclip q
0 g
0.8 w
0 J
0 j
[] 0.0 d
4 M q 1 0 0 -1 0 352 cm
52.641 310.078 m 59.199 310.078 l 461.68 310.078 m 455.121 310.078 l 455.129
 310.078 l S Q
BT
11 0 0 11 40.436953 38.64 Tm
/f-0-0 1 Tf
(0)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 260.48 m 59.199 260.48 l 461.68 260.48 m 455.121 260.48 l 455.129
 260.48 l S Q
BT
11 0 0 11 34.313906 88.24 Tm
/f-0-0 1 Tf
(20)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 210.801 m 59.199 210.801 l 461.68 210.801 m 455.121 210.801 l 455.129
 210.801 l S Q
BT
11 0 0 11 34.313906 137.92 Tm
/f-0-0 1 Tf
(40)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 161.199 m 59.199 161.199 l 461.68 161.199 m 455.121 161.199 l 455.129
 161.199 l S Q
BT
11 0 0 11 34.313906 187.52 Tm
/f-0-0 1 Tf
(60)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 111.52 m 59.199 111.52 l 461.68 111.52 m 455.121 111.52 l 455.129
 111.52 l S Q
BT
11 0 0 11 34.313906 237.2 Tm
/f-0-0 1 Tf
(80)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 61.922 m 59.199 61.922 l 461.68 61.922 m 455.121 61.922 l 455.129
 61.922 l S Q
BT
11 0 0 11 28.190859 286.8 Tm
/f-0-0 1 Tf
(100)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 12.238 m 59.199 12.238 l 461.68 12.238 m 455.121 12.238 l 455.129
 12.238 l S Q
BT
11 0 0 11 28.190859 336.48 Tm
/f-0-0 1 Tf
(120)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 310.078 m 52.641 303.52 l 52.641 12.238 m 52.641 18.801 l 52.648
 18.801 l S Q
BT
11 0 0 11 49.578477 25.52 Tm
/f-0-0 1 Tf
(0)Tj
ET
q 1 0 0 -1 0 352 cm
97.121 310.078 m 97.121 303.52 l 97.121 12.238 m 97.121 18.801 l 97.129
 18.801 l S Q
BT
11 0 0 11 94.058477 25.52 Tm
/f-0-0 1 Tf
(5)Tj
ET
q 1 0 0 -1 0 352 cm
141.602 310.078 m 141.602 303.52 l 141.602 12.238 m 141.602 18.801 l 141.609
 18.801 l S Q
BT
11 0 0 11 135.476953 25.52 Tm
/f-0-0 1 Tf
(10)Tj
ET
q 1 0 0 -1 0 352 cm
186 310.078 m 186 303.52 l 186 12.238 m 186 18.801 l 186.008 18.801 l S Q
BT
11 0 0 11 179.876953 25.52 Tm
/f-0-0 1 Tf
(15)Tj
ET
q 1 0 0 -1 0 352 cm
230.48 310.078 m 230.48 303.52 l 230.48 12.238 m 230.48 18.801 l 230.488
 18.801 l S Q
BT
11 0 0 11 224.356953 25.52 Tm
/f-0-0 1 Tf
(20)Tj
ET
q 1 0 0 -1 0 352 cm
274.961 310.078 m 274.961 303.52 l 274.961 12.238 m 274.961 18.801 l 274.969
 18.801 l S Q
BT
11 0 0 11 268.836953 25.52 Tm
/f-0-0 1 Tf
(25)Tj
ET
q 1 0 0 -1 0 352 cm
319.441 310.078 m 319.441 303.52 l 319.441 12.238 m 319.441 18.801 l 319.449
 18.801 l S Q
BT
11 0 0 11 313.316953 25.52 Tm
/f-0-0 1 Tf
(30)Tj
ET
q 1 0 0 -1 0 352 cm
363.84 310.078 m 363.84 303.52 l 363.84 12.238 m 363.84 18.801 l 363.848
 18.801 l S Q
BT
11 0 0 11 357.716953 25.52 Tm
/f-0-0 1 Tf
(35)Tj
ET
q 1 0 0 -1 0 352 cm
408.32 310.078 m 408.32 303.52 l 408.32 12.238 m 408.32 18.801 l 408.328
 18.801 l S Q
BT
11 0 0 11 402.196953 25.52 Tm
/f-0-0 1 Tf
(40)Tj
ET
q 1 0 0 -1 0 352 cm
452.801 310.078 m 452.801 303.52 l 452.801 12.238 m 452.801 18.801 l 452.809
 18.801 l S Q
BT
11 0 0 11 446.676953 25.52 Tm
/f-0-0 1 Tf
(45)Tj
ET
q 1 0 0 -1 0 352 cm
52.641 12.238 m 52.641 310.078 l 461.68 310.078 l 461.68 12.238 l h
52.641 12.238 m 52.648 12.238 l S Q
BT
-0.000000000000002021 11 -11 -0.000000000000002021 12.88 131.148633 Tm
/f-0-0 1 Tf
[(Tens\343o de)-3( Hall V)]TJ
ET
BT
-0.000000000000002021 11 -11 -0.000000000000002021 16.88 215.582227 Tm
/f-0-0 1 Tf
(H)Tj
ET
BT
-0.000000000000002021 11 -11 -0.000000000000002021 12.88 223.531445 Tm
/f-0-0 1 Tf
[( \(mV\))]TJ
ET
BT
11 0 0 11 146.056523 5.84 Tm
/f-0-0 1 Tf
[(Campo)-3( Magn\351tico)-3( no Solen)-3(\363ide B)]TJ
ET
BT
11 0 0 11 313.119023 1.84 Tm
/f-0-0 1 Tf
(S)Tj
ET
BT
11 0 0 11 320.46668 5.84 Tm
/f-0-0 1 Tf
( \(x10)Tj
ET
BT
11 0 0 11 344.937383 9.84 Tm
/f-0-0 1 Tf
(-4)Tj
ET
BT
11 0 0 11 354.734258 5.84 Tm
/f-0-0 1 Tf
( T\))Tj
ET
BT
11 0 0 11 310.981875 64.88 Tm
/f-0-0 1 Tf
[(dados expe)-3(rime)-3(ntais)]TJ
ET
1 0 0 rg
1.6 w
q 1 0 0 -1 0 352 cm
418.641 283.84 m 449.52 283.84 l 418.641 280.559 m 418.641 287.121 l 449.52
 280.559 m 449.52 287.121 l 79.762 287.762 m 87.52 287.762 l 79.762 291.039
 m 79.762 284.48 l 87.52 291.039 m 87.52 284.48 l 83.602 285.281 m 91.441
 285.281 l 83.602 288.559 m 83.602 282 l 91.441 288.559 m 91.441 282 l 91.281
 282.801 m 99.199 282.801 l 91.281 286.078 m 91.281 279.52 l 99.199 286.078
 m 99.199 279.52 l 95.199 277.84 m 103.121 277.84 l 95.199 281.121 m 95.199
 274.559 l 103.121 281.121 m 103.121 274.559 l 102.879 272.879 m 110.879
 272.879 l 102.879 276.16 m 102.879 269.602 l 110.879 276.16 m 110.879 269.602
 l 118.32 262.961 m 126.398 262.961 l 118.32 266.238 m 118.32 259.68 l 126.398
 266.238 m 126.398 259.68 l 145.281 240.559 m 153.68 240.559 l 145.281 243.84
 m 145.281 237.281 l 153.68 243.84 m 153.68 237.281 l 172.16 223.199 m 181.039
 223.199 l 172.16 226.48 m 172.16 219.922 l 181.039 226.48 m 181.039 219.922
 l 233.602 176.078 m 243.602 176.078 l 233.602 179.359 m 233.602 172.801
 l 243.602 179.359 m 243.602 172.801 l 344.48 96.641 m 357.441 96.641 l 
344.48 99.922 m 344.48 93.359 l 357.441 99.922 m 357.441 93.359 l 432.32
 27.121 m 447.762 27.121 l 432.32 30.398 m 432.32 23.84 l 447.762 30.398
 m 447.762 23.84 l 447.77 23.84 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
80.32 287.762 m 86.879 287.762 l 83.602 284.48 m 83.602 291.039 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
84.238 285.281 m 90.801 285.281 l 87.52 282 m 87.52 288.559 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
92 282.801 m 98.559 282.801 l 95.281 279.52 m 95.281 286.078 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
95.84 277.84 m 102.398 277.84 l 99.121 274.559 m 99.121 281.121 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
103.602 272.879 m 110.16 272.879 l 106.879 269.602 m 106.879 276.16 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
119.121 262.961 m 125.68 262.961 l 122.398 259.68 m 122.398 266.238 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
146.238 240.559 m 152.801 240.559 l 149.52 237.281 m 149.52 243.84 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
173.359 223.199 m 179.922 223.199 l 176.641 219.922 m 176.641 226.48 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
235.281 176.078 m 241.84 176.078 l 238.559 172.801 m 238.559 179.359 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
347.68 96.641 m 354.238 96.641 l 350.961 93.359 m 350.961 99.922 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
436.801 27.121 m 443.359 27.121 l 440.078 23.84 m 440.078 30.398 l S Q
0.80032 w
q 1 0 0 -1 0 352 cm
430.801 283.84 m 437.359 283.84 l 434.078 280.559 m 434.078 287.121 l S Q
0 g
BT
11 0 0 11 325.054141 51.76 Tm
/f-0-0 1 Tf
[(reta de cali)-3(bra\347\343o)]TJ
ET
0 0 1 rg
1.6 w
q 1 0 0 -1 0 352 cm
418.641 296.961 m 449.52 296.961 l 55.68 310.078 m 56.801 309.281 l 60.879
 306.238 l 65.039 303.199 l 69.199 300.238 l 73.281 297.199 l 81.602 291.121
 l 85.68 288.16 l 89.84 285.121 l 93.922 282.078 l 98.078 279.121 l 102.238
 276.078 l 106.32 273.039 l 110.48 270 l 114.641 267.039 l 118.719 264 l
 127.039 257.922 l 131.121 254.961 l 135.281 251.922 l 139.441 248.879 l
 143.52 245.84 l 147.68 242.879 l 151.84 239.84 l 155.922 236.801 l 160.078
 233.762 l 164.16 230.801 l 168.32 227.762 l 172.48 224.719 l 176.559 221.68
 l 180.719 218.719 l 184.879 215.68 l 188.961 212.641 l 193.121 209.602 
l 197.281 206.641 l 201.359 203.602 l 205.52 200.559 l 209.68 197.52 l 213.762
 194.559 l 217.922 191.52 l 222.078 188.48 l 226.16 185.441 l 230.32 182.48
 l 234.398 179.441 l 238.559 176.398 l 242.719 173.359 l 246.801 170.398
 l 255.121 164.32 l 259.199 161.281 l 263.359 158.32 l 267.52 155.281 l 
271.602 152.238 l 275.762 149.199 l 279.922 146.238 l 284 143.199 l 288.16
 140.16 l 292.238 137.199 l 300.559 131.121 l 304.641 128.078 l 308.801 
125.121 l 312.961 122.078 l 317.039 119.039 l 321.199 116 l 325.359 113.039
 l 329.441 110 l 337.762 103.922 l 341.84 100.961 l 346 97.922 l 350.16 
94.879 l 354.238 91.84 l 358.398 88.879 l 362.48 85.84 l 370.801 79.762 
l 374.879 76.801 l 379.039 73.762 l 383.199 70.719 l 387.281 67.68 l 391.441
 64.719 l 395.602 61.68 l 399.68 58.641 l 403.84 55.602 l 408 52.641 l 412.078
 49.602 l 416.238 46.559 l 420.398 43.52 l 424.48 40.559 l 428.641 37.52
 l 432.719 34.48 l 436.879 31.441 l 441.039 28.48 l 445.121 25.441 l 449.281
 22.398 l 453.441 19.359 l 457.52 16.398 l 461.68 13.359 l 461.688 13.359
 l S Q
0 g
0.8 w
q 1 0 0 -1 0 352 cm
52.641 12.238 m 52.641 310.078 l 461.68 310.078 l 461.68 12.238 l h
52.641 12.238 m 52.648 12.238 l S Q
Q Q
showpage
%%Trailer
count op_count sub {pop} repeat
countdictstack dict_count sub {end} repeat
cairo_eps_state restore
%%EOF

%%EndDocument
 @endspecial 0 TeXcolorgray 255 2665 a Fm(Figura)31 b(7:)40
b(T)-8 b(ens\343o)31 b(de)g(Hall)f(em)h(fun\347\343o)g(do)f(camp)s(o)h
(magn\351tico)h(no)e(in)m(terior)i(do)f(solenoide.)p
0 TeXcolorgray 0 TeXcolorgray 966 3102 a Fj(n)25 b Fh(=)1152
3040 y Fj(B)1221 3054 y Fa(b)r(obina)p 1152 3081 283
4 v 1166 3164 a Fj(B)1235 3178 y Fa(espira)1470 3102
y Fd(\))g Fj(n)g Fh(=)1772 3040 y(1)p Fj(:)p Fh(91)d
Fd(\002)d Fh(10)2134 3007 y Ff(\000)p Fg(3)p 1772 3081
458 4 v 1772 3164 a Fh(8)p Fj(:)p Fh(98)j Fd(\002)d Fh(10)2134
3138 y Ff(\000)p Fg(6)2265 3102 y Fh(=)25 b(213)31 b
Fm(espiras)-71 3460 y Fh(\001)p Fj(n)25 b Fh(=)181 3289
y Fb(s)p 272 3289 1754 4 v 43 x(\024)444 3398 y Fj(@)5
b(n)p 329 3439 337 4 v 329 3522 a(@)g(B)451 3536 y Fa(b)r(obina)676
3460 y Fh(\001)p Fj(B)821 3474 y Fa(b)r(obina)1034 3332
y Fb(\025)1082 3354 y Fg(2)1142 3460 y Fh(+)1233 3332
y Fb(\024)1390 3398 y Fj(@)g(n)p 1291 3439 308 4 v 1291
3522 a(@)g(B)1413 3536 y Fa(espira)1608 3460 y Fh(\001)p
Fj(B)1753 3474 y Fa(espira)1937 3332 y Fb(\025)1985 3354
y Fg(2)2050 3460 y Fh(=)2146 3260 y Fb(v)2146 3311 y(u)2146
3366 y(u)2146 3420 y(t)p 2242 3260 1474 4 v -88 x(\024)2300
3398 y Fh(\001)p Fj(B)2445 3412 y Fa(b)r(obina)p 2300
3439 359 4 v 2352 3522 a Fj(B)2421 3536 y Fa(espira)2668
3332 y Fb(\025)2716 3354 y Fg(2)2776 3460 y Fh(+)2867
3304 y Fb(")2920 3460 y Fd(\000)3001 3398 y Fj(B)3070
3412 y Fa(b)r(obina)3283 3398 y Fh(\001)p Fj(B)3428 3412
y Fa(espira)p 3001 3439 613 4 v 3125 3534 a Fh(\()p Fj(B)3229
3548 y Fa(espira)3414 3534 y Fh(\))3449 3493 y Fg(2)3623
3304 y Fb(#)3676 3327 y Fg(2)3741 3460 y Fd(\))488 3820
y Fh(\001)p Fj(n)25 b Fh(=)740 3653 y Fb(s)p 831 3653
1978 4 v 38 x(\024)889 3758 y Fh(0)p Fj(:)p Fh(04)d Fd(\002)d
Fh(10)1251 3732 y Ff(\000)p Fg(3)p 889 3799 458 4 v 889
3882 a Fh(8)p Fj(:)p Fh(98)j Fd(\002)d Fh(10)1251 3856
y Ff(\000)p Fg(6)1357 3691 y Fb(\025)1405 3714 y Fg(2)1464
3820 y Fh(+)1555 3691 y Fb(\024)1603 3820 y Fd(\000)1684
3758 y Fh(1)p Fj(:)p Fh(91)j Fd(\002)e Fh(10)2047 3732
y Ff(\000)p Fg(3)2162 3758 y Fd(\002)g Fh(0)p Fj(:)p
Fh(31)i Fd(\002)e Fh(10)2616 3732 y Ff(\000)p Fg(6)p
1684 3799 1028 4 v 1913 3895 a Fh(\()q(8)p Fj(:)p Fh(98)h
Fd(\002)f Fh(10)2311 3869 y Ff(\000)p Fg(6)2407 3895
y Fh(\))2442 3852 y Fg(2)2721 3691 y Fb(\025)2769 3714
y Fg(2)2834 3820 y Fh(=)k(9)31 b Fm(espiras)1462 4081
y Fj(n)25 b Fh(=)g(213)c Fd(\006)f Fh(9)31 b(\()p Fm(espiras)p
Fh(\))p 1434 3988 894 4 v 1434 4130 4 145 v 2324 4130
V 1434 4132 894 4 v -128 4361 a Fl(4\))k(Indu\347\343o)14
4474 y(a\))3306 b Fm([)p Fk(2,5)32 b(valor)-5 b(es)7
b Fm(])14 4587 y(Primeiro)32 b(analisamos)g(o)g(Canal)g(A)f(\(Fig.)43
b(2)32 b(do)f(en)m(unciado\))j(onde)e(se)f(observ)-5
b(a)31 b(o)g(sinal)h(do)f Fk(prim\341rio)p Fm(.)43 b(Preci-)-128
4700 y(samos)30 b(de)g(estimar)592 4664 y Fg(d)p Fi(i)p
591 4679 65 4 v 591 4731 a Fg(d)p Fi(t)666 4700 y Fm(,)g(mas)g(como)g
(o)g(oscilosc\363pio)h(n\343o)g(mede)f(v)-5 b(aria\347\365)s(es)30
b(de)g(corren)m(te,)i(medimos)f(a)f(v)-5 b(aria\347\343o)31
b(de)-128 4813 y(tens\343o)g(n)m(uma)h(resist\352ncia)f(conhecida)h(de)
e Fh(100)i(\012)p Fm(.)1128 5038 y Fh(\001)p Fj(t)25
b Fd(\031)g Fh(4)p Fj(:)p Fh(0)31 b Fm(div)20 b Fd(\002)g
Fh(0)p Fj(:)p Fh(15)32 b Fm(ms/div)25 b Fd(\031)g Fh(0)p
Fj(:)p Fh(60)32 b Fm(ms)1196 5205 y Fh(\001)p Fj(V)45
b Fd(\031)25 b Fh(8)p Fj(:)p Fh(0)32 b Fm(div)20 b Fd(\002)g
Fh(1)p Fj(:)p Fh(0)31 b Fm(V/div)25 b Fd(\031)g Fh(8)p
Fj(:)p Fh(0)32 b Fm(V)-128 5372 y(Aplicando)g(a)e(lei)h(de)f(Ohm,)1179
5522 y Fh(\001)p Fj(V)45 b Fh(=)25 b Fj(R)q Fh(\001)p
Fj(I)32 b Fd(,)25 b Fh(\001)p Fj(I)32 b Fh(=)2037 5460
y(\001)p Fj(V)p 2037 5501 149 4 v 2077 5584 a(R)2221
5522 y Fd(\031)25 b Fh(80)32 b Fm(mA)1339 5738 y Fh(d)p
Fj(i)p 1338 5778 84 4 v 1338 5862 a Fh(d)p Fj(t)1456
5799 y Fd(\031)1562 5738 y Fh(\001)p Fj(I)p 1562 5778
123 4 v 1569 5862 a Fh(\001)p Fj(t)1720 5799 y Fd(\))1876
5738 y Fh(d)p Fj(i)p 1875 5778 84 4 v 1875 5862 a Fh(d)p
Fj(t)1993 5799 y Fd(\031)25 b Fh(133)32 b Fm(A/s)p 1837
5650 597 4 v 1837 5888 4 241 v 2429 5888 V 1837 5890
597 4 v 0 TeXcolorgray 1858 6192 a(6)p 0 TeXcolorgray
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray -128 -272 a Fm(f.e.m.:)14 -160 y(P)m(ara)28
b(determinar)g(exp)s(erimen)m(talmen)m(te)i(a)d(f.e.m.)39
b(induzida)28 b(no)g Fk(se)-5 b(cund\341rio)33 b Fm(basta)27
b(determinar)i(a)d(amplitude)-128 -47 y(do)36 b(sinal)g(medido)h(p)s
(elo)f(Canal)h(B)e(do)h(oscilosc\363pio)h(\(Fig.)f(2)g(do)g(en)m
(unciado\),)k(con)m(tudo)d(o)f(en)m(unciado)i(tem)e(mais)-128
66 y(uma)31 b("rasteira".)42 b(Como)31 b(p)s(o)s(diam)f(v)m(eri\034car)
i(p)s(elo)e(par\342metro)i("O\033setB"o)f(zero)g(n\343o)g(esta)m(v)-5
b(a)30 b(b)s(em)h(de\034nido.)1107 262 y Fh(2)p Fj(")26
b Fh(=)f(3)p Fj(:)p Fh(0)31 b Fm(div)20 b Fd(\002)g Fh(0)p
Fj(:)p Fh(2)31 b Fm(V/div)26 b Fd(\))53 b Fj(")26 b Fh(=)f(0)p
Fj(:)p Fh(3)31 b Fm(V)p 2220 174 435 4 v 2220 288 4 116
v 2651 288 V 2220 290 435 4 v -128 457 a Fj(M)10 b Fm(:)1465
703 y Fj(")26 b Fh(=)f Fj(M)1738 641 y Fh(d)p Fj(i)p
1737 682 84 4 v 1737 765 a Fh(d)p Fj(t)1855 703 y Fd(\))h
Fj(M)35 b Fh(=)2222 641 y Fj(")p 2201 682 85 4 v 2212
739 a Fg(d)p Fi(i)p 2211 754 65 4 v 2211 806 a Fg(d)p
Fi(t)924 984 y Fj(M)1012 998 y Fa(exp)r(erimen)n(tal)1440
984 y Fh(=)1556 923 y(0)p Fj(:)p Fh(3)p 1546 963 137
4 v 1546 1047 a(133)1717 984 y Fd(\))54 b Fj(M)1950 998
y Fa(exp)r(erimen)n(tal)2377 984 y Fh(=)25 b(2)p Fj(:)p
Fh(26)32 b Fm(mH)p 1834 897 1003 4 v 1834 1038 4 144
v 2833 1038 V 1834 1040 1003 4 v 14 1167 a(A)d(partir)j(da)e(Eq.)h(3)f
(do)h(en)m(unciado,)107 1338 y Fj(")p 86 1378 85 4 v
97 1435 a Fg(d)p Fi(i)p 96 1450 65 4 v 96 1502 a Fg(d)p
Fi(t)205 1399 y Fh(=)25 b Fj(M)389 1413 y Fa(te\363rico)627
1399 y Fh(=)g Fj(\031)s(\026)833 1413 y Fg(0)882 1338
y Fj(N)p 882 1378 83 4 v 909 1462 a(l)975 1399 y(r)1019
1362 y Fg(2)1058 1399 y Fj(N)1131 1414 y Fi(b)1191 1399
y Fd(\))g Fj(M)1395 1413 y Fa(te\363rico)1632 1399 y
Fh(=)g Fj(\031)e Fd(\002)d Fh(4)p Fj(\031)k Fd(\002)c
Fh(10)2196 1362 y Ff(\000)p Fg(7)2311 1399 y Fd(\002)g
Fh(3000)i Fd(\002)2695 1326 y Fb(\000)2737 1399 y Fh(1)p
Fj(:)p Fh(38)g Fd(\002)e Fh(10)3100 1362 y Ff(\000)p
Fg(2)3195 1326 y Fb(\001)3236 1345 y Fg(2)3296 1399 y
Fd(\002)g Fh(1200)27 b Fd(\))1502 1684 y Fj(M)1590 1698
y Fa(te\363rico)1828 1684 y Fh(=)e(2)p Fj(:)p Fh(71)31
b Fm(mH)p 1474 1597 813 4 v 1474 1724 4 130 v 2283 1724
V 1474 1726 813 4 v 14 1847 a(Alguns)f(autores)h(comparam)g(v)-5
b(alores)31 b(exp)s(erimen)m(tais)g(com)g(v)-5 b(alores)30
b(previstos)g(para)h(uma)f(grandeza)i(atra)m(v)m(\351s)-128
1959 y(de)f(uma)g(exactid\343o)g(de\034nida)h(da)e(seguin)m(te)i
(forma:)927 2081 y Fb(\014)927 2135 y(\014)927 2190 y(\014)927
2244 y(\014)968 2150 y Fj(M)1056 2164 y Fa(exp)r(erimen)n(tal)1478
2150 y Fd(\000)20 b Fj(M)1657 2164 y Fa(te\363rico)p
968 2192 902 4 v 1268 2275 a Fj(M)1356 2289 y Fa(te\363rico)1879
2081 y Fb(\014)1879 2135 y(\014)1879 2190 y(\014)1879
2244 y(\014)1935 2213 y Fh(=)2031 2081 y Fb(\014)2031
2135 y(\014)2031 2190 y(\014)2031 2244 y(\014)2071 2151
y Fh(2)p Fj(:)p Fh(26)i Fd(\000)e Fh(2)p Fj(:)p Fh(71)p
2071 2192 435 4 v 2207 2275 a(2)p Fj(:)p Fh(71)2515 2081
y Fb(\014)2515 2135 y(\014)2515 2190 y(\014)2515 2244
y(\014)2571 2213 y Fd(\031)25 b Fh(17\045)14 2425 y Fl(b\))3298
b Fm([)p Fk(2,5)32 b(valor)-5 b(es)7 b Fm(])14 2538 y(P)m(ara)28
b(esb)s(o)s(\347ar)f(o)h(sinal)f(induzido)i(no)e Fk(se)-5
b(cund\341rio)34 b Fm(precisamos)28 b(de)g(sab)s(er)f(a)g(forma)h(do)g
(sinal,)g(a)f(sua)g(amplitude)-128 2651 y(\()p Fj(A)p
Fm(\))k(e)f(o)h(seu)f(p)s(er\355o)s(do)g(\()p Fj(T)13
b Fm(\).)14 2764 y(P)m(ela)35 b(Eq.)g(3)g(no)g(en)m(unciado)h(sab)s
(emos)e(que)h(a)g(f.e.m.)53 b(induzida)36 b(no)f Fk(se)-5
b(cund\341rio)41 b Fm(\351)35 b(prop)s(orcional)h(\340)e(deriv)-5
b(ada)-128 2877 y(em)38 b(ordem)g(ao)f(temp)s(o)h(do)f(sinal)g(do)h
Fk(prim\341rio)p Fm(.)60 b(O)37 b(sinal)g(do)g(tip)s(o)h("den)m
(te-de-serra")h(p)s(o)s(de)e(ser)g(apro)m(ximado)i(a)-128
2989 y(uma)32 b(sucess\343o)e(de)h(segmen)m(tos)h(de)f(recta)h(rep)s
(etidos)f(in\034nitamen)m(te,)j(to)s(dos)c(com)i(o)e(mesmo)i(decliv)m
(e.)43 b(Ora,)31 b(nestes)-128 3102 y(segmen)m(tos)g(a)f(deriv)-5
b(ada)31 b(\351)f(simplesmen)m(te)i(uma)e(constan)m(te,)i(como)f
(mostra)f(a)g(Fig.)g(8.)41 b(Con)m(tudo)32 b(nos)d(extremos,)i(o)-128
3215 y(sinal)g(n\343o)g(\351)g(est\341)m(v)m(el,)h(logo)f(a)f(deriv)-5
b(ada)32 b(apresen)m(ter\341)g(uma)f(p)s(erturba\347\365)s(es)g(\(Fig.)
g(8)g(a)g(tracejado\).)42 b(Aplicando)32 b(um)-128 3328
y(racio)s(cinio)g(semelhan)m(te)g(\340)e(al\355nea)h(an)m(terior,)h
(mas)f(man)m(tendo-nos)h(afastados)f(das)f(extremidades.)1128
3554 y Fh(\001)p Fj(t)25 b Fd(\031)g Fh(4)p Fj(:)p Fh(0)31
b Fm(div)20 b Fd(\002)g Fh(0)p Fj(:)p Fh(05)32 b Fm(ms/div)25
b Fd(\031)g Fh(0)p Fj(:)p Fh(20)32 b Fm(ms)1196 3716
y Fh(\001)p Fj(V)45 b Fd(\031)25 b Fh(4)p Fj(:)p Fh(0)32
b Fm(div)20 b Fd(\002)g Fh(0)p Fj(:)p Fh(1)31 b Fm(V/div)25
b Fd(\031)g Fh(0)p Fj(:)p Fh(4)32 b Fm(V)-128 3879 y(Aplicando)g(a)e
(lei)h(de)f(Ohm,)1202 4029 y Fh(\001)p Fj(V)45 b Fh(=)25
b Fj(R)q Fh(\001)p Fj(I)32 b Fd(,)25 b Fh(\001)p Fj(I)32
b Fh(=)2060 3967 y(\001)p Fj(V)p 2060 4008 149 4 v 2100
4091 a(R)2244 4029 y Fd(\031)25 b Fh(4)31 b Fm(mA)1390
4212 y Fh(d)p Fj(i)p 1389 4253 84 4 v 1389 4336 a Fh(d)p
Fj(t)1507 4273 y Fd(\031)1613 4212 y Fh(\001)p Fj(I)p
1613 4253 123 4 v 1620 4336 a Fh(\001)p Fj(t)1771 4273
y Fd(\))1898 4212 y Fh(d)p Fj(i)p 1898 4253 84 4 v 1898
4336 a Fh(d)p Fj(t)2016 4273 y Fd(\031)25 b Fh(20)31
b Fm(A/s)14 4462 y(Logo)g(a)f(f.e.m.)41 b(\(amplitude)32
b(do)e(sinal)h(no)f Fk(se)-5 b(cund\341rio)6 b Fm(\),)786
4700 y Fj(A)25 b Fh(=)g Fj(")h Fh(=)f Fj(M)1248 4638
y Fh(d)p Fj(i)p 1247 4679 V 1247 4762 a Fh(d)p Fj(t)1365
4700 y Fd(\))h Fj(A)f Fh(=)g(2)p Fj(:)p Fh(71)d Fd(\002)e
Fh(10)2034 4662 y Ff(\000)p Fg(3)2149 4700 y Fd(\002)g
Fh(20)26 b Fd(\))54 b Fj(A)25 b Fd(\031)g Fh(54)31 b
Fm(m)-8 b(V)p 2472 4612 503 4 v 2472 4727 4 116 v 2971
4727 V 2472 4729 503 4 v 14 4916 a(O)30 b(p)s(er\355o)s(do)g(no)h
Fk(se)-5 b(cund\341rio)37 b Fm(\351)30 b(o)h(mesmo)g(do)f(sinal)h(no)f
Fk(prim\341rio)p Fm(,)g(ou)g(seja,)1017 5111 y Fj(T)38
b Fh(=)25 b(5)p Fj(:)p Fh(2)32 b Fm(div)20 b Fd(\002)g
Fh(0)p Fj(:)p Fh(05)32 b Fm(ms/div)25 b Fd(\))53 b Fj(T)38
b Fh(=)25 b(0)p Fj(:)p Fh(26)32 b Fm(ms)p 2197 5024 547
4 v 2197 5138 4 116 v 2740 5138 V 2197 5140 547 4 v 14
5307 a Fl(c\))3310 b Fm([)p Fk(2,5)32 b(valor)-5 b(es)7
b Fm(])14 5420 y(A)m(o)35 b(in)m(tro)s(duzir-se)i(uma)f(barra)g(de)p
1 0 0 TeXcolorrgb 36 w(n\355quel)p 0 TeXcolorgray 36
w(/)p 0 0 1 TeXcolorrgb 35 w(ferrite)p 0 TeXcolorgray
36 w(estamos)f(a)h(alterar)g(o)f(meio)h(do)g(sistema)g(f\355sico.)55
b(P)m(o)s(de-)-128 5532 y(mos)34 b(v)m(eri\034car)h(que)e(a)g(p)s
(ermeabilidade)j(magn\351tica)f(do)e(meio)h(\351)g(apro)m(ximadamen)m
(te)p 1 0 0 TeXcolorrgb 37 w(99)p 0 TeXcolorgray 33 w(/)p
0 0 1 TeXcolorrgb 34 w(637)p 0 TeXcolorgray 34 w(v)m(ezes)f(sup)s
(erior)h(\340)-128 5645 y(p)s(ermeabilidade)f(magn\351tica)f(inicial)f
(\(do)g(v)-5 b(\341cuo\).)p 1 0 0 TeXcolorrgb 513 5841
a Fj(\026)568 5855 y Fa(n\355quel)p 513 5883 246 4 v
588 5966 a Fj(\026)643 5980 y Fg(0)793 5904 y Fh(=)899
5842 y(1)p Fj(:)p Fh(25)22 b Fd(\002)e Fh(10)1262 5809
y Ff(\000)p Fg(4)1387 5842 y Fm(H/m)p 899 5883 677 4
v 930 5966 a Fh(4)p Fj(\031)k Fd(\002)19 b Fh(10)1231
5940 y Ff(\000)p Fg(7)1357 5966 y Fm(H/m)1611 5904 y
Fd(\031)25 b Fh(99)p 0 0 1 TeXcolorrgb 1988 5842 a Fj(\026)2043
5856 y Fa(ferrite)p 1988 5883 246 4 v 2064 5966 a Fj(\026)2119
5980 y Fg(0)2269 5904 y Fh(=)2402 5842 y(8)c Fd(\002)f
Fh(10)2649 5809 y Ff(\000)p Fg(4)2774 5842 y Fm(H/m)p
2375 5883 616 4 v 2375 5966 a Fh(4)p Fj(\031)k Fd(\002)19
b Fh(10)2676 5940 y Ff(\000)p Fg(7)2802 5966 y Fm(H/m)3025
5904 y Fd(\031)25 b Fh(637)p 0 TeXcolorgray 1858 6192
a Fm(7)p 0 0 1 TeXcolorrgb eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 0 1 TeXcolorrgb 0 TeXcolorgray
0 0 1 TeXcolorrgb 0 TeXcolorgray 1880 817 a @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  0.8 SLW 0  setgray  /ArrowA { moveto } def /ArrowB { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 } def  [ 142.26372 0.0 -142.26372 0.0    /Lineto /lineto load def
0  setlinejoin false Line  gsave 0.8 SLW 0  setgray  1. .setopacityalpha
  0  setlinejoin 0  setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 2.0
5. Tbar  EndArrow  moveto } def /ArrowB { BeginArrow 1.  1.  scale
2.0 5. Tbar  EndArrow  } def  0.8 SLW 0  setgray  /ArrowA { BeginArrow
1.  1.  scale 2.0 5. Tbar  EndArrow  moveto } def /ArrowB { BeginArrow
1.  1.  scale 2.0 5. Tbar  EndArrow  } def  [ 99.5846 113.81097 -71.13185
113.81097    /Lineto /lineto load def 0  setlinejoin false Line  gsave
0.8 SLW 0  setgray  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -99.5846 68.2864 -142.26372
68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -42.67911 68.2864 -56.90549
56.90549 -71.13185 79.66776 -85.35823 56.90549 -99.5846 68.2864   
/Lineto /lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 1
0 0  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0 
0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 71.13185 68.2864 -42.67911
68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 68.2864 113.81097
56.90549 99.5846 79.66776 85.35823 56.90549 71.13185 68.2864    /Lineto
/lineto load def 0  setlinejoin false Line  gsave 2.0 SLW 1 0 0  setrgbcolor
 1. .setopacityalpha   0  setlinecap [  5.0  3.0  0.0  0.0 ] -2 -1
add  DashLine  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 142.26372 68.2864 128.03734
68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow  moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  0.8 SLW 1 0 0  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5
2.   1. .setopacityalpha  Arrow  EndArrow  } def  [ 0.0 68.2864 0.0
0.0    /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8
SLW 1 0 0  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale  false
0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow  moveto } def
/ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha
 Arrow  EndArrow  } def  0.8 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale  false 0.4 1.4 1.5 2.   1. .setopacityalpha  Arrow  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale  false 0.4 1.4 1.5
2.   1. .setopacityalpha  Arrow  EndArrow  } def  [ 0.0 -68.2864 0.0
0.0    /Lineto /lineto load def 0  setlinejoin false Line  gsave 0.8
SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0  setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 71.13185 -68.2864 -42.67911
-68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -42.67911 -68.2864 -56.90549
-56.90549 -71.13185 -79.66776 -85.35823 -56.90549 -99.5846 -68.2864
   /Lineto /lineto load def 0  setlinejoin false Line  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial
@beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ -99.5846 -68.2864 -142.26372
-68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 128.03734 -68.2864 113.81097
-56.90549 99.5846 -79.66776 85.35823 -56.90549 71.13185 -68.2864  
 /Lineto /lineto load def 0  setlinejoin false Line  gsave 2.0 SLW
0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinecap [  5.0  3.0
 0.0  0.0 ] -2 -1 add  DashLine  grestore end
 
@endspecial @beginspecial @setspecial
  tx@Dict begin STP newpath /ArrowA { BeginArrow 1.  1.  scale 1 setlinecap
0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow  moveto } def /ArrowB
{ BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0
0 moveto  EndArrow  } def  2.0 SLW 0 0 1  setrgbcolor  /ArrowA { BeginArrow
1.  1.  scale 1 setlinecap 0 0 moveto 0 0.1 L stroke 0 0 moveto  EndArrow
 moveto } def /ArrowB { BeginArrow 1.  1.  scale 1 setlinecap 0 0 moveto
0 0.1 L stroke 0 0 moveto  EndArrow  } def  [ 142.26372 -68.2864 128.03734
-68.2864    /Lineto /lineto load def 0  setlinejoin false Line  gsave
2.0 SLW 0 0 1  setrgbcolor  1. .setopacityalpha   0  setlinejoin 0
 setlinecap stroke  grestore end
 
@endspecial
1880 817 a
tx@Dict begin { 14.22636 128.03734 } PutCoor PutBegin  end
 1880 817 a 1847 848 a Fj(T)1880 817 y
tx@Dict begin  PutEnd  end
 1880
817 a 1880 817 a
tx@Dict begin { 14.22636 34.1432 } PutCoor PutBegin  end
 1880 817 a 1 0 0 TeXcolorrgb 1846 848
a Fj(A)p 0 TeXcolorgray 1880 817 a
tx@Dict begin  PutEnd  end
 1880 817 a 1880 817
a
tx@Dict begin { 14.22636 -34.1432 } PutCoor PutBegin  end
 1880 817 a 0 0 1 TeXcolorrgb 1811 845 a Fd(\000)p Fj(A)p
0 TeXcolorgray 1880 817 a
tx@Dict begin  PutEnd  end
 1880 817 a 0 TeXcolorgray 635
1924 a Fm(Figura)32 b(8:)40 b(Esb)s(o)s(\347o)30 b(do)h(sinal)f
(indusido)h(no)g Fk(se)-5 b(cund\341rio)37 b Fm(na)30
b(al\355nea)i(b\).)p 0 TeXcolorgray 0 0 1 TeXcolorrgb
1 0 0 TeXcolorrgb 0 TeXcolorgray 14 2328 a(F)-8 b(acilmen)m(te)39
b(se)d(p)s(erceb)s(e,)i(p)s(ela)f(Eq.)g(3)f(do)h(en)m(unciado,)j(que)d
(o)g(co)s(e\034cien)m(te)h(de)f(indu\347\343o)g(m)m(\372tua)h
Fj(M)3540 2342 y Fg(12)3652 2328 y Fm(e,)g(p)s(or)-128
2441 y(conseguin)m(te,)31 b(a)d(amplitude)h(da)f(for\347a)g
(eletromotriz)i Fj(")e Fm(ira)h(sofrer)e(um)h(aumen)m(to)i(da)e(mesma)h
(ordem)f(de)h(grandeza.)p 1 0 0 TeXcolorrgb 450 2667
a Fj(")492 2681 y Fa(n\355quel)708 2667 y Fd(\031)c Fh(99)p
Fj(")936 2686 y Fa(a\))1029 2667 y Fd(\))53 b Fj(")1215
2681 y Fa(n\355quel)1431 2667 y Fd(\031)25 b Fh(30)31
b Fm(V)p 1145 2580 600 4 v 1145 2721 4 144 v 1741 2721
V 1145 2723 600 4 v 0 0 1 TeXcolorrgb 209 w Fj(")1967
2681 y Fa(ferrite)2183 2667 y Fd(\031)25 b Fh(637)p Fj(")2456
2686 y Fa(a\))2550 2667 y Fd(\))53 b Fj(")2736 2681 y
Fa(ferrite)2953 2667 y Fd(\031)24 b Fh(191)32 b Fm(V)p
2666 2580 645 4 v 2666 2708 4 131 v 3308 2708 V 2666
2710 645 4 v 1 0 0 TeXcolorrgb 0 TeXcolorgray 0 TeXcolorgray
1858 6192 a(8)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
